[{"title":"Hello World","url":"/2023/05/01/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"my-first-blog","url":"/2023/04/29/asd/","content":"<h3 id=\"Spring-Boot\"><a href=\"#Spring-Boot\" class=\"headerlink\" title=\"Spring Boot\"></a>Spring Boot</h3><p>Spring Boot 是一个快速开发框架，可以迅速搭建出一套基于 Spring 框架体系的应用，是 Spring Cloud 的基础。</p>\n<p>Spring Boot 开启了各种自动装配，从而简化代码的开发，不需要编写各种配置文件，只需要引入相关依赖就可以迅速搭建一个应用。</p>\n<ul>\n<li>特点</li>\n</ul>\n<p>1、不需要 web.xml</p>\n<p>2、不需要 springmvc.xml</p>\n<p>3、不需要 tomcat，Spring Boot 内嵌了 tomcat</p>\n<p>4、不需要配置 JSON 解析，支持 REST 架构</p>\n<p>5、个性化配置非常简单</p>\n<ul>\n<li>如何使用</li>\n</ul>\n<p>1、创建 Maven 工程，导入相关依赖。</p>\n","categories":["安全"],"tags":["Foo"]},{"title":"nihao","url":"/2023/05/02/nihao/","content":"<p>你好test</p>\n<p><img src=\"Fp7aKq--0PJJ6yD8kdJ6bU6csSL8UPnWsCQKPjaGIv0.png\" alt=\"image\"></p>\n"},{"title":"my-first-blog","url":"/2023/04/29/my-first-blog/","content":"<h3 id=\"Spring-Boot\"><a href=\"#Spring-Boot\" class=\"headerlink\" title=\"Spring Boot\"></a>Spring Boot</h3><p>Spring Boot 是一个快速开发框架，可以迅速搭建出一套基于 Spring 框架体系的应用，是 Spring Cloud 的基础。</p>\n<p>Spring Boot 开启了各种自动装配，从而简化代码的开发，不需要编写各种配置文件，只需要引入相关依赖就可以迅速搭建一个应用。</p>\n<ul>\n<li>特点</li>\n</ul>\n<p>1、不需要 web.xml</p>\n<p>2、不需要 springmvc.xml</p>\n<p>3、不需要 tomcat，Spring Boot 内嵌了 tomcat</p>\n<p>4、不需要配置 JSON 解析，支持 REST 架构</p>\n<p>5、个性化配置非常简单</p>\n<ul>\n<li>如何使用</li>\n</ul>\n<p>1、创建 Maven 工程，导入相关依赖。</p>\n","categories":["安全"],"tags":["Foo"]},{"title":"python的继承与多态","url":"/2020/02/29/python%E7%9A%84%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%9A%E6%80%81/","content":"<h1 id=\"python的继承与多态\"><a href=\"#python的继承与多态\" class=\"headerlink\" title=\"python的继承与多态\"></a>python的继承与多态</h1><h2 id=\"一、继承的介绍\"><a href=\"#一、继承的介绍\" class=\"headerlink\" title=\"一、继承的介绍\"></a>一、继承的介绍</h2><p>继承是一种创建新的类的方式，新创建的叫子类，继承的叫父类、超类、基类。继承的特点就是子类可以使用父类的属性（特征、技能）。继承是类与类之间的关系。</p>\n<p>继承可以减少代码冗余、提高重用性。</p>\n<h2 id=\"二、如何用继承？\"><a href=\"#二、如何用继承？\" class=\"headerlink\" title=\"二、如何用继承？\"></a>二、如何用继承？</h2><p>1.继承语法</p>\n<p>Class 派生类名（基类名）：#基类名写在括号里。</p>\n<p>在继承关系中，已有的，设计好的类称为父类或基类，新设计的类称为子类或派生类。派生类可以继承父类的公有成员，但是不能继承其私有成员。</p>\n<p>2. 继承的特点</p>\n<p>在继承中基类的构造函数（init()方法）不会被自动调用，它需要在其派生类的构造中亲自专门调用。</p>\n<p>如果需要在派生类中调用基类的方法时，通过“基类名.方法名()”的方法来实现，需要加上基类的类名前缀，且需要带上self参数变量。区别于在类中调用普通函数时并不需要带上self 参数。也可以使用内置函数super（）实现这一目的。</p>\n<p>Python总是首先查找对应类型的方法，如果它不能在派生类中找到对应的方法，它才开始到基类中逐个查找（先在本类查找调用的方法，找不到才去基类中找）。</p>\n<h3 id=\"三、继承demo\"><a href=\"#三、继承demo\" class=\"headerlink\" title=\"三、继承demo\"></a>三、继承demo</h3><h3 id=\"3-1-单继承\"><a href=\"#3-1-单继承\" class=\"headerlink\" title=\"3.1 单继承\"></a>3.1 单继承</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>: <span class=\"comment\">#父类</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----吃-----&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">drink</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----喝-----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>): <span class=\"comment\">#子类继承父类</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">wang_cai = Dog()</span><br><span class=\"line\">wang_cai.eat()</span><br><span class=\"line\">wang_cai.drink()</span><br></pre></td></tr></table></figure>\n<p><img src=\"jn_ARz9I-TyUlhpzZYHKxpNdGhiFMGq8r86UhyMy9Ew.png\" alt=\"image\"></p>\n<h3 id=\"3-2多层继承\"><a href=\"#3-2多层继承\" class=\"headerlink\" title=\"3.2多层继承\"></a>3.2多层继承</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----吃-----&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">drink</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----喝-----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bark</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----汪汪叫------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">XTQ</span>(<span class=\"title class_ inherited__\">Dog</span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">catch</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;----捉老鼠----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">xtq = XTQ()</span><br><span class=\"line\">xtq.eat()</span><br><span class=\"line\">xtq.bark()</span><br></pre></td></tr></table></figure>\n<p><img src=\"iyckHw-Y1YEl0W5AR1rdpI-DI4HVwRSLpp8iqlcmrLo.png\" alt=\"image\"></p>\n<h3 id=\"3-3重写父类方法\"><a href=\"#3-3重写父类方法\" class=\"headerlink\" title=\"3.3重写父类方法\"></a>3.3重写父类方法</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>: <span class=\"comment\">#父类</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----吃-----&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">drink</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----喝-----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bark</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;-----汪汪叫------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">XTQ</span>(<span class=\"title class_ inherited__\">Dog</span>): <span class=\"comment\">#重写Dog方法</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;定义了一个哮天犬 类&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bark</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;----嗷嗷叫-----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">catch</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;----捉老鼠----&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">xtq = XTQ()</span><br><span class=\"line\">xtq.eat()</span><br><span class=\"line\">xtq.bark()</span><br></pre></td></tr></table></figure>\n<p><img src=\"ZNFdOuFSOrFAVux6dAf-fYc-V9TNLk2qbaJW5770T8U.png\" alt=\"image\"></p>\n<h2 id=\"四、多继承\"><a href=\"#四、多继承\" class=\"headerlink\" title=\"四、多继承\"></a>四、多继承</h2><p><img src=\"Fp7aKq--0PJJ6yD8kdJ6bU6csSL8UPnWsCQKPjaGIv0.png\" alt=\"image\"></p>\n<p>从图中能够看出，所谓多继承，即子类有多个父类，并且具有它们的特征。</p>\n<p>Python中多继承的格式如下:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义一个父类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">printA</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----A----&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个父类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">printB</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----B----&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个子类，继承自A、B</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C</span>(A,B):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">printC</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;----C----&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">obj_C = C()</span><br><span class=\"line\">obj_C.printA()</span><br><span class=\"line\">obj_C.printB()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(C.__mro__) <span class=\"comment\">#可以查看C类的对象搜索方法时的先后顺序</span></span><br></pre></td></tr></table></figure>\n\n\n<p>如果在上面的多继承例子中，如果父类A和父类B中，有一个同名的方法，那么通过子类去调用的时候，调用哪个？</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(C.__mro__) <span class=\"comment\">#可以查看C类的对象搜索方法时的先后顺序</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"RWx47g8bIWzo7FHKYjEtbsKwZVb9gkcVaETwpqQiuIs.png\" alt=\"image\"></p>\n<h2 id=\"五、多态\"><a href=\"#五、多态\" class=\"headerlink\" title=\"五、多态\"></a>五、多态</h2><h3 id=\"5-1-什么是多态？\"><a href=\"#5-1-什么是多态？\" class=\"headerlink\" title=\"5.1 什么是多态？\"></a>5.1 什么是多态？</h3><p>多态的概念是应用于Java和C#这一类强类型语言中，而Python崇尚“鸭子类型”。</p>\n<p>所谓多态：定义时的类型和运行时的类型不一样，此时就成为多态。</p>\n<h3 id=\"5-2案例\"><a href=\"#5-2案例\" class=\"headerlink\" title=\"5.2案例\"></a>5.2案例</h3><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Duck</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">quack</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Quaaaaaack!&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Bird</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">quack</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;bird imitate duck.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Doge</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">quack</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;doge imitate duck.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">in_the_forest</span>(<span class=\"params\">duck</span>):</span><br><span class=\"line\">    duck.quack()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">duck = Duck()</span><br><span class=\"line\">bird = Bird()</span><br><span class=\"line\">doge = Doge()</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [duck, bird, doge]:</span><br><span class=\"line\">        in_the_forest(x)</span><br></pre></td></tr></table></figure>\n<p><img src=\"_45NxnmugigTAWpjEys5XrxlUOuMD3f_3wl3n1tQrqg.png\" alt=\"image\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文以生活中的基础现象为切入点，主要介绍了Python基础中继承和多态，包括单继承、多继承的语法、多态常见的 “鸭子类型”、 以及如何重写父类的方法都做了详细的讲解。</p>\n","categories":["Python"],"tags":["继承","多态"]},{"title":"my-first-blog","url":"/2023/04/29/qwe/","content":"<h3 id=\"Spring-Boot\"><a href=\"#Spring-Boot\" class=\"headerlink\" title=\"Spring Boot\"></a>Spring Boot</h3><p>Spring Boot 是一个快速开发框架，可以迅速搭建出一套基于 Spring 框架体系的应用，是 Spring Cloud 的基础。</p>\n<p>Spring Boot 开启了各种自动装配，从而简化代码的开发，不需要编写各种配置文件，只需要引入相关依赖就可以迅速搭建一个应用。</p>\n<ul>\n<li>特点</li>\n</ul>\n<p>1、不需要 web.xml</p>\n<p>2、不需要 springmvc.xml</p>\n<p>3、不需要 tomcat，Spring Boot 内嵌了 tomcat</p>\n<p>4、不需要配置 JSON 解析，支持 REST 架构</p>\n<p>5、个性化配置非常简单</p>\n<ul>\n<li>如何使用</li>\n</ul>\n<p>1、创建 Maven 工程，导入相关依赖。</p>\n","categories":["安全"],"tags":["Foo","Bar"]},{"title":"搭建Hexo博客进阶","url":"/2020/02/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6/","content":"<h1 id=\"搭建Hexo博客进阶\"><a href=\"#搭建Hexo博客进阶\" class=\"headerlink\" title=\"搭建Hexo博客进阶\"></a>搭建Hexo博客进阶</h1><h2 id=\"更换模板\"><a href=\"#更换模板\" class=\"headerlink\" title=\"更换模板\"></a>更换模板</h2><p>到themes目录下，下载自己喜欢主题模板</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/probberechts/hexo-theme-cactus.git</span><br></pre></td></tr></table></figure>\n<p>在项目的_config.yml文件中进行更换主题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">theme: hexo-theme-cactus</span><br></pre></td></tr></table></figure>\n<p>在项目目录下，打开git bash，输入以下命令，清除缓存，生成静态文件，查看效果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s  <span class=\"comment\">#相当于 启动服务 hexo server</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"新建一个导航栏的项\"><a href=\"#新建一个导航栏的项\" class=\"headerlink\" title=\"新建一个导航栏的项\"></a>新建一个导航栏的项</h2><p>在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml找到nav</p>\n<p><img src=\"C-a5CXYmE9OHOUAtBMIgp_FvbBJmTlQW6DqHBr2Sf7o.png\" alt=\"image\"></p>\n<p><img src=\"Nb5nWx1QkeQdj5eanykeR44MqMoc4Mp-Zr4Skuk_I7A.png\" alt=\"image\"></p>\n<h2 id=\"更换语言类型\"><a href=\"#更换语言类型\" class=\"headerlink\" title=\"更换语言类型\"></a>更换语言类型</h2><p>更换项目的_config.yml 为下面的内容即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\">title: 兀自</span><br><span class=\"line\">subtitle: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">description: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author: Garckz</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"修改欢迎页面的内容\"><a href=\"#修改欢迎页面的内容\" class=\"headerlink\" title=\"修改欢迎页面的内容\"></a>修改欢迎页面的内容</h2><p>先查看你language用的语言模板，这里是：zh-CN</p>\n<p>所以修改主题文件夹下面的language文件下面的zh-CN.yml文件的内容即可。</p>\n<h2 id=\"添加搜索-XML\"><a href=\"#添加搜索-XML\" class=\"headerlink\" title=\"添加搜索(XML)\"></a>添加搜索(XML)</h2><p>先在在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml找到nav添加一个标签。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nav:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  articles: /archives/</span><br><span class=\"line\">  projects: http://github.com/probberechts</span><br><span class=\"line\">  search: /search/</span><br></pre></td></tr></table></figure>\n<p>用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\" title=\"hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p><img src=\"A_G15Imlu2VdAlS_XN-XiIyTocPIenmtwXRqJwje_pM.png\" alt=\"image\"></p>\n<p>执行下面命令创建一个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page search</span><br></pre></td></tr></table></figure>\n<p>进入项目地址下的source&#x2F;search&#x2F;index.md，修改md文件的头为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Search</span><br><span class=\"line\"><span class=\"built_in\">type</span>: search</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p><img src=\"uP6XsJwwD34izTmKUtWbOB8jrWpXSv00OmjGd2f6a6Y.png\" alt=\"image\"></p>\n<p>出现页面之后，搜索到的内容不可以超链接点过去访问，这时候需要进行以下的配置。</p>\n<p><strong>配置1</strong></p>\n<p>在项目下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Search</span></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"KUhFEBqwSuss11_P-eGBshQhrbDC2W5_BWp0MMtB65I.png\" alt=\"image\"></p>\n<ul>\n<li><p>path：表示搜索后生成的文件路径，可以生成xml和json两种格式。</p>\n</li>\n<li><p>field：表示搜索的范围，有“​​post、page和all​​”三种值。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">post：所有的文章；</span><br><span class=\"line\">page：所有顶部导航选项的页面；</span><br><span class=\"line\">all：所有的文章和顶部导航选项的页面。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>content：是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true.</li>\n<li>format：搜索到的内容、选项的格式。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">html(默认)：将html原文本缩略。</span><br><span class=\"line\">striptags：将html原文本缩略，并删除所有标记。</span><br><span class=\"line\">raw：记下每一篇文章或每一页的文字。</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>配置2</strong></p>\n<p>主题文件下_config.yml文件添加下面的内容</p>\n<p> all：所有的文章和顶部导航选项的页面。</p>\n<p><img src=\"DrgbW9P7qj4biCTE_A4c6ObM-l6QlTw4E_tkh3PLgMI.png\" alt=\"image\"></p>\n<h2 id=\"添加搜索（JSON）\"><a href=\"#添加搜索（JSON）\" class=\"headerlink\" title=\"添加搜索（JSON）\"></a>添加搜索（JSON）</h2><p>上面我们使用.xml的方式做搜索。偶时候链接错误，出现undefined。</p>\n<p>网上的说法是：某些文章有格式问题，导致生成的search.xml也出错了。</p>\n<p>下面我们使用json格式的方式来实现该功能。</p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>在项目的_config.yml文件中把search.xml修改为search.json</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">原本：</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\"></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>找到主题的search.ejs模板文件，我这里的路径是：themes&#x2F;hexo-theme-cactus&#x2F;layout&#x2F;_partial&#x2F;search.ejs</p>\n<p>我这里的这个主题不需要修改。其它主题的修改方式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script <span class=\"built_in\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\">$(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;lets go！&quot;</span>);</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span>);</span><br><span class=\"line\">    searchFunc(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span> + <span class=\"string\">&quot;search.xml&quot;</span>, <span class=\"string\">&#x27;searchInput&#x27;</span>, <span class=\"string\">&#x27;searchResult&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script <span class=\"built_in\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\">$(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;lets go！&quot;</span>);</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span>);</span><br><span class=\"line\">    searchFunc(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span> + <span class=\"string\">&quot;search.json&quot;</span>, <span class=\"string\">&#x27;searchInput&#x27;</span>, <span class=\"string\">&#x27;searchResult&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后一步\"><a href=\"#最后一步\" class=\"headerlink\" title=\"最后一步\"></a>最后一步</h3><p>修改你的search的本地js文件，我这里的路径是：themes&#x2F;hexo-theme-cactus&#x2F;source&#x2F;js&#x2F;search.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">原本：</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;xml&quot;</span>,</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(xmlResponse) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(datas) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">还需要注释掉：</span><br><span class=\"line\">      // get the contents from search data</span><br><span class=\"line\">      // var datas = $(<span class=\"string\">&quot;entry&quot;</span>, xmlResponse).map(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      //   <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      //     title: $(<span class=\"string\">&quot;title&quot;</span>, this).text(),</span><br><span class=\"line\">      //     content: $(<span class=\"string\">&quot;content&quot;</span>, this).text(),</span><br><span class=\"line\">      //     url: $(<span class=\"string\">&quot;link&quot;</span>, this).attr(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">      //   &#125;;</span><br><span class=\"line\">      // &#125;).get();</span><br></pre></td></tr></table></figure>\n<p>最终结果为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// A <span class=\"built_in\">local</span> search script with the <span class=\"built_in\">help</span> of</span><br><span class=\"line\">// [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)</span><br><span class=\"line\">// Copyright (C) 2015</span><br><span class=\"line\">// Joseph Pan &lt;http://github.com/wzpan&gt;</span><br><span class=\"line\">// Shuhao Mao &lt;http://github.com/maoshuhao&gt;</span><br><span class=\"line\">// This library is free software; you can redistribute it and/or modify</span><br><span class=\"line\">// it under the terms of the GNU Lesser General Public License as</span><br><span class=\"line\">// published by the Free Software Foundation; either version 2.1 of the</span><br><span class=\"line\">// License, or (at your option) any later version.</span><br><span class=\"line\">//</span><br><span class=\"line\">// This library is distributed <span class=\"keyword\">in</span> the hope that it will be useful, but</span><br><span class=\"line\">// WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class=\"line\">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span><br><span class=\"line\">// Lesser General Public License <span class=\"keyword\">for</span> more details.</span><br><span class=\"line\">//</span><br><span class=\"line\">// You should have received a copy of the GNU Lesser General Public</span><br><span class=\"line\">// License along with this library; <span class=\"keyword\">if</span> not, write to the Free Software</span><br><span class=\"line\">// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span><br><span class=\"line\">// 02110-1301 USA</span><br><span class=\"line\">//</span><br><span class=\"line\">// Modified by:</span><br><span class=\"line\">// Pieter Robberechts &lt;http://github.com/probberechts&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/*exported searchFunc*/</span><br><span class=\"line\">var searchFunc = <span class=\"keyword\">function</span>(path, searchId, contentId) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> stripHtml(html) &#123;</span><br><span class=\"line\">    html = html.replace(/&lt;style([\\s\\S]*?)&lt;\\/style&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;script([\\s\\S]*?)&lt;\\/script&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;figure([\\s\\S]*?)&lt;\\/figure&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/div&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/li&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;li&gt;/ig, <span class=\"string\">&quot;  *  &quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/ul&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/p&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;br\\s*[\\/]?&gt;/gi, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;[^&gt;]+&gt;/ig, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">return</span> html;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> getAllCombinations(keywords) &#123;</span><br><span class=\"line\">    var i, j, result = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = 0; i &lt; keywords.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = i + 1; j &lt; keywords.length + 1; j++) &#123;</span><br><span class=\"line\">            result.push(keywords.slice(i, j).<span class=\"built_in\">join</span>(<span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  $.ajax(&#123;</span><br><span class=\"line\">    url: path,</span><br><span class=\"line\">    // dataType: <span class=\"string\">&quot;xml&quot;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">    //success: <span class=\"keyword\">function</span>(xmlResponse) &#123;</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(datas) &#123;</span><br><span class=\"line\">      // get the contents from search data</span><br><span class=\"line\">      // var datas = $(<span class=\"string\">&quot;entry&quot;</span>, xmlResponse).map(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      //   <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      //     title: $(<span class=\"string\">&quot;title&quot;</span>, this).text(),</span><br><span class=\"line\">      //     content: $(<span class=\"string\">&quot;content&quot;</span>, this).text(),</span><br><span class=\"line\">      //     url: $(<span class=\"string\">&quot;link&quot;</span>, this).attr(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">      //   &#125;;</span><br><span class=\"line\">      // &#125;).get();</span><br><span class=\"line\"></span><br><span class=\"line\">      var <span class=\"variable\">$input</span> = document.getElementById(searchId);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable\">$input</span>) &#123; <span class=\"built_in\">return</span>; &#125;</span><br><span class=\"line\">      var <span class=\"variable\">$resultContent</span> = document.getElementById(contentId);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable\">$input</span>.addEventListener(<span class=\"string\">&quot;input&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        var resultList = [];</span><br><span class=\"line\">        var keywords = getAllCombinations(this.value.trim().toLowerCase().<span class=\"built_in\">split</span>(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">          .<span class=\"built_in\">sort</span>(<span class=\"keyword\">function</span>(a,b) &#123; <span class=\"built_in\">return</span> b.split(<span class=\"string\">&quot; &quot;</span>).length - a.split(<span class=\"string\">&quot; &quot;</span>).length; &#125;);</span><br><span class=\"line\">        <span class=\"variable\">$resultContent</span>.innerHTML = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (this.value.trim().length &lt;= 0) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // perform <span class=\"built_in\">local</span> searching</span><br><span class=\"line\">        datas.forEach(<span class=\"keyword\">function</span>(data) &#123;</span><br><span class=\"line\">          var matches = 0;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (!data.title || data.title.trim() === <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            data.title = <span class=\"string\">&quot;Untitled&quot;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          var dataTitle = data.title.trim().toLowerCase();</span><br><span class=\"line\">          var dataTitleLowerCase = dataTitle.toLowerCase();</span><br><span class=\"line\">          var dataContent = stripHtml(data.content.trim());</span><br><span class=\"line\">          var dataContentLowerCase = dataContent.toLowerCase();</span><br><span class=\"line\">          var dataUrl = data.url;</span><br><span class=\"line\">          var indexTitle = -1;</span><br><span class=\"line\">          var indexContent = -1;</span><br><span class=\"line\">          var firstOccur = -1;</span><br><span class=\"line\">          // only match artiles with not empty contents</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (dataContent !== <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            keywords.forEach(<span class=\"keyword\">function</span>(keyword) &#123;</span><br><span class=\"line\">              indexTitle = dataTitleLowerCase.indexOf(keyword);</span><br><span class=\"line\">              indexContent = dataContentLowerCase.indexOf(keyword);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>( indexTitle &gt;= 0 || indexContent &gt;= 0 )&#123;</span><br><span class=\"line\">                matches += 1;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (indexContent &lt; 0) &#123;</span><br><span class=\"line\">                  indexContent = 0;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (firstOccur &lt; 0) &#123;</span><br><span class=\"line\">                  firstOccur = indexContent;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          // show search results</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (matches &gt; 0) &#123;</span><br><span class=\"line\">            var searchResult = &#123;&#125;;</span><br><span class=\"line\">            searchResult.rank = matches;</span><br><span class=\"line\">            searchResult.str = <span class=\"string\">&quot;&lt;li&gt;&lt;a href=&#x27;&quot;</span>+ dataUrl +<span class=\"string\">&quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot;</span>+ dataTitle +<span class=\"string\">&quot;&lt;/a&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (firstOccur &gt;= 0) &#123;</span><br><span class=\"line\">              // <span class=\"built_in\">cut</span> out 100 characters</span><br><span class=\"line\">              var start = firstOccur - 20;</span><br><span class=\"line\">              var end = firstOccur + 80;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(start &lt; 0)&#123;</span><br><span class=\"line\">                start = 0;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(start == 0)&#123;</span><br><span class=\"line\">                end = 100;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(end &gt; dataContent.length)&#123;</span><br><span class=\"line\">                end = dataContent.length;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              var matchContent = dataContent.substring(start, end);</span><br><span class=\"line\"></span><br><span class=\"line\">              // highlight all keywords</span><br><span class=\"line\">              var regS = new RegExp(keywords.join(<span class=\"string\">&quot;|&quot;</span>), <span class=\"string\">&quot;gi&quot;</span>);</span><br><span class=\"line\">              matchContent = matchContent.replace(regS, <span class=\"keyword\">function</span>(keyword) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> <span class=\"string\">&quot;&lt;em class=\\&quot;search-keyword\\&quot;&gt;&quot;</span>+keyword+<span class=\"string\">&quot;&lt;/em&gt;&quot;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">              searchResult.str += <span class=\"string\">&quot;&lt;p class=\\&quot;search-result\\&quot;&gt;&quot;</span> + matchContent +<span class=\"string\">&quot;...&lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            searchResult.str += <span class=\"string\">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\">            resultList.push(searchResult);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resultList.length) &#123;</span><br><span class=\"line\">          resultList.<span class=\"built_in\">sort</span>(<span class=\"keyword\">function</span>(a, b) &#123;</span><br><span class=\"line\">              <span class=\"built_in\">return</span> b.rank - a.rank;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          var result =<span class=\"string\">&quot;&lt;ul class=\\&quot;search-result-list\\&quot;&gt;&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (var i = 0; i &lt; resultList.length; i++) &#123;</span><br><span class=\"line\">            result += resultList[i].str;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          result += <span class=\"string\">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class=\"line\">          <span class=\"variable\">$resultContent</span>.innerHTML = result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>最终项目的_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  content: <span class=\"literal\">true</span></span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  <span class=\"built_in\">limit</span>: 10000</span><br></pre></td></tr></table></figure>\n<p>最终主题的_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># auto表示改变输入就自动触发搜索</span></span><br><span class=\"line\">  <span class=\"comment\"># manual表示按下回车键或搜索按钮才触发搜索</span></span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  <span class=\"comment\"># 这里的数字n表示显示每篇文章搜索到的n个结果</span></span><br><span class=\"line\">  <span class=\"comment\"># -1表示显示每篇文章搜索到的全部结果(不建议)</span></span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加标签页\"><a href=\"#添加标签页\" class=\"headerlink\" title=\"添加标签页\"></a>添加标签页</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p><img src=\"h1edlshktmHLnU9E-Xc1KebtW5e99chfzA5x7te3wSk.png\" alt=\"image\"></p>\n<p>根据上面的路径，找到index.md这个文件</p>\n<p>添加type: “tags” layout: “tags”到内容中，添加后是这样的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:30:23</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">layout: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"标签页实现标签云效果\"><a href=\"#标签页实现标签云效果\" class=\"headerlink\" title=\"标签页实现标签云效果\"></a>标签页实现标签云效果</h3><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-cloud  --save</span><br></pre></td></tr></table></figure>\n<p>找到 tagcloud.ejs 文件，完整路径：</p>\n<p>修改为以下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"文章添加标签\"><a href=\"#文章添加标签\" class=\"headerlink\" title=\"文章添加标签\"></a>文章添加标签</h3><p>在每篇文章的头部添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags and Categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-12-24 23:29:53</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Foo</span><br><span class=\"line\">- Bar</span><br></pre></td></tr></table></figure>\n<p><img src=\"RXQ6UuEFKLy3acWISocGXpbos58iF4Oyf40e6MiOpm0.png\" alt=\"image\"></p>\n<h2 id=\"新分类页\"><a href=\"#新分类页\" class=\"headerlink\" title=\"新分类页\"></a>新分类页</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>添加下面内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 23:32:13</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\">comments: <span class=\"literal\">false</span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>type</strong> 字段用来指定页面类型，<strong>comments</strong> 字段用来指定该页面是否显示评论。</p>\n<p>主题文件的_config.yml的nav添加个导航栏</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">category: /categories/</span><br></pre></td></tr></table></figure>\n<p>striptags：将html原文本缩略，并删除所有标记。</p>\n<p>先新建一个导航栏标签；在主题模板文件的_config.yml文件中设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nav:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  about: /about/</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建about页面\"><a href=\"#创建about页面\" class=\"headerlink\" title=\"创建about页面\"></a>创建about页面</h2><p>新建一个about的页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n<p>添加一些内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:49:29</span><br><span class=\"line\"><span class=\"built_in\">type</span>: about</span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"comment\">### 单体应用存在的问题</span></span><br><span class=\"line\"></span><br><span class=\"line\">- 随着业务的发展，开发变得越来越复杂。</span><br><span class=\"line\">- 修改、新增某个功能，需要对整个系统进行测试、重新部署。</span><br></pre></td></tr></table></figure>\n<p><img src=\"OMQaMoHEHKbp9hWjVkGDr_ImQo-eqhnO_1Kz8eCaoio.png\" alt=\"image\"></p>\n<h2 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h2><p>方法1：</p>\n<p>定位到我们项目的根目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&#x27;my-first-blog&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>hexo会帮我们在“项目\\source\\_posts”下生成相关.md文件</p>\n<p><img src=\"I6B9MllFXPDmu5BESAms0VYvcirUV-Wp8QyPlquzN6U.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: my-first-blog</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:40:49</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>方法2：</p>\n<p>直接自己打开“项目\\source\\_posts”新建.md文件</p>\n<p>在书写的文章头添加上日期即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags and Categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-12-24 23:29:53</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Foo</span><br><span class=\"line\">- Bar</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"BSXKfFqVvy9gbD0QiMuzv7Pr0zlOFyqPeRa51pvli0Y.png\" alt=\"image\"></p>\n<h2 id=\"博客访问量统计\"><a href=\"#博客访问量统计\" class=\"headerlink\" title=\"博客访问量统计\"></a>博客访问量统计</h2><p>进入.&#x2F;themes&#x2F;hexo-theme-cactus&#x2F;_config.yml添加下面一段代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 是否开启访问量统计功能(不蒜子)</span></span><br><span class=\"line\">busuanzi:</span><br><span class=\"line\"> <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>进入.&#x2F;themes&#x2F;hexo-theme-cactus&#x2F;layout&#x2F;_partial&#x2F;footer.ejs将添加下面内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;footer <span class=\"built_in\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;footer-left&quot;</span>&gt;</span><br><span class=\"line\">        &lt;%= __(<span class=\"string\">&#x27;footer.copyright&#x27;</span>) %&gt; &amp;copy;</span><br><span class=\"line\">        &lt;% var endYear = (theme.copyright &amp;&amp; theme.copyright.end_year) ? theme.copyright.end_year : new Date().getFullYear() %&gt;</span><br><span class=\"line\">        &lt;% var startYear = (theme.copyright &amp;&amp; theme.copyright.start_year) ? theme.copyright.start_year : new Date().getFullYear() %&gt;</span><br><span class=\"line\">        &lt;%= startYear &gt;= endYear ? endYear : startYear + <span class=\"string\">&quot;-&quot;</span> + endYear %&gt;</span><br><span class=\"line\">        &lt;%= config.author || config.title %&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;footer-right&quot;</span>&gt;</span><br><span class=\"line\">        &lt;nav&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">for</span> (var i <span class=\"keyword\">in</span> theme.nav) &#123; %&gt;&lt;!--</span><br><span class=\"line\">       --&gt;&lt;li&gt;&lt;a href=<span class=\"string\">&quot;&lt;%- url_for(theme.nav[i]) %&gt;&quot;</span>&gt;&lt;%= __(<span class=\"string\">&#x27;nav.&#x27;</span>+i).replace(<span class=\"string\">&quot;nav.&quot;</span>, <span class=\"string\">&quot;&quot;</span>) %&gt;&lt;/a&gt;&lt;/li&gt;&lt;!--</span><br><span class=\"line\">     --&gt;&lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class=\"line\">                    &lt;!-- 不蒜子统计 --&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">                  本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;span class=<span class=\"string\">&quot;post-meta-divider&quot;</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span> style=<span class=\"string\">&#x27;display:none&#x27;</span>&gt;</span><br><span class=\"line\">                      本站访客数&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;&lt;/span&gt;人</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">                &lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;/nav&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"poHJNJtonbsgvvQIBG8E41KtD96hIIGt4BJFaA_zc_4.png\" alt=\"image\"></p>\n<p><img src=\"PsVIGJRySYSQSslwM2YnUpiuRKCqnZ1W7Ly_0xeAZLA.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class=\"line\">                    &lt;!-- 不蒜子统计 --&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">                  本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">                &lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"文章添加图片\"><a href=\"#文章添加图片\" class=\"headerlink\" title=\"文章添加图片\"></a>文章添加图片</h2><h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-config-yml\"><a href=\"#修改-config-yml\" class=\"headerlink\" title=\"修改_config.yml\"></a>修改_config.yml</h3><p>打开hexo的配置文件_config.yml；找到 post_asset_folder，把这个选项从false改成true</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#加载图片用到</span></span><br><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"修改index-js\"><a href=\"#修改index-js\" class=\"headerlink\" title=\"修改index.js\"></a>修改index.js</h3><p>文件：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">/node_modules/hexo-asset-image/index.js</span><br></pre></td></tr></table></figure>\n<p>修改内容1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">58</span>行</span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, config.<span class=\"property\">root</span> + link + src);</span><br><span class=\"line\">修改为：</span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>,src);</span><br></pre></td></tr></table></figure>\n<p>修改内容2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">45</span>行</span><br><span class=\"line\">|| <span class=\"regexp\">/^\\s*\\/uploads|images\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\">修改为：</span><br><span class=\"line\">|| <span class=\"regexp\">/^\\s*\\/uploads|images1\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>最终代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPosition</span>(<span class=\"params\">str, m, i</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.<span class=\"title function_\">split</span>(m, i).<span class=\"title function_\">join</span>(m).<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = hexo.<span class=\"property\">config</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.<span class=\"property\">post_asset_folder</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = data.<span class=\"property\">permalink</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> beginPos = <span class=\"title function_\">getPosition</span>(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> appendLink = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class=\"line\">    <span class=\"comment\">// if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"regexp\">/.*\\/index\\.html$/</span>.<span class=\"title function_\">test</span>(link)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class=\"line\">      <span class=\"comment\">// image in xxtitle/ will go to xxtitle/index/</span></span><br><span class=\"line\">      appendLink = <span class=\"string\">&#x27;index/&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> endPos = link.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> endPos = link.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    link = link.<span class=\"title function_\">substring</span>(beginPos, endPos) + <span class=\"string\">&#x27;/&#x27;</span> + appendLink;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; toprocess.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> key = toprocess[i];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">var</span> $ = cheerio.<span class=\"title function_\">load</span>(data[key], &#123;</span><br><span class=\"line\">        <span class=\"attr\">ignoreWhitespace</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">xmlMode</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">lowerCaseTags</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">decodeEntities</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">          <span class=\"comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> src = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!(<span class=\"regexp\">/http[s]*.*|\\/\\/.*/</span>.<span class=\"title function_\">test</span>(src)</span><br><span class=\"line\">            || <span class=\"regexp\">/^\\s+\\//</span>.<span class=\"title function_\">test</span>(src)</span><br><span class=\"line\">            || <span class=\"regexp\">/^\\s*\\/uploads|images1\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class=\"line\">            <span class=\"comment\">// In addition, to support multi-level local directory.</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> linkArray = link.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> srcArray = src.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(srcArray.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            srcArray.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">            src = srcArray.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//$(this).attr(&#x27;src&#x27;, config.root + link + src);</span></span><br><span class=\"line\">            $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, src);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;src：&quot;</span> + src);<span class=\"comment\">//src：Fp7aKq--0PJJ6yD8kdJ6bU6csSL8UPnWsCQKPjaGIv0.png</span></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;update link as:--&gt;&quot;</span>+config.<span class=\"property\">root</span> + link + src);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;no src attr, skipped...&quot;</span>);</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data[key] = $.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Hexo"],"tags":["标签","Hexo"]}]